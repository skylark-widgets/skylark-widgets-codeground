{"version":3,"sources":["addons/markdown.js"],"names":["define","util","Coder","PluginMarkdown","[object Object]","coder","options","this","extend","window","marked","setOptions","$container","querySelector","innerHTML","on","change","bind","params","callback","type","content","err","plugin"],"mappings":";;;;;;;AAAAA,QACI,UACA,YACD,SAAUC,EAAKC,GACd,mBAEMC,EACFC,YAAYC,EAAOC,GAEfC,KAAKD,QAAUL,EAAKO,OAAOF,WACE,IAAlBG,OAAOC,SAGlBD,OAAOC,OAAOC,WAAWL,GACzBD,EAAMO,WAAWC,cAAc,6BAA6BC,UAAY,WACxET,EAAMU,GAAG,SAAUR,KAAKS,OAAOC,KAAKV,MAPrB,KASnBH,OAAOc,EAAQC,GACX,GAAoB,SAAhBD,EAAOE,KAAiB,CACxB,IACIF,EAAOG,QAAUZ,OAAOC,OAAOQ,EAAOG,SACxC,MAAOC,GACL,OAAOH,EAASG,EAAKJ,GAEzBC,EAAS,KAAMD,QAEfC,EAAS,KAAMD,IAO3B,OAFAhB,EAAMqB,OAAO,WAAYpB,GAElBA","file":"../../addons/markdown.js","sourcesContent":["define([\n    '../util',\n    \"../Coder\"\n], function (util,Coder) {\n    'use strict';\n    \n    class PluginMarkdown {\n        constructor(coder, options) {\n            var priority = 20;\n            this.options = util.extend(options, {});\n            if (typeof window.marked === 'undefined') {\n                return;\n            }\n            window.marked.setOptions(options);\n            coder.$container.querySelector('a[data-coder-type=\"html\"]').innerHTML = 'Markdown';\n            coder.on('change', this.change.bind(this), priority);\n        }\n        change(params, callback) {\n            if (params.type === 'html') {\n                try {\n                    params.content = window.marked(params.content);\n                } catch (err) {\n                    return callback(err, params);\n                }\n                callback(null, params);\n            } else {\n                callback(null, params);\n            }\n        }\n    };\n\n    Coder.plugin('markdown', PluginMarkdown);\n\n    return PluginMarkdown;\n});"]}