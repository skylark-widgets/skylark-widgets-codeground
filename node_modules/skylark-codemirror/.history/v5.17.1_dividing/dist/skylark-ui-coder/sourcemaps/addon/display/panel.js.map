{"version":3,"sources":["addon/display/panel.js"],"names":["define","CodeMirror","Panel","cm","node","options","height","this","cleared","initPanels","wrap","getWrapperElement","style","window","getComputedStyle","currentStyle","parseInt","info","state","panels","setHeight","heightLeft","wrapper","document","createElement","parentNode","insertBefore","hasFocus","appendChild","focus","_setSize","setSize","width","newHeight","px","exec","Number","offsetHeight","removePanels","replaceChild","defineExtension","cmWrapper","after","before","nextSibling","replace","clear","position","firstChild","prototype","removeChild","changed"],"mappings":"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","file":"../../../addon/display/panel.js","sourcesContent":["// CodeMirror, copyright (c) by Marijn Haverbeke and others\n// Distributed under an MIT license: http://codemirror.net/LICENSE\n\ndefine([\"../../Coder\"], function(CodeMirror) {\n  CodeMirror.defineExtension(\"addPanel\", function(node, options) {\n    options = options || {};\n\n    if (!this.state.panels) initPanels(this);\n\n    var info = this.state.panels;\n    var wrapper = info.wrapper;\n    var cmWrapper = this.getWrapperElement();\n\n    if (options.after instanceof Panel && !options.after.cleared) {\n      wrapper.insertBefore(node, options.before.node.nextSibling);\n    } else if (options.before instanceof Panel && !options.before.cleared) {\n      wrapper.insertBefore(node, options.before.node);\n    } else if (options.replace instanceof Panel && !options.replace.cleared) {\n      wrapper.insertBefore(node, options.replace.node);\n      options.replace.clear();\n    } else if (options.position == \"bottom\") {\n      wrapper.appendChild(node);\n    } else if (options.position == \"before-bottom\") {\n      wrapper.insertBefore(node, cmWrapper.nextSibling);\n    } else if (options.position == \"after-top\") {\n      wrapper.insertBefore(node, cmWrapper);\n    } else {\n      wrapper.insertBefore(node, wrapper.firstChild);\n    }\n\n    var height = (options && options.height) || node.offsetHeight;\n    this._setSize(null, info.heightLeft -= height);\n    info.panels++;\n    return new Panel(this, node, options, height);\n  });\n\n  function Panel(cm, node, options, height) {\n    this.cm = cm;\n    this.node = node;\n    this.options = options;\n    this.height = height;\n    this.cleared = false;\n  }\n\n  Panel.prototype.clear = function() {\n    if (this.cleared) return;\n    this.cleared = true;\n    var info = this.cm.state.panels;\n    this.cm._setSize(null, info.heightLeft += this.height);\n    info.wrapper.removeChild(this.node);\n    if (--info.panels == 0) removePanels(this.cm);\n  };\n\n  Panel.prototype.changed = function(height) {\n    var newHeight = height == null ? this.node.offsetHeight : height;\n    var info = this.cm.state.panels;\n    this.cm._setSize(null, info.height += (newHeight - this.height));\n    this.height = newHeight;\n  };\n\n  function initPanels(cm) {\n    var wrap = cm.getWrapperElement();\n    var style = window.getComputedStyle ? window.getComputedStyle(wrap) : wrap.currentStyle;\n    var height = parseInt(style.height);\n    var info = cm.state.panels = {\n      setHeight: wrap.style.height,\n      heightLeft: height,\n      panels: 0,\n      wrapper: document.createElement(\"div\")\n    };\n    wrap.parentNode.insertBefore(info.wrapper, wrap);\n    var hasFocus = cm.hasFocus();\n    info.wrapper.appendChild(wrap);\n    if (hasFocus) cm.focus();\n\n    cm._setSize = cm.setSize;\n    if (height != null) cm.setSize = function(width, newHeight) {\n      if (newHeight == null) return this._setSize(width, newHeight);\n      info.setHeight = newHeight;\n      if (typeof newHeight != \"number\") {\n        var px = /^(\\d+\\.?\\d*)px$/.exec(newHeight);\n        if (px) {\n          newHeight = Number(px[1]);\n        } else {\n          info.wrapper.style.height = newHeight;\n          newHeight = info.wrapper.offsetHeight;\n          info.wrapper.style.height = \"\";\n        }\n      }\n      cm._setSize(width, info.heightLeft += (newHeight - height));\n      height = newHeight;\n    };\n  }\n\n  function removePanels(cm) {\n    var info = cm.state.panels;\n    cm.state.panels = null;\n\n    var wrap = cm.getWrapperElement();\n    info.wrapper.parentNode.replaceChild(wrap, info.wrapper);\n    wrap.style.height = info.setHeight;\n    cm.setSize = cm._setSize;\n    cm.setSize();\n  }\n});\n"]}