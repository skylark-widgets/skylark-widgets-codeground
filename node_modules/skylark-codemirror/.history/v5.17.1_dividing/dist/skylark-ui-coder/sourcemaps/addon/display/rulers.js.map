{"version":3,"sources":["addon/display/rulers.js"],"names":["define","CodeMirror","drawRulers","cm","state","rulerDiv","textContent","val","getOption","cw","defaultCharWidth","left","charCoords","Pos","firstLine","style","minHeight","display","scroller","offsetHeight","i","length","elt","document","createElement","className","col","conf","column","color","borderColor","lineStyle","borderLeftStyle","width","borderLeftWidth","appendChild","defineOption","lineSpace","removeChild","off","insertBefore","cursorDiv","on"],"mappings":";;;;;;;AAGAA,QAAQ,eAAgB,SAASC,GAC/B,YAgBA,SAASC,GAAWC,GAClBA,EAAGC,MAAMC,SAASC,YAAc,EAChC,IAAIC,GAAMJ,EAAGK,UAAU,UACnBC,EAAKN,EAAGO,mBACRC,EAAOR,EAAGS,WAAWX,EAAWY,IAAIV,EAAGW,YAAa,GAAI,OAAOH,IACnER,GAAGC,MAAMC,SAASU,MAAMC,UAAab,EAAGc,QAAQC,SAASC,aAAe,GAAM,IAC9E,KAAK,GAAIC,GAAI,EAAGA,EAAIb,EAAIc,OAAQD,IAAK,CACnC,GAAIE,GAAMC,SAASC,cAAc,MACjCF,GAAIG,UAAY,kBAChB,IAAIC,GAAKC,EAAOpB,EAAIa,EACD,iBAARO,GACTD,EAAMC,GAEND,EAAMC,EAAKC,OACPD,EAAKF,YAAWH,EAAIG,WAAa,IAAME,EAAKF,WAC5CE,EAAKE,QAAOP,EAAIP,MAAMe,YAAcH,EAAKE,OACzCF,EAAKI,YAAWT,EAAIP,MAAMiB,gBAAkBL,EAAKI,WACjDJ,EAAKM,QAAOX,EAAIP,MAAMmB,gBAAkBP,EAAKM,QAEnDX,EAAIP,MAAMJ,KAAQA,EAAOe,EAAMjB,EAAM,KACrCN,EAAGC,MAAMC,SAAS8B,YAAYb,IAlClCrB,EAAWmC,aAAa,UAAU,EAAO,SAASjC,EAAII,GAChDJ,EAAGC,MAAMC,WACXF,EAAGc,QAAQoB,UAAUC,YAAYnC,EAAGC,MAAMC,UAC1CF,EAAGC,MAAMC,SAAW,KACpBF,EAAGoC,IAAI,UAAWrC,IAEhBK,GAAOA,EAAIc,SACblB,EAAGC,MAAMC,SAAWF,EAAGc,QAAQoB,UAAUG,aAAajB,SAASC,cAAc,OAAQrB,EAAGc,QAAQwB,WAChGtC,EAAGC,MAAMC,SAASoB,UAAY,oBAC9BvB,EAAWC,GACXA,EAAGuC,GAAG,UAAWxC","file":"../../../addon/display/rulers.js","sourcesContent":["// CodeMirror, copyright (c) by Marijn Haverbeke and others\n// Distributed under an MIT license: http://codemirror.net/LICENSE\n\ndefine([\"../../Coder\"], function(CodeMirror) {\n  \"use strict\";\n\n  CodeMirror.defineOption(\"rulers\", false, function(cm, val) {\n    if (cm.state.rulerDiv) {\n      cm.display.lineSpace.removeChild(cm.state.rulerDiv)\n      cm.state.rulerDiv = null\n      cm.off(\"refresh\", drawRulers)\n    }\n    if (val && val.length) {\n      cm.state.rulerDiv = cm.display.lineSpace.insertBefore(document.createElement(\"div\"), cm.display.cursorDiv)\n      cm.state.rulerDiv.className = \"CodeMirror-rulers\"\n      drawRulers(cm)\n      cm.on(\"refresh\", drawRulers)\n    }\n  });\n\n  function drawRulers(cm) {\n    cm.state.rulerDiv.textContent = \"\"\n    var val = cm.getOption(\"rulers\");\n    var cw = cm.defaultCharWidth();\n    var left = cm.charCoords(CodeMirror.Pos(cm.firstLine(), 0), \"div\").left;\n    cm.state.rulerDiv.style.minHeight = (cm.display.scroller.offsetHeight + 30) + \"px\";\n    for (var i = 0; i < val.length; i++) {\n      var elt = document.createElement(\"div\");\n      elt.className = \"CodeMirror-ruler\";\n      var col, conf = val[i];\n      if (typeof conf == \"number\") {\n        col = conf;\n      } else {\n        col = conf.column;\n        if (conf.className) elt.className += \" \" + conf.className;\n        if (conf.color) elt.style.borderColor = conf.color;\n        if (conf.lineStyle) elt.style.borderLeftStyle = conf.lineStyle;\n        if (conf.width) elt.style.borderLeftWidth = conf.width;\n      }\n      elt.style.left = (left + col * cw) + \"px\";\n      cm.state.rulerDiv.appendChild(elt)\n    }\n  }\n});\n"]}