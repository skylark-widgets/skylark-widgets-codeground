{"version":3,"sources":["addon/fold/indent-fold.js"],"names":["define","CodeMirror","registerHelper","cm","start","tabSize","getOption","firstLine","getLine","line","test","getIndent","countColumn","myIndent","lastLineInFold","i","end","lastLine","curLine","curIndent","from","Pos","length","to"],"mappings":";;;;;;;AAGAA,QAAQ,eAAgB,SAASC,GACjC,YAEAA,GAAWC,eAAe,OAAQ,SAAU,SAASC,EAAIC,GACvD,GAAIC,GAAUF,EAAGG,UAAU,WAAYC,EAAYJ,EAAGK,QAAQJ,EAAMK,KACpE,IAAK,KAAKC,KAAKH,GAAf,CAQA,IAAK,GAPDI,GAAY,SAASF,GACvB,MAAOR,GAAWW,YAAYH,EAAM,KAAMJ,IAExCQ,EAAWF,EAAUJ,GACrBO,EAAiB,KAGZC,EAAIX,EAAMK,KAAO,EAAGO,EAAMb,EAAGc,WAAYF,GAAKC,IAAOD,EAAG,CAC/D,GAAIG,GAAUf,EAAGK,QAAQO,GACrBI,EAAYR,EAAUO,EAC1B,IAAIC,EAAYN,EAEdC,EAAiBC,MACZ,IAAK,KAAKL,KAAKQ,GAKpB,MAGJ,MAAIJ,IACFM,KAAMnB,EAAWoB,IAAIjB,EAAMK,KAAMF,EAAUe,QAC3CC,GAAItB,EAAWoB,IAAIP,EAAgBX,EAAGK,QAAQM,GAAgBQ,SAFhE","file":"../../../addon/fold/indent-fold.js","sourcesContent":["// CodeMirror, copyright (c) by Marijn Haverbeke and others\n// Distributed under an MIT license: http://codemirror.net/LICENSE\n\ndefine([\"../../Coder\"], function(CodeMirror) {\n\"use strict\";\n\nCodeMirror.registerHelper(\"fold\", \"indent\", function(cm, start) {\n  var tabSize = cm.getOption(\"tabSize\"), firstLine = cm.getLine(start.line);\n  if (!/\\S/.test(firstLine)) return;\n  var getIndent = function(line) {\n    return CodeMirror.countColumn(line, null, tabSize);\n  };\n  var myIndent = getIndent(firstLine);\n  var lastLineInFold = null;\n  // Go through lines until we find a line that definitely doesn't belong in\n  // the block we're folding, or to the end.\n  for (var i = start.line + 1, end = cm.lastLine(); i <= end; ++i) {\n    var curLine = cm.getLine(i);\n    var curIndent = getIndent(curLine);\n    if (curIndent > myIndent) {\n      // Lines with a greater indent are considered part of the block.\n      lastLineInFold = i;\n    } else if (!/\\S/.test(curLine)) {\n      // Empty lines might be breaks within the block we're trying to fold.\n    } else {\n      // A non-empty line at an indent equal to or less than ours marks the\n      // start of another block.\n      break;\n    }\n  }\n  if (lastLineInFold) return {\n    from: CodeMirror.Pos(start.line, firstLine.length),\n    to: CodeMirror.Pos(lastLineInFold, cm.getLine(lastLineInFold).length)\n  };\n});\n\n});\n"]}