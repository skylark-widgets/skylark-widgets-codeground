{"version":3,"sources":["addon/hint/css-hint.js"],"names":["define","CodeMirror","pseudoClasses","link","visited","active","hover","focus","first-letter","first-line","first-child","before","after","lang","registerHelper","cm","add","keywords","name","word","lastIndexOf","result","push","cur","getCursor","token","getTokenAt","inner","innerMode","getMode","state","mode","type","indexOf","string","list","from","Pos","line","start","to","end","ch","slice","test","spec","resolveMode","st","propertyKeywords","valueKeywords","colorKeywords","mediaTypes","mediaFeatures","length"],"mappings":";;;;;;;AAGAA,QAAQ,cAAe,sBAAuB,SAASC,GACrD,YAEA,IAAIC,IAAiBC,KAAM,EAAGC,QAAS,EAAGC,OAAQ,EAAGC,MAAO,EAAGC,MAAO,EACjDC,eAAgB,EAAGC,aAAc,EAAGC,cAAe,EACnDC,OAAQ,EAAGC,MAAO,EAAGC,KAAM,EAEhDZ,GAAWa,eAAe,OAAQ,MAAO,SAASC,GAiBhD,QAASC,GAAIC,GACX,IAAK,GAAIC,KAAQD,GACVE,GAAqC,GAA7BD,EAAKE,YAAYD,EAAM,IAClCE,EAAOC,KAAKJ,GAnBlB,GAAIK,GAAMR,EAAGS,YAAaC,EAAQV,EAAGW,WAAWH,GAC5CI,EAAQ1B,EAAW2B,UAAUb,EAAGc,UAAWJ,EAAMK,MACrD,IAAuB,OAAnBH,EAAMI,KAAKb,KAAf,CAEA,GAAkB,WAAdO,EAAMO,MAA2D,GAAtC,aAAaC,QAAQR,EAAMS,QACxD,OAAQC,MAAO,cAAeC,KAAMnC,EAAWoC,IAAId,EAAIe,KAAMb,EAAMc,OAC3DC,GAAIvC,EAAWoC,IAAId,EAAIe,KAAMb,EAAMgB,KAE7C,IAAIF,GAAQd,EAAMc,MAAOE,EAAMlB,EAAImB,GAAIvB,EAAOM,EAAMS,OAAOS,MAAM,EAAGF,EAAMF,EACtE,YAAWK,KAAKzB,KAClBA,EAAO,GAAIoB,EAAQE,EAAMlB,EAAImB,GAG/B,IAAIG,GAAO5C,EAAW6C,YAAY,YAE9BzB,KAOA0B,EAAKpB,EAAMG,MAAMA,KAarB,OAZU,UAANiB,GAAgC,cAAdtB,EAAMO,KAC1BhB,EAAId,GACW,SAAN6C,GAAuB,aAANA,EAC1B/B,EAAI6B,EAAKG,kBACM,QAAND,GAAsB,UAANA,GAAwB,MAANA,GAAoB,UAANA,GACzD/B,EAAI6B,EAAKI,eACTjC,EAAI6B,EAAKK,gBACM,SAANH,GAAuB,gBAANA,IAC1B/B,EAAI6B,EAAKM,YACTnC,EAAI6B,EAAKO,gBAGP/B,EAAOgC,QACTlB,KAAMd,EACNe,KAAMnC,EAAWoC,IAAId,EAAIe,KAAMC,GAC/BC,GAAIvC,EAAWoC,IAAId,EAAIe,KAAMG,IAH/B","file":"../../../addon/hint/css-hint.js","sourcesContent":["// CodeMirror, copyright (c) by Marijn Haverbeke and others\n// Distributed under an MIT license: http://codemirror.net/LICENSE\n\ndefine([\"../../Coder\", \"../../mode/css/css\"], function(CodeMirror) {\n  \"use strict\";\n\n  var pseudoClasses = {link: 1, visited: 1, active: 1, hover: 1, focus: 1,\n                       \"first-letter\": 1, \"first-line\": 1, \"first-child\": 1,\n                       before: 1, after: 1, lang: 1};\n\n  CodeMirror.registerHelper(\"hint\", \"css\", function(cm) {\n    var cur = cm.getCursor(), token = cm.getTokenAt(cur);\n    var inner = CodeMirror.innerMode(cm.getMode(), token.state);\n    if (inner.mode.name != \"css\") return;\n\n    if (token.type == \"keyword\" && \"!important\".indexOf(token.string) == 0)\n      return {list: [\"!important\"], from: CodeMirror.Pos(cur.line, token.start),\n              to: CodeMirror.Pos(cur.line, token.end)};\n\n    var start = token.start, end = cur.ch, word = token.string.slice(0, end - start);\n    if (/[^\\w$_-]/.test(word)) {\n      word = \"\"; start = end = cur.ch;\n    }\n\n    var spec = CodeMirror.resolveMode(\"text/css\");\n\n    var result = [];\n    function add(keywords) {\n      for (var name in keywords)\n        if (!word || name.lastIndexOf(word, 0) == 0)\n          result.push(name);\n    }\n\n    var st = inner.state.state;\n    if (st == \"pseudo\" || token.type == \"variable-3\") {\n      add(pseudoClasses);\n    } else if (st == \"block\" || st == \"maybeprop\") {\n      add(spec.propertyKeywords);\n    } else if (st == \"prop\" || st == \"parens\" || st == \"at\" || st == \"params\") {\n      add(spec.valueKeywords);\n      add(spec.colorKeywords);\n    } else if (st == \"media\" || st == \"media_parens\") {\n      add(spec.mediaTypes);\n      add(spec.mediaFeatures);\n    }\n\n    if (result.length) return {\n      list: result,\n      from: CodeMirror.Pos(cur.line, start),\n      to: CodeMirror.Pos(cur.line, end)\n    };\n  });\n});\n"]}