{"version":3,"sources":["addon/hint/show-hint.js"],"names":["define","CodeMirror","Completion","cm","options","this","widget","debounce","tick","startPos","getCursor","startLen","getLine","line","length","getSelection","self","on","activityFunc","cursorActivity","isNewCompletion","old","nw","moved","cmpPos","from","to","ch","parseOptions","pos","editor","hintOptions","out","prop","defaultOptions","undefined","hint","resolve","getText","completion","text","buildKeyMap","handle","addBinding","key","val","bound","baseMap","hasOwnProperty","ourMap","Up","moveFocus","Down","PageUp","menuSize","PageDown","Home","setFocus","End","Enter","pick","Tab","Esc","close","custom","customKeys","extra","extraKeys","getHintElement","hintsElement","el","nodeName","toUpperCase","parentNode","Widget","data","picked","hints","document","createElement","className","selectedHint","completions","list","i","elt","appendChild","cur","HINT_ELEMENT_CLASS","ACTIVE_HINT_ELEMENT_CLASS","render","createTextNode","displayText","hintId","cursorCoords","alignWithWord","left","top","bottom","below","style","winW","window","innerWidth","Math","max","body","offsetWidth","documentElement","winH","innerHeight","offsetHeight","container","box","getBoundingClientRect","overlapY","scrolls","scrollHeight","clientHeight","startScroll","getScrollInfo","height","curTop","cursor","overlapX","right","width","node","firstChild","nextSibling","paddingRight","display","nativeBarWidth","addKeyMap","keyMap","n","avoidWrap","changeActive","screenAmount","closeOnUnfocus","closingOnBlur","onBlur","setTimeout","onFocus","clearTimeout","onScroll","curScroll","getWrapperElement","newTop","point","pageYOffset","scrollTop","e","t","target","srcElement","completeOnSingleClick","focus","signal","applicableHelpers","helpers","somethingSelected","result","supportsSelection","push","fetchHints","callback","async","then","resolveAutoHints","words","getHelpers","resolved","run","app","getHelper","fromList","anyword","showHint","getHints","newOpts","defineExtension","selections","listSelections","head","anchor","state","completionActive","update","requestAnimationFrame","fn","cancelAnimationFrame","prototype","active","off","replaceRange","closeCharacters","test","charAt","disable","first","myTick","finishUpdate","completeSingle","removeChild","removeKeyMap","childNodes","replace","offsetTop","floor","registerHelper","token","getTokenAt","Pos","end","string","term","start","found","word","slice","commands","autocomplete","auto","defineOption"],"mappings":";;;;;;;AAGAA,QAAQ,eAAgB,SAASC,GAC/B,YAqCA,SAASC,GAAWC,EAAIC,GACtBC,KAAKF,GAAKA,EACVE,KAAKD,QAAUA,EACfC,KAAKC,OAAS,KACdD,KAAKE,SAAW,EAChBF,KAAKG,KAAO,EACZH,KAAKI,SAAWJ,KAAKF,GAAGO,UAAU,SAClCL,KAAKM,SAAWN,KAAKF,GAAGS,QAAQP,KAAKI,SAASI,MAAMC,OAAST,KAAKF,GAAGY,eAAeD,MAEpF,IAAIE,GAAOX,IACXF,GAAGc,GAAG,iBAAkBZ,KAAKa,aAAe,WAAaF,EAAKG,mBA+EhE,QAASC,GAAgBC,EAAKC,GAC5B,GAAIC,GAAQtB,EAAWuB,OAAOF,EAAGG,KAAMJ,EAAII,KAC3C,OAAOF,GAAQ,GAAKF,EAAIK,GAAGC,GAAKN,EAAII,KAAKE,IAAML,EAAGI,GAAGC,GAAKL,EAAGG,KAAKE,GAGpE,QAASC,GAAazB,EAAI0B,EAAKzB,GAC7B,GAAI0B,GAAS3B,EAAGC,QAAQ2B,YACpBC,IACJ,KAAK,GAAIC,KAAQC,GAAgBF,EAAIC,GAAQC,EAAeD,EAC5D,IAAIH,EAAQ,IAAK,GAAIG,KAAQH,GACNK,SAAjBL,EAAOG,KAAqBD,EAAIC,GAAQH,EAAOG,GACrD,IAAI7B,EAAS,IAAK,GAAI6B,KAAQ7B,GACN+B,SAAlB/B,EAAQ6B,KAAqBD,EAAIC,GAAQ7B,EAAQ6B,GAEvD,OADID,GAAII,KAAKC,UAASL,EAAII,KAAOJ,EAAII,KAAKC,QAAQlC,EAAI0B,IAC/CG,EAGT,QAASM,GAAQC,GACf,MAAyB,gBAAdA,GAA+BA,EAC9BA,EAAWC,KAGzB,QAASC,GAAYF,EAAYG,GAc/B,QAASC,GAAWC,EAAKC,GACvB,GAAIC,EAEFA,GADgB,gBAAPD,GACD,SAAS1C,GAAM,MAAO0C,GAAI1C,EAAIuC,IAE/BK,EAAQC,eAAeH,GACtBE,EAAQF,GAERA,EACVI,EAAOL,GAAOE,EAtBhB,GAAIC,IACFG,GAAI,WAAYR,EAAOS,eACvBC,KAAM,WAAYV,EAAOS,UAAU,IACnCE,OAAQ,WAAYX,EAAOS,WAAWT,EAAOY,WAAa,GAAG,IAC7DC,SAAU,WAAYb,EAAOS,UAAUT,EAAOY,WAAa,GAAG,IAC9DE,KAAM,WAAYd,EAAOe,SAAS,IAClCC,IAAK,WAAYhB,EAAOe,SAASf,EAAO5B,OAAS,IACjD6C,MAAOjB,EAAOkB,KACdC,IAAKnB,EAAOkB,KACZE,IAAKpB,EAAOqB,OAEVC,EAASzB,EAAWnC,QAAQ6D,WAC5BhB,EAASe,KAAcjB,CAY3B,IAAIiB,EACF,IAAK,GAAIpB,KAAOoB,GAAYA,EAAOhB,eAAeJ,IAChDD,EAAWC,EAAKoB,EAAOpB,GAC3B,IAAIsB,GAAQ3B,EAAWnC,QAAQ+D,SAC/B,IAAID,EACF,IAAK,GAAItB,KAAOsB,GAAWA,EAAMlB,eAAeJ,IAC9CD,EAAWC,EAAKsB,EAAMtB,GAC1B,OAAOK,GAGT,QAASmB,GAAeC,EAAcC,GACpC,KAAOA,GAAMA,GAAMD,GAAc,CAC/B,GAAkC,OAA9BC,EAAGC,SAASC,eAA0BF,EAAGG,YAAcJ,EAAc,MAAOC,EAChFA,GAAKA,EAAGG,YAIZ,QAASC,GAAOnC,EAAYoC,GAC1BtE,KAAKkC,WAAaA,EAClBlC,KAAKsE,KAAOA,EACZtE,KAAKuE,QAAS,CACd,IAAItE,GAASD,KAAMF,EAAKoC,EAAWpC,GAE/B0E,EAAQxE,KAAKwE,MAAQC,SAASC,cAAc,KAChDF,GAAMG,UAAY,mBAClB3E,KAAK4E,aAAeN,EAAKM,cAAgB,CAGzC,KAAK,GADDC,GAAcP,EAAKQ,KACdC,EAAI,EAAGA,EAAIF,EAAYpE,SAAUsE,EAAG,CAC3C,GAAIC,GAAMR,EAAMS,YAAYR,SAASC,cAAc,OAAQQ,EAAML,EAAYE,GACzEJ,EAAYQ,GAAsBJ,GAAK/E,KAAK4E,aAAe,GAAK,IAAMQ,EACrD,OAAjBF,EAAIP,YAAmBA,EAAYO,EAAIP,UAAY,IAAMA,GAC7DK,EAAIL,UAAYA,EACZO,EAAIG,OAAQH,EAAIG,OAAOL,EAAKV,EAAMY,GACjCF,EAAIC,YAAYR,SAASa,eAAeJ,EAAIK,aAAetD,EAAQiD,KACxEF,EAAIQ,OAAST,EAGf,GAAIvD,GAAM1B,EAAG2F,aAAavD,EAAWnC,QAAQ2F,cAAgBpB,EAAKlD,KAAO,MACrEuE,EAAOnE,EAAImE,KAAMC,EAAMpE,EAAIqE,OAAQC,GAAQ,CAC/CtB,GAAMuB,MAAMJ,KAAOA,EAAO,KAC1BnB,EAAMuB,MAAMH,IAAMA,EAAM,IAExB,IAAII,GAAOC,OAAOC,YAAcC,KAAKC,IAAI3B,SAAS4B,KAAKC,YAAa7B,SAAS8B,gBAAgBD,aACzFE,EAAOP,OAAOQ,aAAeN,KAAKC,IAAI3B,SAAS4B,KAAKK,aAAcjC,SAAS8B,gBAAgBG,eAC9FxE,EAAWnC,QAAQ4G,WAAalC,SAAS4B,MAAMpB,YAAYT,EAC5D,IAAIoC,GAAMpC,EAAMqC,wBAAyBC,EAAWF,EAAIf,OAASW,EAC7DO,EAAUvC,EAAMwC,aAAexC,EAAMyC,aAAe,EACpDC,EAAcpH,EAAGqH,eAErB,IAAIL,EAAW,EAAG,CAChB,GAAIM,GAASR,EAAIf,OAASe,EAAIhB,IAAKyB,EAAS7F,EAAIoE,KAAOpE,EAAIqE,OAASe,EAAIhB,IACxE,IAAIyB,EAASD,EAAS,EACpB5C,EAAMuB,MAAMH,KAAOA,EAAMpE,EAAIoE,IAAMwB,GAAU,KAC7CtB,GAAQ,MACH,IAAIsB,EAASZ,EAAM,CACxBhC,EAAMuB,MAAMqB,OAAUZ,EAAO,EAAK,KAClChC,EAAMuB,MAAMH,KAAOA,EAAMpE,EAAIqE,OAASe,EAAIhB,KAAO,IACjD,IAAI0B,GAASxH,EAAGO,WACZiE,GAAKlD,KAAKE,IAAMgG,EAAOhG,KACzBE,EAAM1B,EAAG2F,aAAa6B,GACtB9C,EAAMuB,MAAMJ,MAAQA,EAAOnE,EAAImE,MAAQ,KACvCiB,EAAMpC,EAAMqC,0BAIlB,GAAIU,GAAWX,EAAIY,MAAQxB,CAQ3B,IAPIuB,EAAW,IACTX,EAAIY,MAAQZ,EAAIjB,KAAOK,IACzBxB,EAAMuB,MAAM0B,MAASzB,EAAO,EAAK,KACjCuB,GAAaX,EAAIY,MAAQZ,EAAIjB,KAAQK,GAEvCxB,EAAMuB,MAAMJ,MAAQA,EAAOnE,EAAImE,KAAO4B,GAAY,MAEhDR,EAAS,IAAK,GAAIW,GAAOlD,EAAMmD,WAAYD,EAAMA,EAAOA,EAAKE,YAC/DF,EAAK3B,MAAM8B,aAAe/H,EAAGgI,QAAQC,eAAiB,IAYxD,IAVAjI,EAAGkI,UAAUhI,KAAKiI,OAAS7F,EAAYF,GACrCY,UAAW,SAASoF,EAAGC,GAAalI,EAAOmI,aAAanI,EAAO2E,aAAesD,EAAGC,IACjF/E,SAAU,SAAS8E,GAAKjI,EAAOmI,aAAaF,IAC5CjF,SAAU,WAAa,MAAOhD,GAAOoI,gBACrC5H,OAAQoE,EAAYpE,OACpBiD,MAAO,WAAaxB,EAAWwB,SAC/BH,KAAM,WAAatD,EAAOsD,QAC1Be,KAAMA,KAGJpC,EAAWnC,QAAQuI,eAAgB,CACrC,GAAIC,EACJzI,GAAGc,GAAG,OAAQZ,KAAKwI,OAAS,WAAaD,EAAgBE,WAAW,WAAavG,EAAWwB,SAAY,OACxG5D,EAAGc,GAAG,QAASZ,KAAK0I,QAAU,WAAaC,aAAaJ,KA+B1D,MA5BAzI,GAAGc,GAAG,SAAUZ,KAAK4I,SAAW,WAC9B,GAAIC,GAAY/I,EAAGqH,gBAAiB1F,EAAS3B,EAAGgJ,oBAAoBjC,wBAChEkC,EAASnD,EAAMsB,EAAYtB,IAAMiD,EAAUjD,IAC3CoD,EAAQD,GAAU9C,OAAOgD,cAAgBxE,SAAS8B,iBAAmB9B,SAAS4B,MAAM6C,UAExF,OADKpD,KAAOkD,GAASxE,EAAMkC,cACvBsC,GAASvH,EAAOmE,KAAOoD,GAASvH,EAAOoE,OAAe3D,EAAWwB,SACrEc,EAAMuB,MAAMH,IAAMmD,EAAS,UAC3BvE,EAAMuB,MAAMJ,KAAQA,EAAOuB,EAAYvB,KAAOkD,EAAUlD,KAAQ,SAGlE/F,EAAWgB,GAAG4D,EAAO,WAAY,SAAS2E,GACxC,GAAIC,GAAIrF,EAAeS,EAAO2E,EAAEE,QAAUF,EAAEG,WACxCF,IAAiB,MAAZA,EAAE5D,SAAiBvF,EAAOmI,aAAagB,EAAE5D,QAASvF,EAAOsD,UAGpE3D,EAAWgB,GAAG4D,EAAO,QAAS,SAAS2E,GACrC,GAAIC,GAAIrF,EAAeS,EAAO2E,EAAEE,QAAUF,EAAEG,WACxCF,IAAiB,MAAZA,EAAE5D,SACTvF,EAAOmI,aAAagB,EAAE5D,QAClBtD,EAAWnC,QAAQwJ,uBAAuBtJ,EAAOsD,UAIzD3D,EAAWgB,GAAG4D,EAAO,YAAa,WAChCiE,WAAW,WAAW3I,EAAG0J,SAAW,MAGtC5J,EAAW6J,OAAOnF,EAAM,SAAUO,EAAY,GAAIL,EAAMmD,aACjD,EAmDT,QAAS+B,GAAkB5J,EAAI6J,GAC7B,IAAK7J,EAAG8J,oBAAqB,MAAOD,EAEpC,KAAK,GADDE,MACK9E,EAAI,EAAGA,EAAI4E,EAAQlJ,OAAQsE,IAC9B4E,EAAQ5E,GAAG+E,mBAAmBD,EAAOE,KAAKJ,EAAQ5E,GACxD,OAAO8E,GAGT,QAASG,GAAWjI,EAAMjC,EAAIC,EAASkK,GACrC,GAAIlI,EAAKmI,MACPnI,EAAKjC,EAAImK,EAAUlK,OACd,CACL,GAAI8J,GAAS9H,EAAKjC,EAAIC,EAClB8J,IAAUA,EAAOM,KAAMN,EAAOM,KAAKF,GAClCA,EAASJ,IAIlB,QAASO,GAAiBtK,EAAI0B,GAC5B,GAA0C6I,GAAtCV,EAAU7J,EAAGwK,WAAW9I,EAAK,OACjC,IAAImI,EAAQlJ,OAAQ,CAClB,GAAI8J,GAAW,SAASzK,EAAImK,EAAUlK,GAEpC,QAASyK,GAAIzF,GACX,MAAIA,IAAK0F,EAAIhK,OAAewJ,EAAS,UACrCD,GAAWS,EAAI1F,GAAIjF,EAAIC,EAAS,SAAS8J,GACnCA,GAAUA,EAAO/E,KAAKrE,OAAS,EAAGwJ,EAASJ,GAC1CW,EAAIzF,EAAI,KALjB,GAAI0F,GAAMf,EAAkB5J,EAAI6J,EAQhCa,GAAI,GAIN,OAFAD,GAASL,OAAQ,EACjBK,EAAST,mBAAoB,EACtBS,EACF,OAAIF,EAAQvK,EAAG4K,UAAU5K,EAAGO,YAAa,cACvC,SAASP,GAAM,MAAOF,GAAWmC,KAAK4I,SAAS7K,GAAKuK,MAAOA,KACzDzK,EAAWmC,KAAK6I,QAClB,SAAS9K,EAAIC,GAAW,MAAOH,GAAWmC,KAAK6I,QAAQ9K,EAAIC,IAE3D,aA/XX,GAAIoF,GAA4B,kBAC5BC,EAA4B,wBAIhCxF,GAAWiL,SAAW,SAAS/K,EAAIgL,EAAU/K,GAC3C,IAAK+K,EAAU,MAAOhL,GAAG+K,SAAS9K,EAC9BA,IAAWA,EAAQmK,QAAOY,EAASZ,OAAQ,EAC/C,IAAIa,IAAWhJ,KAAM+I,EACrB,IAAI/K,EAAS,IAAK,GAAI6B,KAAQ7B,GAASgL,EAAQnJ,GAAQ7B,EAAQ6B,EAC/D,OAAO9B,GAAG+K,SAASE,IAGrBnL,EAAWoL,gBAAgB,WAAY,SAASjL,GAC9CA,EAAUwB,EAAavB,KAAMA,KAAKK,UAAU,SAAUN,EACtD,IAAIkL,GAAajL,KAAKkL,gBACtB,MAAID,EAAWxK,OAAS,GAAxB,CAIA,GAAIT,KAAK4J,oBAAqB,CAC5B,IAAK7J,EAAQgC,KAAK+H,kBAAmB,MAErC,KAAK,GAAI/E,GAAI,EAAGA,EAAIkG,EAAWxK,OAAQsE,IACrC,GAAIkG,EAAWlG,GAAGoG,KAAK3K,MAAQyK,EAAWlG,GAAGqG,OAAO5K,KAAM,OAG1DR,KAAKqL,MAAMC,kBAAkBtL,KAAKqL,MAAMC,iBAAiB5H,OAC7D,IAAIxB,GAAalC,KAAKqL,MAAMC,iBAAmB,GAAIzL,GAAWG,KAAMD,EAC/DmC,GAAWnC,QAAQgC,OAExBnC,EAAW6J,OAAOzJ,KAAM,kBAAmBA,MAC3CkC,EAAWqJ,QAAO,MAgBpB,IAAIC,GAAwBvF,OAAOuF,uBAAyB,SAASC,GACnE,MAAOhD,YAAWgD,EAAI,IAAK,KAEzBC,EAAuBzF,OAAOyF,sBAAwB/C,YAE1D9I,GAAW8L,WACTjI,MAAO,WACA1D,KAAK4L,WACV5L,KAAKF,GAAGuL,MAAMC,iBAAmB,KACjCtL,KAAKG,KAAO,KACZH,KAAKF,GAAG+L,IAAI,iBAAkB7L,KAAKa,cAE/Bb,KAAKC,QAAUD,KAAKsE,MAAM1E,EAAW6J,OAAOzJ,KAAKsE,KAAM,SACvDtE,KAAKC,QAAQD,KAAKC,OAAOyD,QAC7B9D,EAAW6J,OAAOzJ,KAAKF,GAAI,gBAAiBE,KAAKF,MAGnD8L,OAAQ,WACN,MAAO5L,MAAKF,GAAGuL,MAAMC,kBAAoBtL,MAG3CuD,KAAM,SAASe,EAAMS,GACnB,GAAI7C,GAAaoC,EAAKQ,KAAKC,EACvB7C,GAAWH,KAAMG,EAAWH,KAAK/B,KAAKF,GAAIwE,EAAMpC,GAC/ClC,KAAKF,GAAGgM,aAAa7J,EAAQC,GAAaA,EAAWd,MAAQkD,EAAKlD,KAC7Cc,EAAWb,IAAMiD,EAAKjD,GAAI,YACpDzB,EAAW6J,OAAOnF,EAAM,OAAQpC,GAChClC,KAAK0D,SAGP5C,eAAgB,WACVd,KAAKE,WACPwL,EAAqB1L,KAAKE,UAC1BF,KAAKE,SAAW,EAGlB,IAAIsB,GAAMxB,KAAKF,GAAGO,YAAaG,EAAOR,KAAKF,GAAGS,QAAQiB,EAAIhB,KAC1D,IAAIgB,EAAIhB,MAAQR,KAAKI,SAASI,MAAQA,EAAKC,OAASe,EAAIF,IAAMtB,KAAKM,SAAWN,KAAKI,SAASkB,IACxFE,EAAIF,GAAKtB,KAAKI,SAASkB,IAAMtB,KAAKF,GAAG8J,qBACpCpI,EAAIF,IAAMtB,KAAKD,QAAQgM,gBAAgBC,KAAKxL,EAAKyL,OAAOzK,EAAIF,GAAK,IACpEtB,KAAK0D,YACA,CACL,GAAI/C,GAAOX,IACXA,MAAKE,SAAWsL,EAAsB,WAAY7K,EAAK4K,WACnDvL,KAAKC,QAAQD,KAAKC,OAAOiM,YAIjCX,OAAQ,SAASY,GACf,GAAiB,MAAbnM,KAAKG,KAAT,CACA,GAAIQ,GAAOX,KAAMoM,IAAWpM,KAAKG,IACjC6J,GAAWhK,KAAKD,QAAQgC,KAAM/B,KAAKF,GAAIE,KAAKD,QAAS,SAASuE,GACxD3D,EAAKR,MAAQiM,GAAQzL,EAAK0L,aAAa/H,EAAM6H,OAIrDE,aAAc,SAAS/H,EAAM6H,GACvBnM,KAAKsE,MAAM1E,EAAW6J,OAAOzJ,KAAKsE,KAAM,SAE5C,IAAIC,GAAUvE,KAAKC,QAAUD,KAAKC,OAAOsE,QAAY4H,GAASnM,KAAKD,QAAQuM,cACvEtM,MAAKC,QAAQD,KAAKC,OAAOyD,QAEzBY,GAAQtE,KAAKsE,MAAQvD,EAAgBf,KAAKsE,KAAMA,KACpDtE,KAAKsE,KAAOA,EAERA,GAAQA,EAAKQ,KAAKrE,SAChB8D,GAA8B,GAApBD,EAAKQ,KAAKrE,OACtBT,KAAKuD,KAAKe,EAAM,IAEhBtE,KAAKC,OAAS,GAAIoE,GAAOrE,KAAMsE,GAC/B1E,EAAW6J,OAAOnF,EAAM,cAiLhCD,EAAOsH,WACLjI,MAAO,WACL,GAAI1D,KAAKkC,WAAWjC,QAAUD,KAA9B,CACAA,KAAKkC,WAAWjC,OAAS,KACzBD,KAAKwE,MAAMJ,WAAWmI,YAAYvM,KAAKwE,OACvCxE,KAAKkC,WAAWpC,GAAG0M,aAAaxM,KAAKiI,OAErC,IAAInI,GAAKE,KAAKkC,WAAWpC,EACrBE,MAAKkC,WAAWnC,QAAQuI,iBAC1BxI,EAAG+L,IAAI,OAAQ7L,KAAKwI,QACpB1I,EAAG+L,IAAI,QAAS7L,KAAK0I,UAEvB5I,EAAG+L,IAAI,SAAU7L,KAAK4I,YAGxBsD,QAAS,WACPlM,KAAKkC,WAAWpC,GAAG0M,aAAaxM,KAAKiI,OACrC,IAAIhI,GAASD,IACbA,MAAKiI,QAAU3E,MAAO,WAAarD,EAAOsE,QAAS,IACnDvE,KAAKkC,WAAWpC,GAAGkI,UAAUhI,KAAKiI,SAGpC1E,KAAM,WACJvD,KAAKkC,WAAWqB,KAAKvD,KAAKsE,KAAMtE,KAAK4E,eAGvCwD,aAAc,SAASrD,EAAGoD,GAKxB,GAJIpD,GAAK/E,KAAKsE,KAAKQ,KAAKrE,OACtBsE,EAAIoD,EAAYnI,KAAKsE,KAAKQ,KAAKrE,OAAS,EAAI,EACrCsE,EAAI,IACXA,EAAIoD,EAAY,EAAKnI,KAAKsE,KAAKQ,KAAKrE,OAAS,GAC3CT,KAAK4E,cAAgBG,EAAzB,CACA,GAAI2C,GAAO1H,KAAKwE,MAAMiI,WAAWzM,KAAK4E,aACtC8C,GAAK/C,UAAY+C,EAAK/C,UAAU+H,QAAQ,IAAMtH,EAA2B,IACzEsC,EAAO1H,KAAKwE,MAAMiI,WAAWzM,KAAK4E,aAAeG,GACjD2C,EAAK/C,WAAa,IAAMS,EACpBsC,EAAKiF,UAAY3M,KAAKwE,MAAM0E,UAC9BlJ,KAAKwE,MAAM0E,UAAYxB,EAAKiF,UAAY,EACjCjF,EAAKiF,UAAYjF,EAAKhB,aAAe1G,KAAKwE,MAAM0E,UAAYlJ,KAAKwE,MAAMyC,eAC9EjH,KAAKwE,MAAM0E,UAAYxB,EAAKiF,UAAYjF,EAAKhB,aAAe1G,KAAKwE,MAAMyC,aAAe,GACxFrH,EAAW6J,OAAOzJ,KAAKsE,KAAM,SAAUtE,KAAKsE,KAAKQ,KAAK9E,KAAK4E,cAAe8C,KAG5EW,aAAc,WACZ,MAAOlC,MAAKyG,MAAM5M,KAAKwE,MAAMyC,aAAejH,KAAKwE,MAAMmD,WAAWjB,eAAiB,IAgDvF9G,EAAWiN,eAAe,OAAQ,QAChC7K,QAASoI,IAGXxK,EAAWiN,eAAe,OAAQ,WAAY,SAAS/M,EAAIC,GACzD,GAAImF,GAAMpF,EAAGO,YAAayM,EAAQhN,EAAGiN,WAAW7H,GAC5C7D,EAAKzB,EAAWoN,IAAI9H,EAAI1E,KAAMsM,EAAMG,IACxC,IAAIH,EAAMI,QAAU,KAAKlB,KAAKc,EAAMI,OAAOJ,EAAMI,OAAOzM,OAAS,IAC/D,GAAI0M,GAAOL,EAAMI,OAAQ9L,EAAOxB,EAAWoN,IAAI9H,EAAI1E,KAAMsM,EAAMM,WAE/D,IAAID,GAAO,GAAI/L,EAAOC,CAGxB,KAAK,GADDgM,MACKtI,EAAI,EAAGA,EAAIhF,EAAQsK,MAAM5J,OAAQsE,IAAK,CAC7C,GAAIuI,GAAOvN,EAAQsK,MAAMtF,EACrBuI,GAAKC,MAAM,EAAGJ,EAAK1M,SAAW0M,GAChCE,EAAMtD,KAAKuD,GAGf,GAAID,EAAM5M,OAAQ,OAAQqE,KAAMuI,EAAOjM,KAAMA,EAAMC,GAAIA,KAGzDzB,EAAW4N,SAASC,aAAe7N,EAAWiL,QAE9C,IAAIhJ,IACFE,KAAMnC,EAAWmC,KAAK2L,KACtBpB,gBAAgB,EAChB5G,eAAe,EACfqG,gBAAiB,mBACjBzD,gBAAgB,EAChBiB,uBAAuB,EACvB5C,UAAW,KACX/C,WAAY,KACZE,UAAW,KAGblE,GAAW+N,aAAa,cAAe","file":"../../../addon/hint/show-hint.js","sourcesContent":["// CodeMirror, copyright (c) by Marijn Haverbeke and others\n// Distributed under an MIT license: http://codemirror.net/LICENSE\n\ndefine([\"../../Coder\"], function(CodeMirror) {\n  \"use strict\";\n\n  var HINT_ELEMENT_CLASS        = \"CodeMirror-hint\";\n  var ACTIVE_HINT_ELEMENT_CLASS = \"CodeMirror-hint-active\";\n\n  // This is the old interface, kept around for now to stay\n  // backwards-compatible.\n  CodeMirror.showHint = function(cm, getHints, options) {\n    if (!getHints) return cm.showHint(options);\n    if (options && options.async) getHints.async = true;\n    var newOpts = {hint: getHints};\n    if (options) for (var prop in options) newOpts[prop] = options[prop];\n    return cm.showHint(newOpts);\n  };\n\n  CodeMirror.defineExtension(\"showHint\", function(options) {\n    options = parseOptions(this, this.getCursor(\"start\"), options);\n    var selections = this.listSelections()\n    if (selections.length > 1) return;\n    // By default, don't allow completion when something is selected.\n    // A hint function can have a `supportsSelection` property to\n    // indicate that it can handle selections.\n    if (this.somethingSelected()) {\n      if (!options.hint.supportsSelection) return;\n      // Don't try with cross-line selections\n      for (var i = 0; i < selections.length; i++)\n        if (selections[i].head.line != selections[i].anchor.line) return;\n    }\n\n    if (this.state.completionActive) this.state.completionActive.close();\n    var completion = this.state.completionActive = new Completion(this, options);\n    if (!completion.options.hint) return;\n\n    CodeMirror.signal(this, \"startCompletion\", this);\n    completion.update(true);\n  });\n\n  function Completion(cm, options) {\n    this.cm = cm;\n    this.options = options;\n    this.widget = null;\n    this.debounce = 0;\n    this.tick = 0;\n    this.startPos = this.cm.getCursor(\"start\");\n    this.startLen = this.cm.getLine(this.startPos.line).length - this.cm.getSelection().length;\n\n    var self = this;\n    cm.on(\"cursorActivity\", this.activityFunc = function() { self.cursorActivity(); });\n  }\n\n  var requestAnimationFrame = window.requestAnimationFrame || function(fn) {\n    return setTimeout(fn, 1000/60);\n  };\n  var cancelAnimationFrame = window.cancelAnimationFrame || clearTimeout;\n\n  Completion.prototype = {\n    close: function() {\n      if (!this.active()) return;\n      this.cm.state.completionActive = null;\n      this.tick = null;\n      this.cm.off(\"cursorActivity\", this.activityFunc);\n\n      if (this.widget && this.data) CodeMirror.signal(this.data, \"close\");\n      if (this.widget) this.widget.close();\n      CodeMirror.signal(this.cm, \"endCompletion\", this.cm);\n    },\n\n    active: function() {\n      return this.cm.state.completionActive == this;\n    },\n\n    pick: function(data, i) {\n      var completion = data.list[i];\n      if (completion.hint) completion.hint(this.cm, data, completion);\n      else this.cm.replaceRange(getText(completion), completion.from || data.from,\n                                completion.to || data.to, \"complete\");\n      CodeMirror.signal(data, \"pick\", completion);\n      this.close();\n    },\n\n    cursorActivity: function() {\n      if (this.debounce) {\n        cancelAnimationFrame(this.debounce);\n        this.debounce = 0;\n      }\n\n      var pos = this.cm.getCursor(), line = this.cm.getLine(pos.line);\n      if (pos.line != this.startPos.line || line.length - pos.ch != this.startLen - this.startPos.ch ||\n          pos.ch < this.startPos.ch || this.cm.somethingSelected() ||\n          (pos.ch && this.options.closeCharacters.test(line.charAt(pos.ch - 1)))) {\n        this.close();\n      } else {\n        var self = this;\n        this.debounce = requestAnimationFrame(function() {self.update();});\n        if (this.widget) this.widget.disable();\n      }\n    },\n\n    update: function(first) {\n      if (this.tick == null) return\n      var self = this, myTick = ++this.tick\n      fetchHints(this.options.hint, this.cm, this.options, function(data) {\n        if (self.tick == myTick) self.finishUpdate(data, first)\n      })\n    },\n\n    finishUpdate: function(data, first) {\n      if (this.data) CodeMirror.signal(this.data, \"update\");\n\n      var picked = (this.widget && this.widget.picked) || (first && this.options.completeSingle);\n      if (this.widget) this.widget.close();\n\n      if (data && this.data && isNewCompletion(this.data, data)) return;\n      this.data = data;\n\n      if (data && data.list.length) {\n        if (picked && data.list.length == 1) {\n          this.pick(data, 0);\n        } else {\n          this.widget = new Widget(this, data);\n          CodeMirror.signal(data, \"shown\");\n        }\n      }\n    }\n  };\n\n  function isNewCompletion(old, nw) {\n    var moved = CodeMirror.cmpPos(nw.from, old.from)\n    return moved > 0 && old.to.ch - old.from.ch != nw.to.ch - nw.from.ch\n  }\n\n  function parseOptions(cm, pos, options) {\n    var editor = cm.options.hintOptions;\n    var out = {};\n    for (var prop in defaultOptions) out[prop] = defaultOptions[prop];\n    if (editor) for (var prop in editor)\n      if (editor[prop] !== undefined) out[prop] = editor[prop];\n    if (options) for (var prop in options)\n      if (options[prop] !== undefined) out[prop] = options[prop];\n    if (out.hint.resolve) out.hint = out.hint.resolve(cm, pos)\n    return out;\n  }\n\n  function getText(completion) {\n    if (typeof completion == \"string\") return completion;\n    else return completion.text;\n  }\n\n  function buildKeyMap(completion, handle) {\n    var baseMap = {\n      Up: function() {handle.moveFocus(-1);},\n      Down: function() {handle.moveFocus(1);},\n      PageUp: function() {handle.moveFocus(-handle.menuSize() + 1, true);},\n      PageDown: function() {handle.moveFocus(handle.menuSize() - 1, true);},\n      Home: function() {handle.setFocus(0);},\n      End: function() {handle.setFocus(handle.length - 1);},\n      Enter: handle.pick,\n      Tab: handle.pick,\n      Esc: handle.close\n    };\n    var custom = completion.options.customKeys;\n    var ourMap = custom ? {} : baseMap;\n    function addBinding(key, val) {\n      var bound;\n      if (typeof val != \"string\")\n        bound = function(cm) { return val(cm, handle); };\n      // This mechanism is deprecated\n      else if (baseMap.hasOwnProperty(val))\n        bound = baseMap[val];\n      else\n        bound = val;\n      ourMap[key] = bound;\n    }\n    if (custom)\n      for (var key in custom) if (custom.hasOwnProperty(key))\n        addBinding(key, custom[key]);\n    var extra = completion.options.extraKeys;\n    if (extra)\n      for (var key in extra) if (extra.hasOwnProperty(key))\n        addBinding(key, extra[key]);\n    return ourMap;\n  }\n\n  function getHintElement(hintsElement, el) {\n    while (el && el != hintsElement) {\n      if (el.nodeName.toUpperCase() === \"LI\" && el.parentNode == hintsElement) return el;\n      el = el.parentNode;\n    }\n  }\n\n  function Widget(completion, data) {\n    this.completion = completion;\n    this.data = data;\n    this.picked = false;\n    var widget = this, cm = completion.cm;\n\n    var hints = this.hints = document.createElement(\"ul\");\n    hints.className = \"CodeMirror-hints\";\n    this.selectedHint = data.selectedHint || 0;\n\n    var completions = data.list;\n    for (var i = 0; i < completions.length; ++i) {\n      var elt = hints.appendChild(document.createElement(\"li\")), cur = completions[i];\n      var className = HINT_ELEMENT_CLASS + (i != this.selectedHint ? \"\" : \" \" + ACTIVE_HINT_ELEMENT_CLASS);\n      if (cur.className != null) className = cur.className + \" \" + className;\n      elt.className = className;\n      if (cur.render) cur.render(elt, data, cur);\n      else elt.appendChild(document.createTextNode(cur.displayText || getText(cur)));\n      elt.hintId = i;\n    }\n\n    var pos = cm.cursorCoords(completion.options.alignWithWord ? data.from : null);\n    var left = pos.left, top = pos.bottom, below = true;\n    hints.style.left = left + \"px\";\n    hints.style.top = top + \"px\";\n    // If we're at the edge of the screen, then we want the menu to appear on the left of the cursor.\n    var winW = window.innerWidth || Math.max(document.body.offsetWidth, document.documentElement.offsetWidth);\n    var winH = window.innerHeight || Math.max(document.body.offsetHeight, document.documentElement.offsetHeight);\n    (completion.options.container || document.body).appendChild(hints);\n    var box = hints.getBoundingClientRect(), overlapY = box.bottom - winH;\n    var scrolls = hints.scrollHeight > hints.clientHeight + 1\n    var startScroll = cm.getScrollInfo();\n\n    if (overlapY > 0) {\n      var height = box.bottom - box.top, curTop = pos.top - (pos.bottom - box.top);\n      if (curTop - height > 0) { // Fits above cursor\n        hints.style.top = (top = pos.top - height) + \"px\";\n        below = false;\n      } else if (height > winH) {\n        hints.style.height = (winH - 5) + \"px\";\n        hints.style.top = (top = pos.bottom - box.top) + \"px\";\n        var cursor = cm.getCursor();\n        if (data.from.ch != cursor.ch) {\n          pos = cm.cursorCoords(cursor);\n          hints.style.left = (left = pos.left) + \"px\";\n          box = hints.getBoundingClientRect();\n        }\n      }\n    }\n    var overlapX = box.right - winW;\n    if (overlapX > 0) {\n      if (box.right - box.left > winW) {\n        hints.style.width = (winW - 5) + \"px\";\n        overlapX -= (box.right - box.left) - winW;\n      }\n      hints.style.left = (left = pos.left - overlapX) + \"px\";\n    }\n    if (scrolls) for (var node = hints.firstChild; node; node = node.nextSibling)\n      node.style.paddingRight = cm.display.nativeBarWidth + \"px\"\n\n    cm.addKeyMap(this.keyMap = buildKeyMap(completion, {\n      moveFocus: function(n, avoidWrap) { widget.changeActive(widget.selectedHint + n, avoidWrap); },\n      setFocus: function(n) { widget.changeActive(n); },\n      menuSize: function() { return widget.screenAmount(); },\n      length: completions.length,\n      close: function() { completion.close(); },\n      pick: function() { widget.pick(); },\n      data: data\n    }));\n\n    if (completion.options.closeOnUnfocus) {\n      var closingOnBlur;\n      cm.on(\"blur\", this.onBlur = function() { closingOnBlur = setTimeout(function() { completion.close(); }, 100); });\n      cm.on(\"focus\", this.onFocus = function() { clearTimeout(closingOnBlur); });\n    }\n\n    cm.on(\"scroll\", this.onScroll = function() {\n      var curScroll = cm.getScrollInfo(), editor = cm.getWrapperElement().getBoundingClientRect();\n      var newTop = top + startScroll.top - curScroll.top;\n      var point = newTop - (window.pageYOffset || (document.documentElement || document.body).scrollTop);\n      if (!below) point += hints.offsetHeight;\n      if (point <= editor.top || point >= editor.bottom) return completion.close();\n      hints.style.top = newTop + \"px\";\n      hints.style.left = (left + startScroll.left - curScroll.left) + \"px\";\n    });\n\n    CodeMirror.on(hints, \"dblclick\", function(e) {\n      var t = getHintElement(hints, e.target || e.srcElement);\n      if (t && t.hintId != null) {widget.changeActive(t.hintId); widget.pick();}\n    });\n\n    CodeMirror.on(hints, \"click\", function(e) {\n      var t = getHintElement(hints, e.target || e.srcElement);\n      if (t && t.hintId != null) {\n        widget.changeActive(t.hintId);\n        if (completion.options.completeOnSingleClick) widget.pick();\n      }\n    });\n\n    CodeMirror.on(hints, \"mousedown\", function() {\n      setTimeout(function(){cm.focus();}, 20);\n    });\n\n    CodeMirror.signal(data, \"select\", completions[0], hints.firstChild);\n    return true;\n  }\n\n  Widget.prototype = {\n    close: function() {\n      if (this.completion.widget != this) return;\n      this.completion.widget = null;\n      this.hints.parentNode.removeChild(this.hints);\n      this.completion.cm.removeKeyMap(this.keyMap);\n\n      var cm = this.completion.cm;\n      if (this.completion.options.closeOnUnfocus) {\n        cm.off(\"blur\", this.onBlur);\n        cm.off(\"focus\", this.onFocus);\n      }\n      cm.off(\"scroll\", this.onScroll);\n    },\n\n    disable: function() {\n      this.completion.cm.removeKeyMap(this.keyMap);\n      var widget = this;\n      this.keyMap = {Enter: function() { widget.picked = true; }};\n      this.completion.cm.addKeyMap(this.keyMap);\n    },\n\n    pick: function() {\n      this.completion.pick(this.data, this.selectedHint);\n    },\n\n    changeActive: function(i, avoidWrap) {\n      if (i >= this.data.list.length)\n        i = avoidWrap ? this.data.list.length - 1 : 0;\n      else if (i < 0)\n        i = avoidWrap ? 0  : this.data.list.length - 1;\n      if (this.selectedHint == i) return;\n      var node = this.hints.childNodes[this.selectedHint];\n      node.className = node.className.replace(\" \" + ACTIVE_HINT_ELEMENT_CLASS, \"\");\n      node = this.hints.childNodes[this.selectedHint = i];\n      node.className += \" \" + ACTIVE_HINT_ELEMENT_CLASS;\n      if (node.offsetTop < this.hints.scrollTop)\n        this.hints.scrollTop = node.offsetTop - 3;\n      else if (node.offsetTop + node.offsetHeight > this.hints.scrollTop + this.hints.clientHeight)\n        this.hints.scrollTop = node.offsetTop + node.offsetHeight - this.hints.clientHeight + 3;\n      CodeMirror.signal(this.data, \"select\", this.data.list[this.selectedHint], node);\n    },\n\n    screenAmount: function() {\n      return Math.floor(this.hints.clientHeight / this.hints.firstChild.offsetHeight) || 1;\n    }\n  };\n\n  function applicableHelpers(cm, helpers) {\n    if (!cm.somethingSelected()) return helpers\n    var result = []\n    for (var i = 0; i < helpers.length; i++)\n      if (helpers[i].supportsSelection) result.push(helpers[i])\n    return result\n  }\n\n  function fetchHints(hint, cm, options, callback) {\n    if (hint.async) {\n      hint(cm, callback, options)\n    } else {\n      var result = hint(cm, options)\n      if (result && result.then) result.then(callback)\n      else callback(result)\n    }\n  }\n\n  function resolveAutoHints(cm, pos) {\n    var helpers = cm.getHelpers(pos, \"hint\"), words\n    if (helpers.length) {\n      var resolved = function(cm, callback, options) {\n        var app = applicableHelpers(cm, helpers);\n        function run(i) {\n          if (i == app.length) return callback(null)\n          fetchHints(app[i], cm, options, function(result) {\n            if (result && result.list.length > 0) callback(result)\n            else run(i + 1)\n          })\n        }\n        run(0)\n      }\n      resolved.async = true\n      resolved.supportsSelection = true\n      return resolved\n    } else if (words = cm.getHelper(cm.getCursor(), \"hintWords\")) {\n      return function(cm) { return CodeMirror.hint.fromList(cm, {words: words}) }\n    } else if (CodeMirror.hint.anyword) {\n      return function(cm, options) { return CodeMirror.hint.anyword(cm, options) }\n    } else {\n      return function() {}\n    }\n  }\n\n  CodeMirror.registerHelper(\"hint\", \"auto\", {\n    resolve: resolveAutoHints\n  });\n\n  CodeMirror.registerHelper(\"hint\", \"fromList\", function(cm, options) {\n    var cur = cm.getCursor(), token = cm.getTokenAt(cur);\n    var to = CodeMirror.Pos(cur.line, token.end);\n    if (token.string && /\\w/.test(token.string[token.string.length - 1])) {\n      var term = token.string, from = CodeMirror.Pos(cur.line, token.start);\n    } else {\n      var term = \"\", from = to;\n    }\n    var found = [];\n    for (var i = 0; i < options.words.length; i++) {\n      var word = options.words[i];\n      if (word.slice(0, term.length) == term)\n        found.push(word);\n    }\n\n    if (found.length) return {list: found, from: from, to: to};\n  });\n\n  CodeMirror.commands.autocomplete = CodeMirror.showHint;\n\n  var defaultOptions = {\n    hint: CodeMirror.hint.auto,\n    completeSingle: true,\n    alignWithWord: true,\n    closeCharacters: /[\\s()\\[\\]{};:>,]/,\n    closeOnUnfocus: true,\n    completeOnSingleClick: true,\n    container: null,\n    customKeys: null,\n    extraKeys: null\n  };\n\n  CodeMirror.defineOption(\"hintOptions\", null);\n});\n"]}