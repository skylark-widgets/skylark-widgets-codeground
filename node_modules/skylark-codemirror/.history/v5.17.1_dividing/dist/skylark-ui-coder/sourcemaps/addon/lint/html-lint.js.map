{"version":3,"sources":["addon/lint/html-lint.js"],"names":["define","CodeMirror","defaultRules","tagname-lowercase","attr-lowercase","attr-value-double-quotes","doctype-first","tag-pair","spec-char-escape","id-unique","src-not-empty","attr-no-duplication","registerHelper","text","options","found","window","HTMLHint","messages","verify","rules","i","length","message","startLine","line","endLine","startCol","col","endCol","push","from","Pos","to","severity","type"],"mappings":";;;;;;;AAOAA,QAAQ,cAAe,YAAa,SAASC,GAC3C,YAEA,IAAIC,IACFC,qBAAqB,EACrBC,kBAAkB,EAClBC,4BAA4B,EAC5BC,iBAAiB,EACjBC,YAAY,EACZC,oBAAoB,EACpBC,aAAa,EACbC,iBAAiB,EACjBC,uBAAuB,EAGzBV,GAAWW,eAAe,OAAQ,OAAQ,SAASC,EAAMC,GACvD,GAAIC,KACJ,KAAKC,OAAOC,SAAU,MAAOF,EAE7B,KAAK,GADDG,GAAWD,SAASE,OAAON,EAAMC,GAAWA,EAAQM,OAASlB,GACxDmB,EAAI,EAAGA,EAAIH,EAASI,OAAQD,IAAK,CACxC,GAAIE,GAAUL,EAASG,GACnBG,EAAYD,EAAQE,KAAO,EAAGC,EAAUH,EAAQE,KAAO,EAAGE,EAAWJ,EAAQK,IAAM,EAAGC,EAASN,EAAQK,GAC3Gb,GAAMe,MACJC,KAAM9B,EAAW+B,IAAIR,EAAWG,GAChCM,GAAIhC,EAAW+B,IAAIN,EAASG,GAC5BN,QAASA,EAAQA,QACjBW,SAAWX,EAAQY,OAGvB,MAAOpB","file":"../../../addon/lint/html-lint.js","sourcesContent":["// CodeMirror, copyright (c) by Marijn Haverbeke and others\n// Distributed under an MIT license: http://codemirror.net/LICENSE\n\n// Depends on htmlhint.js from http://htmlhint.com/js/htmlhint.js\n\n// declare global: HTMLHint\n\ndefine([\"../../Coder\", \"htmlhint\"], function(CodeMirror) {\n  \"use strict\";\n\n  var defaultRules = {\n    \"tagname-lowercase\": true,\n    \"attr-lowercase\": true,\n    \"attr-value-double-quotes\": true,\n    \"doctype-first\": false,\n    \"tag-pair\": true,\n    \"spec-char-escape\": true,\n    \"id-unique\": true,\n    \"src-not-empty\": true,\n    \"attr-no-duplication\": true\n  };\n\n  CodeMirror.registerHelper(\"lint\", \"html\", function(text, options) {\n    var found = [];\n    if (!window.HTMLHint) return found;\n    var messages = HTMLHint.verify(text, options && options.rules || defaultRules);\n    for (var i = 0; i < messages.length; i++) {\n      var message = messages[i];\n      var startLine = message.line - 1, endLine = message.line - 1, startCol = message.col - 1, endCol = message.col;\n      found.push({\n        from: CodeMirror.Pos(startLine, startCol),\n        to: CodeMirror.Pos(endLine, endCol),\n        message: message.message,\n        severity : message.type\n      });\n    }\n    return found;\n  });\n});\n"]}