{"version":3,"sources":["addon/lint/lint.js"],"names":["define","CodeMirror","showTooltip","e","content","position","tt","parentNode","style","top","Math","max","clientY","offsetHeight","left","clientX","off","document","createElement","className","appendChild","cloneNode","body","on","opacity","rm","elt","removeChild","hideTooltip","setTimeout","showTooltipFor","node","hide","tooltip","poll","setInterval","n","nodeType","host","clearInterval","LintState","cm","options","hasGutter","this","marked","timeout","onMouseOver","waitingFor","parseOptions","_cm","Function","getAnnotations","clearMarks","state","lint","clearGutter","GUTTER_ID","i","length","clear","makeMarker","labels","severity","multiple","tooltips","marker","inner","getMaxSeverity","a","b","groupByLine","annotations","lines","ann","line","from","push","annotationTooltip","tip","createTextNode","message","lintAsync","passOptions","abort","id","getValue","arg2","updateLinting","startLinting","getHelper","Pos","async","annotationsNotSorted","anns","maxSeverity","tipLabel","createDocumentFragment","formatAnnotation","to","markText","__annotation","setGutterMarker","onUpdateLinting","onChange","clearTimeout","delay","popupTooltips","target","srcElement","test","box","getBoundingClientRect","x","right","y","bottom","spans","findMarksAt","coordsChar","defineOption","val","old","Init","lintOnChange","getWrapperElement","gutters","getOption","hasLintGutter","defineExtension"],"mappings":"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","file":"../../../addon/lint/lint.js","sourcesContent":["// CodeMirror, copyright (c) by Marijn Haverbeke and others\n// Distributed under an MIT license: http://codemirror.net/LICENSE\n\ndefine([\"../../Coder\"], function(CodeMirror) {\n  \"use strict\";\n  var GUTTER_ID = \"CodeMirror-lint-markers\";\n\n  function showTooltip(e, content) {\n    var tt = document.createElement(\"div\");\n    tt.className = \"CodeMirror-lint-tooltip\";\n    tt.appendChild(content.cloneNode(true));\n    document.body.appendChild(tt);\n\n    function position(e) {\n      if (!tt.parentNode) return CodeMirror.off(document, \"mousemove\", position);\n      tt.style.top = Math.max(0, e.clientY - tt.offsetHeight - 5) + \"px\";\n      tt.style.left = (e.clientX + 5) + \"px\";\n    }\n    CodeMirror.on(document, \"mousemove\", position);\n    position(e);\n    if (tt.style.opacity != null) tt.style.opacity = 1;\n    return tt;\n  }\n  function rm(elt) {\n    if (elt.parentNode) elt.parentNode.removeChild(elt);\n  }\n  function hideTooltip(tt) {\n    if (!tt.parentNode) return;\n    if (tt.style.opacity == null) rm(tt);\n    tt.style.opacity = 0;\n    setTimeout(function() { rm(tt); }, 600);\n  }\n\n  function showTooltipFor(e, content, node) {\n    var tooltip = showTooltip(e, content);\n    function hide() {\n      CodeMirror.off(node, \"mouseout\", hide);\n      if (tooltip) { hideTooltip(tooltip); tooltip = null; }\n    }\n    var poll = setInterval(function() {\n      if (tooltip) for (var n = node;; n = n.parentNode) {\n        if (n && n.nodeType == 11) n = n.host;\n        if (n == document.body) return;\n        if (!n) { hide(); break; }\n      }\n      if (!tooltip) return clearInterval(poll);\n    }, 400);\n    CodeMirror.on(node, \"mouseout\", hide);\n  }\n\n  function LintState(cm, options, hasGutter) {\n    this.marked = [];\n    this.options = options;\n    this.timeout = null;\n    this.hasGutter = hasGutter;\n    this.onMouseOver = function(e) { onMouseOver(cm, e); };\n    this.waitingFor = 0\n  }\n\n  function parseOptions(_cm, options) {\n    if (options instanceof Function) return {getAnnotations: options};\n    if (!options || options === true) options = {};\n    return options;\n  }\n\n  function clearMarks(cm) {\n    var state = cm.state.lint;\n    if (state.hasGutter) cm.clearGutter(GUTTER_ID);\n    for (var i = 0; i < state.marked.length; ++i)\n      state.marked[i].clear();\n    state.marked.length = 0;\n  }\n\n  function makeMarker(labels, severity, multiple, tooltips) {\n    var marker = document.createElement(\"div\"), inner = marker;\n    marker.className = \"CodeMirror-lint-marker-\" + severity;\n    if (multiple) {\n      inner = marker.appendChild(document.createElement(\"div\"));\n      inner.className = \"CodeMirror-lint-marker-multiple\";\n    }\n\n    if (tooltips != false) CodeMirror.on(inner, \"mouseover\", function(e) {\n      showTooltipFor(e, labels, inner);\n    });\n\n    return marker;\n  }\n\n  function getMaxSeverity(a, b) {\n    if (a == \"error\") return a;\n    else return b;\n  }\n\n  function groupByLine(annotations) {\n    var lines = [];\n    for (var i = 0; i < annotations.length; ++i) {\n      var ann = annotations[i], line = ann.from.line;\n      (lines[line] || (lines[line] = [])).push(ann);\n    }\n    return lines;\n  }\n\n  function annotationTooltip(ann) {\n    var severity = ann.severity;\n    if (!severity) severity = \"error\";\n    var tip = document.createElement(\"div\");\n    tip.className = \"CodeMirror-lint-message-\" + severity;\n    tip.appendChild(document.createTextNode(ann.message));\n    return tip;\n  }\n\n  function lintAsync(cm, getAnnotations, passOptions) {\n    var state = cm.state.lint\n    var id = ++state.waitingFor\n    function abort() {\n      id = -1\n      cm.off(\"change\", abort)\n    }\n    cm.on(\"change\", abort)\n    getAnnotations(cm.getValue(), function(annotations, arg2) {\n      cm.off(\"change\", abort)\n      if (state.waitingFor != id) return\n      if (arg2 && annotations instanceof CodeMirror) annotations = arg2\n      updateLinting(cm, annotations)\n    }, passOptions, cm);\n  }\n\n  function startLinting(cm) {\n    var state = cm.state.lint, options = state.options;\n    var passOptions = options.options || options; // Support deprecated passing of `options` property in options\n    var getAnnotations = options.getAnnotations || cm.getHelper(CodeMirror.Pos(0, 0), \"lint\");\n    if (!getAnnotations) return;\n    if (options.async || getAnnotations.async) {\n      lintAsync(cm, getAnnotations, passOptions)\n    } else {\n      updateLinting(cm, getAnnotations(cm.getValue(), passOptions, cm));\n    }\n  }\n\n  function updateLinting(cm, annotationsNotSorted) {\n    clearMarks(cm);\n    var state = cm.state.lint, options = state.options;\n\n    var annotations = groupByLine(annotationsNotSorted);\n\n    for (var line = 0; line < annotations.length; ++line) {\n      var anns = annotations[line];\n      if (!anns) continue;\n\n      var maxSeverity = null;\n      var tipLabel = state.hasGutter && document.createDocumentFragment();\n\n      for (var i = 0; i < anns.length; ++i) {\n        var ann = anns[i];\n        var severity = ann.severity;\n        if (!severity) severity = \"error\";\n        maxSeverity = getMaxSeverity(maxSeverity, severity);\n\n        if (options.formatAnnotation) ann = options.formatAnnotation(ann);\n        if (state.hasGutter) tipLabel.appendChild(annotationTooltip(ann));\n\n        if (ann.to) state.marked.push(cm.markText(ann.from, ann.to, {\n          className: \"CodeMirror-lint-mark-\" + severity,\n          __annotation: ann\n        }));\n      }\n\n      if (state.hasGutter)\n        cm.setGutterMarker(line, GUTTER_ID, makeMarker(tipLabel, maxSeverity, anns.length > 1,\n                                                       state.options.tooltips));\n    }\n    if (options.onUpdateLinting) options.onUpdateLinting(annotationsNotSorted, annotations, cm);\n  }\n\n  function onChange(cm) {\n    var state = cm.state.lint;\n    if (!state) return;\n    clearTimeout(state.timeout);\n    state.timeout = setTimeout(function(){startLinting(cm);}, state.options.delay || 500);\n  }\n\n  function popupTooltips(annotations, e) {\n    var target = e.target || e.srcElement;\n    var tooltip = document.createDocumentFragment();\n    for (var i = 0; i < annotations.length; i++) {\n      var ann = annotations[i];\n      tooltip.appendChild(annotationTooltip(ann));\n    }\n    showTooltipFor(e, tooltip, target);\n  }\n\n  function onMouseOver(cm, e) {\n    var target = e.target || e.srcElement;\n    if (!/\\bCodeMirror-lint-mark-/.test(target.className)) return;\n    var box = target.getBoundingClientRect(), x = (box.left + box.right) / 2, y = (box.top + box.bottom) / 2;\n    var spans = cm.findMarksAt(cm.coordsChar({left: x, top: y}, \"client\"));\n\n    var annotations = [];\n    for (var i = 0; i < spans.length; ++i) {\n      var ann = spans[i].__annotation;\n      if (ann) annotations.push(ann);\n    }\n    if (annotations.length) popupTooltips(annotations, e);\n  }\n\n  CodeMirror.defineOption(\"lint\", false, function(cm, val, old) {\n    if (old && old != CodeMirror.Init) {\n      clearMarks(cm);\n      if (cm.state.lint.options.lintOnChange !== false)\n        cm.off(\"change\", onChange);\n      CodeMirror.off(cm.getWrapperElement(), \"mouseover\", cm.state.lint.onMouseOver);\n      clearTimeout(cm.state.lint.timeout);\n      delete cm.state.lint;\n    }\n\n    if (val) {\n      var gutters = cm.getOption(\"gutters\"), hasLintGutter = false;\n      for (var i = 0; i < gutters.length; ++i) if (gutters[i] == GUTTER_ID) hasLintGutter = true;\n      var state = cm.state.lint = new LintState(cm, parseOptions(cm, val), hasLintGutter);\n      if (state.options.lintOnChange !== false)\n        cm.on(\"change\", onChange);\n      if (state.options.tooltips != false)\n        CodeMirror.on(cm.getWrapperElement(), \"mouseover\", state.onMouseOver);\n\n      startLinting(cm);\n    }\n  });\n\n  CodeMirror.defineExtension(\"performLint\", function() {\n    if (this.state.lint) startLinting(this);\n  });\n});\n"]}