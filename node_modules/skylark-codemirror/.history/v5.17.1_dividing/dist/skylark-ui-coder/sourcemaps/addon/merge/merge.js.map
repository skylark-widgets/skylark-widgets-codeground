{"version":3,"sources":["addon/merge/merge.js"],"names":["define","CodeMirror","DiffView","mv","type","this","classes","chunk","start","end","insert","del","connect","ensureDiff","dv","diffOutOfDate","diff","getDiff","orig","getValue","edit","chunks","getChunks","signal","registerUpdate","update","mode","updating","updatingFast","svg","clear","copyButtons","clearMarks","marked","from","to","showDifferences","updateMarks","DIFF_INSERT","DIFF_DELETE","makeConnections","options","alignChunks","setDealign","fast","dealigned","set","clearTimeout","debounceChange","setTimeout","change","_cm","text","length","line","on","registerScroll","syncScroll","lockScroll","editor","other","now","Date","state","scrollSetBy","scrollSetAt","sInfo","getScrollInfo","targetPos","top","botDist","mix","halfScreen","clientHeight","midY","mid","lineAtHeight","around","chunkBoundariesAround","off","getOffsets","offOther","ratio","bot","height","otherInfo","botDistOther","scrollTo","left","after","lastLine","heightAtLine","before","setScrollLock","val","action","lockButton","innerHTML","arr","i","mark","TextMarker","parent","removeLineClass","vp","getViewport","operation","markChanges","marks","markChunk","bfrom","Math","max","bto","min","addLineClass","push","pos","Pos","clipPos","cls","chunkStart","part","tp","str","DIFF_EQUAL","cleanFrom","startOfLineClean","moveOver","cleanTo","endOfLineClean","a","posMax","b","posMin","posEq","markText","className","w","gap","offsetWidth","attrs","offsetHeight","vpEdit","vpOrig","outerTop","wrap","getBoundingClientRect","sTopEdit","getScrollerElement","sTopOrig","ch","editFrom","editTo","origFrom","origTo","drawConnectorsForChunk","getMatchingOrigLine","editLine","editStart","origStart","findAlignedLines","linesToAlign","j","align","splice","force","curOp","right","aligners","cm","scroll","ln","alignLines","lines","maxOffset","offset","padAbove","size","above","elt","document","createElement","style","minWidth","addLineWidget","flip","topLpx","topRpx","tmp","botLpx","botRpx","curveTop","curveBot","appendChild","createElementNS","svgNS","copy","editOriginals","allowEditingOriginals","title","topReverse","copyReverse","copyChunk","replaceRange","getRange","buildGap","lock","lockWrap","gapElts","revertButtons","e","node","target","srcElement","unshift","createSVGRect","asString","obj","dmp","diff_main","diff_cleanupSemantic","startEdit","startOrig","startOff","cleanFromEdit","cleanFromOrig","endOff","cleanToEdit","cleanToOrig","next","charCodeAt","last","n","nInEdit","beforeE","afterE","beforeO","afterO","fromLocal","toLocal","collapseSingle","widget","inclusiveLeft","inclusiveRight","replacedWith","clearOnEnter","collapseStretch","editors","unclearNearChunks","margin","l","collapseIdenticalStretches","firstLine","onCollapse","tag","content","cssText","createTextNode","count","childNodes","removeChild","firstChild","arguments","setAttribute","copyObj","prop","hasOwnProperty","out","at","nl","indexOf","findPrevDiff","isOrig","findNextDiff","goNearbyDiff","dir","found","views","diffViews","getCursor","Pass","setCursor","prototype","constructor","init","pane","value","readOnly","forceUpdate","setShowDifferences","MergeView","origLeft","origRight","hasLeft","hasRight","panes","self","leftPane","editPane","rightPane","wrapElt","collapseIdentical","onResize","window","resizeInterval","setInterval","p","parentNode","body","clearInterval","constuctor","rightOriginal","leftOriginal","rightChunks","leftChunks","diff_match_patch","commands","goNextDiff","goPrevDiff"],"mappings":"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","file":"../../../addon/merge/merge.js","sourcesContent":["// CodeMirror, copyright (c) by Marijn Haverbeke and others\n// Distributed under an MIT license: http://codemirror.net/LICENSE\n\n// declare global: diff_match_patch, DIFF_INSERT, DIFF_DELETE, DIFF_EQUAL\n\ndefine([\"../../Coder\", \"diff_match_patch\"], function(CodeMirror) {\n  \"use strict\";\n  var Pos = CodeMirror.Pos;\n  var svgNS = \"http://www.w3.org/2000/svg\";\n\n  function DiffView(mv, type) {\n    this.mv = mv;\n    this.type = type;\n    this.classes = type == \"left\"\n      ? {chunk: \"CodeMirror-merge-l-chunk\",\n         start: \"CodeMirror-merge-l-chunk-start\",\n         end: \"CodeMirror-merge-l-chunk-end\",\n         insert: \"CodeMirror-merge-l-inserted\",\n         del: \"CodeMirror-merge-l-deleted\",\n         connect: \"CodeMirror-merge-l-connect\"}\n      : {chunk: \"CodeMirror-merge-r-chunk\",\n         start: \"CodeMirror-merge-r-chunk-start\",\n         end: \"CodeMirror-merge-r-chunk-end\",\n         insert: \"CodeMirror-merge-r-inserted\",\n         del: \"CodeMirror-merge-r-deleted\",\n         connect: \"CodeMirror-merge-r-connect\"};\n  }\n\n  DiffView.prototype = {\n    constructor: DiffView,\n    init: function(pane, orig, options) {\n      this.edit = this.mv.edit;\n      (this.edit.state.diffViews || (this.edit.state.diffViews = [])).push(this);\n      this.orig = CodeMirror(pane, copyObj({value: orig, readOnly: !this.mv.options.allowEditingOriginals}, copyObj(options)));\n      this.orig.state.diffViews = [this];\n\n      this.diff = getDiff(asString(orig), asString(options.value));\n      this.chunks = getChunks(this.diff);\n      this.diffOutOfDate = this.dealigned = false;\n\n      this.showDifferences = options.showDifferences !== false;\n      this.forceUpdate = registerUpdate(this);\n      setScrollLock(this, true, false);\n      registerScroll(this);\n    },\n    setShowDifferences: function(val) {\n      val = val !== false;\n      if (val != this.showDifferences) {\n        this.showDifferences = val;\n        this.forceUpdate(\"full\");\n      }\n    }\n  };\n\n  function ensureDiff(dv) {\n    if (dv.diffOutOfDate) {\n      dv.diff = getDiff(dv.orig.getValue(), dv.edit.getValue());\n      dv.chunks = getChunks(dv.diff);\n      dv.diffOutOfDate = false;\n      CodeMirror.signal(dv.edit, \"updateDiff\", dv.diff);\n    }\n  }\n\n  var updating = false;\n  function registerUpdate(dv) {\n    var edit = {from: 0, to: 0, marked: []};\n    var orig = {from: 0, to: 0, marked: []};\n    var debounceChange, updatingFast = false;\n    function update(mode) {\n      updating = true;\n      updatingFast = false;\n      if (mode == \"full\") {\n        if (dv.svg) clear(dv.svg);\n        if (dv.copyButtons) clear(dv.copyButtons);\n        clearMarks(dv.edit, edit.marked, dv.classes);\n        clearMarks(dv.orig, orig.marked, dv.classes);\n        edit.from = edit.to = orig.from = orig.to = 0;\n      }\n      ensureDiff(dv);\n      if (dv.showDifferences) {\n        updateMarks(dv.edit, dv.diff, edit, DIFF_INSERT, dv.classes);\n        updateMarks(dv.orig, dv.diff, orig, DIFF_DELETE, dv.classes);\n      }\n      makeConnections(dv);\n\n      if (dv.mv.options.connect == \"align\")\n        alignChunks(dv);\n      updating = false;\n    }\n    function setDealign(fast) {\n      if (updating) return;\n      dv.dealigned = true;\n      set(fast);\n    }\n    function set(fast) {\n      if (updating || updatingFast) return;\n      clearTimeout(debounceChange);\n      if (fast === true) updatingFast = true;\n      debounceChange = setTimeout(update, fast === true ? 20 : 250);\n    }\n    function change(_cm, change) {\n      if (!dv.diffOutOfDate) {\n        dv.diffOutOfDate = true;\n        edit.from = edit.to = orig.from = orig.to = 0;\n      }\n      // Update faster when a line was added/removed\n      setDealign(change.text.length - 1 != change.to.line - change.from.line);\n    }\n    dv.edit.on(\"change\", change);\n    dv.orig.on(\"change\", change);\n    dv.edit.on(\"markerAdded\", setDealign);\n    dv.edit.on(\"markerCleared\", setDealign);\n    dv.orig.on(\"markerAdded\", setDealign);\n    dv.orig.on(\"markerCleared\", setDealign);\n    dv.edit.on(\"viewportChange\", function() { set(false); });\n    dv.orig.on(\"viewportChange\", function() { set(false); });\n    update();\n    return update;\n  }\n\n  function registerScroll(dv) {\n    dv.edit.on(\"scroll\", function() {\n      syncScroll(dv, DIFF_INSERT) && makeConnections(dv);\n    });\n    dv.orig.on(\"scroll\", function() {\n      syncScroll(dv, DIFF_DELETE) && makeConnections(dv);\n    });\n  }\n\n  function syncScroll(dv, type) {\n    // Change handler will do a refresh after a timeout when diff is out of date\n    if (dv.diffOutOfDate) return false;\n    if (!dv.lockScroll) return true;\n    var editor, other, now = +new Date;\n    if (type == DIFF_INSERT) { editor = dv.edit; other = dv.orig; }\n    else { editor = dv.orig; other = dv.edit; }\n    // Don't take action if the position of this editor was recently set\n    // (to prevent feedback loops)\n    if (editor.state.scrollSetBy == dv && (editor.state.scrollSetAt || 0) + 50 > now) return false;\n\n    var sInfo = editor.getScrollInfo();\n    if (dv.mv.options.connect == \"align\") {\n      targetPos = sInfo.top;\n    } else {\n      var halfScreen = .5 * sInfo.clientHeight, midY = sInfo.top + halfScreen;\n      var mid = editor.lineAtHeight(midY, \"local\");\n      var around = chunkBoundariesAround(dv.chunks, mid, type == DIFF_INSERT);\n      var off = getOffsets(editor, type == DIFF_INSERT ? around.edit : around.orig);\n      var offOther = getOffsets(other, type == DIFF_INSERT ? around.orig : around.edit);\n      var ratio = (midY - off.top) / (off.bot - off.top);\n      var targetPos = (offOther.top - halfScreen) + ratio * (offOther.bot - offOther.top);\n\n      var botDist, mix;\n      // Some careful tweaking to make sure no space is left out of view\n      // when scrolling to top or bottom.\n      if (targetPos > sInfo.top && (mix = sInfo.top / halfScreen) < 1) {\n        targetPos = targetPos * mix + sInfo.top * (1 - mix);\n      } else if ((botDist = sInfo.height - sInfo.clientHeight - sInfo.top) < halfScreen) {\n        var otherInfo = other.getScrollInfo();\n        var botDistOther = otherInfo.height - otherInfo.clientHeight - targetPos;\n        if (botDistOther > botDist && (mix = botDist / halfScreen) < 1)\n          targetPos = targetPos * mix + (otherInfo.height - otherInfo.clientHeight - botDist) * (1 - mix);\n      }\n    }\n\n    other.scrollTo(sInfo.left, targetPos);\n    other.state.scrollSetAt = now;\n    other.state.scrollSetBy = dv;\n    return true;\n  }\n\n  function getOffsets(editor, around) {\n    var bot = around.after;\n    if (bot == null) bot = editor.lastLine() + 1;\n    return {top: editor.heightAtLine(around.before || 0, \"local\"),\n            bot: editor.heightAtLine(bot, \"local\")};\n  }\n\n  function setScrollLock(dv, val, action) {\n    dv.lockScroll = val;\n    if (val && action != false) syncScroll(dv, DIFF_INSERT) && makeConnections(dv);\n    dv.lockButton.innerHTML = val ? \"\\u21db\\u21da\" : \"\\u21db&nbsp;&nbsp;\\u21da\";\n  }\n\n  // Updating the marks for editor content\n\n  function clearMarks(editor, arr, classes) {\n    for (var i = 0; i < arr.length; ++i) {\n      var mark = arr[i];\n      if (mark instanceof CodeMirror.TextMarker) {\n        mark.clear();\n      } else if (mark.parent) {\n        editor.removeLineClass(mark, \"background\", classes.chunk);\n        editor.removeLineClass(mark, \"background\", classes.start);\n        editor.removeLineClass(mark, \"background\", classes.end);\n      }\n    }\n    arr.length = 0;\n  }\n\n  // FIXME maybe add a margin around viewport to prevent too many updates\n  function updateMarks(editor, diff, state, type, classes) {\n    var vp = editor.getViewport();\n    editor.operation(function() {\n      if (state.from == state.to || vp.from - state.to > 20 || state.from - vp.to > 20) {\n        clearMarks(editor, state.marked, classes);\n        markChanges(editor, diff, type, state.marked, vp.from, vp.to, classes);\n        state.from = vp.from; state.to = vp.to;\n      } else {\n        if (vp.from < state.from) {\n          markChanges(editor, diff, type, state.marked, vp.from, state.from, classes);\n          state.from = vp.from;\n        }\n        if (vp.to > state.to) {\n          markChanges(editor, diff, type, state.marked, state.to, vp.to, classes);\n          state.to = vp.to;\n        }\n      }\n    });\n  }\n\n  function markChanges(editor, diff, type, marks, from, to, classes) {\n    var pos = Pos(0, 0);\n    var top = Pos(from, 0), bot = editor.clipPos(Pos(to - 1));\n    var cls = type == DIFF_DELETE ? classes.del : classes.insert;\n    function markChunk(start, end) {\n      var bfrom = Math.max(from, start), bto = Math.min(to, end);\n      for (var i = bfrom; i < bto; ++i) {\n        var line = editor.addLineClass(i, \"background\", classes.chunk);\n        if (i == start) editor.addLineClass(line, \"background\", classes.start);\n        if (i == end - 1) editor.addLineClass(line, \"background\", classes.end);\n        marks.push(line);\n      }\n      // When the chunk is empty, make sure a horizontal line shows up\n      if (start == end && bfrom == end && bto == end) {\n        if (bfrom)\n          marks.push(editor.addLineClass(bfrom - 1, \"background\", classes.end));\n        else\n          marks.push(editor.addLineClass(bfrom, \"background\", classes.start));\n      }\n    }\n\n    var chunkStart = 0;\n    for (var i = 0; i < diff.length; ++i) {\n      var part = diff[i], tp = part[0], str = part[1];\n      if (tp == DIFF_EQUAL) {\n        var cleanFrom = pos.line + (startOfLineClean(diff, i) ? 0 : 1);\n        moveOver(pos, str);\n        var cleanTo = pos.line + (endOfLineClean(diff, i) ? 1 : 0);\n        if (cleanTo > cleanFrom) {\n          if (i) markChunk(chunkStart, cleanFrom);\n          chunkStart = cleanTo;\n        }\n      } else {\n        if (tp == type) {\n          var end = moveOver(pos, str, true);\n          var a = posMax(top, pos), b = posMin(bot, end);\n          if (!posEq(a, b))\n            marks.push(editor.markText(a, b, {className: cls}));\n          pos = end;\n        }\n      }\n    }\n    if (chunkStart <= pos.line) markChunk(chunkStart, pos.line + 1);\n  }\n\n  // Updating the gap between editor and original\n\n  function makeConnections(dv) {\n    if (!dv.showDifferences) return;\n\n    if (dv.svg) {\n      clear(dv.svg);\n      var w = dv.gap.offsetWidth;\n      attrs(dv.svg, \"width\", w, \"height\", dv.gap.offsetHeight);\n    }\n    if (dv.copyButtons) clear(dv.copyButtons);\n\n    var vpEdit = dv.edit.getViewport(), vpOrig = dv.orig.getViewport();\n    var outerTop = dv.mv.wrap.getBoundingClientRect().top\n    var sTopEdit = outerTop - dv.edit.getScrollerElement().getBoundingClientRect().top + dv.edit.getScrollInfo().top\n    var sTopOrig = outerTop - dv.orig.getScrollerElement().getBoundingClientRect().top + dv.orig.getScrollInfo().top;\n    for (var i = 0; i < dv.chunks.length; i++) {\n      var ch = dv.chunks[i];\n      if (ch.editFrom <= vpEdit.to && ch.editTo >= vpEdit.from &&\n          ch.origFrom <= vpOrig.to && ch.origTo >= vpOrig.from)\n        drawConnectorsForChunk(dv, ch, sTopOrig, sTopEdit, w);\n    }\n  }\n\n  function getMatchingOrigLine(editLine, chunks) {\n    var editStart = 0, origStart = 0;\n    for (var i = 0; i < chunks.length; i++) {\n      var chunk = chunks[i];\n      if (chunk.editTo > editLine && chunk.editFrom <= editLine) return null;\n      if (chunk.editFrom > editLine) break;\n      editStart = chunk.editTo;\n      origStart = chunk.origTo;\n    }\n    return origStart + (editLine - editStart);\n  }\n\n  function findAlignedLines(dv, other) {\n    var linesToAlign = [];\n    for (var i = 0; i < dv.chunks.length; i++) {\n      var chunk = dv.chunks[i];\n      linesToAlign.push([chunk.origTo, chunk.editTo, other ? getMatchingOrigLine(chunk.editTo, other.chunks) : null]);\n    }\n    if (other) {\n      for (var i = 0; i < other.chunks.length; i++) {\n        var chunk = other.chunks[i];\n        for (var j = 0; j < linesToAlign.length; j++) {\n          var align = linesToAlign[j];\n          if (align[1] == chunk.editTo) {\n            j = -1;\n            break;\n          } else if (align[1] > chunk.editTo) {\n            break;\n          }\n        }\n        if (j > -1)\n          linesToAlign.splice(j - 1, 0, [getMatchingOrigLine(chunk.editTo, dv.chunks), chunk.editTo, chunk.origTo]);\n      }\n    }\n    return linesToAlign;\n  }\n\n  function alignChunks(dv, force) {\n    if (!dv.dealigned && !force) return;\n    if (!dv.orig.curOp) return dv.orig.operation(function() {\n      alignChunks(dv, force);\n    });\n\n    dv.dealigned = false;\n    var other = dv.mv.left == dv ? dv.mv.right : dv.mv.left;\n    if (other) {\n      ensureDiff(other);\n      other.dealigned = false;\n    }\n    var linesToAlign = findAlignedLines(dv, other);\n\n    // Clear old aligners\n    var aligners = dv.mv.aligners;\n    for (var i = 0; i < aligners.length; i++)\n      aligners[i].clear();\n    aligners.length = 0;\n\n    var cm = [dv.orig, dv.edit], scroll = [];\n    if (other) cm.push(other.orig);\n    for (var i = 0; i < cm.length; i++)\n      scroll.push(cm[i].getScrollInfo().top);\n\n    for (var ln = 0; ln < linesToAlign.length; ln++)\n      alignLines(cm, linesToAlign[ln], aligners);\n\n    for (var i = 0; i < cm.length; i++)\n      cm[i].scrollTo(null, scroll[i]);\n  }\n\n  function alignLines(cm, lines, aligners) {\n    var maxOffset = 0, offset = [];\n    for (var i = 0; i < cm.length; i++) if (lines[i] != null) {\n      var off = cm[i].heightAtLine(lines[i], \"local\");\n      offset[i] = off;\n      maxOffset = Math.max(maxOffset, off);\n    }\n    for (var i = 0; i < cm.length; i++) if (lines[i] != null) {\n      var diff = maxOffset - offset[i];\n      if (diff > 1)\n        aligners.push(padAbove(cm[i], lines[i], diff));\n    }\n  }\n\n  function padAbove(cm, line, size) {\n    var above = true;\n    if (line > cm.lastLine()) {\n      line--;\n      above = false;\n    }\n    var elt = document.createElement(\"div\");\n    elt.className = \"CodeMirror-merge-spacer\";\n    elt.style.height = size + \"px\"; elt.style.minWidth = \"1px\";\n    return cm.addLineWidget(line, elt, {height: size, above: above});\n  }\n\n  function drawConnectorsForChunk(dv, chunk, sTopOrig, sTopEdit, w) {\n    var flip = dv.type == \"left\";\n    var top = dv.orig.heightAtLine(chunk.origFrom, \"local\") - sTopOrig;\n    if (dv.svg) {\n      var topLpx = top;\n      var topRpx = dv.edit.heightAtLine(chunk.editFrom, \"local\") - sTopEdit;\n      if (flip) { var tmp = topLpx; topLpx = topRpx; topRpx = tmp; }\n      var botLpx = dv.orig.heightAtLine(chunk.origTo, \"local\") - sTopOrig;\n      var botRpx = dv.edit.heightAtLine(chunk.editTo, \"local\") - sTopEdit;\n      if (flip) { var tmp = botLpx; botLpx = botRpx; botRpx = tmp; }\n      var curveTop = \" C \" + w/2 + \" \" + topRpx + \" \" + w/2 + \" \" + topLpx + \" \" + (w + 2) + \" \" + topLpx;\n      var curveBot = \" C \" + w/2 + \" \" + botLpx + \" \" + w/2 + \" \" + botRpx + \" -1 \" + botRpx;\n      attrs(dv.svg.appendChild(document.createElementNS(svgNS, \"path\")),\n            \"d\", \"M -1 \" + topRpx + curveTop + \" L \" + (w + 2) + \" \" + botLpx + curveBot + \" z\",\n            \"class\", dv.classes.connect);\n    }\n    if (dv.copyButtons) {\n      var copy = dv.copyButtons.appendChild(elt(\"div\", dv.type == \"left\" ? \"\\u21dd\" : \"\\u21dc\",\n                                                \"CodeMirror-merge-copy\"));\n      var editOriginals = dv.mv.options.allowEditingOriginals;\n      copy.title = editOriginals ? \"Push to left\" : \"Revert chunk\";\n      copy.chunk = chunk;\n      copy.style.top = top + \"px\";\n\n      if (editOriginals) {\n        var topReverse = dv.orig.heightAtLine(chunk.editFrom, \"local\") - sTopEdit;\n        var copyReverse = dv.copyButtons.appendChild(elt(\"div\", dv.type == \"right\" ? \"\\u21dd\" : \"\\u21dc\",\n                                                         \"CodeMirror-merge-copy-reverse\"));\n        copyReverse.title = \"Push to right\";\n        copyReverse.chunk = {editFrom: chunk.origFrom, editTo: chunk.origTo,\n                             origFrom: chunk.editFrom, origTo: chunk.editTo};\n        copyReverse.style.top = topReverse + \"px\";\n        dv.type == \"right\" ? copyReverse.style.left = \"2px\" : copyReverse.style.right = \"2px\";\n      }\n    }\n  }\n\n  function copyChunk(dv, to, from, chunk) {\n    if (dv.diffOutOfDate) return;\n    var editStart = chunk.editTo > to.lastLine() ? Pos(chunk.editFrom - 1) : Pos(chunk.editFrom, 0)\n    var origStart = chunk.origTo > from.lastLine() ? Pos(chunk.origFrom - 1) : Pos(chunk.origFrom, 0)\n    to.replaceRange(from.getRange(origStart, Pos(chunk.origTo, 0)), editStart, Pos(chunk.editTo, 0))\n  }\n\n  // Merge view, containing 0, 1, or 2 diff views.\n\n  var MergeView = CodeMirror.MergeView = function(node, options) {\n    if (!(this instanceof MergeView)) return new MergeView(node, options);\n\n    this.options = options;\n    var origLeft = options.origLeft, origRight = options.origRight == null ? options.orig : options.origRight;\n\n    var hasLeft = origLeft != null, hasRight = origRight != null;\n    var panes = 1 + (hasLeft ? 1 : 0) + (hasRight ? 1 : 0);\n    var wrap = [], left = this.left = null, right = this.right = null;\n    var self = this;\n\n    if (hasLeft) {\n      left = this.left = new DiffView(this, \"left\");\n      var leftPane = elt(\"div\", null, \"CodeMirror-merge-pane\");\n      wrap.push(leftPane);\n      wrap.push(buildGap(left));\n    }\n\n    var editPane = elt(\"div\", null, \"CodeMirror-merge-pane\");\n    wrap.push(editPane);\n\n    if (hasRight) {\n      right = this.right = new DiffView(this, \"right\");\n      wrap.push(buildGap(right));\n      var rightPane = elt(\"div\", null, \"CodeMirror-merge-pane\");\n      wrap.push(rightPane);\n    }\n\n    (hasRight ? rightPane : editPane).className += \" CodeMirror-merge-pane-rightmost\";\n\n    wrap.push(elt(\"div\", null, null, \"height: 0; clear: both;\"));\n\n    var wrapElt = this.wrap = node.appendChild(elt(\"div\", wrap, \"CodeMirror-merge CodeMirror-merge-\" + panes + \"pane\"));\n    this.edit = CodeMirror(editPane, copyObj(options));\n\n    if (left) left.init(leftPane, origLeft, options);\n    if (right) right.init(rightPane, origRight, options);\n\n    if (options.collapseIdentical)\n      this.editor().operation(function() {\n        collapseIdenticalStretches(self, options.collapseIdentical);\n      });\n    if (options.connect == \"align\") {\n      this.aligners = [];\n      alignChunks(this.left || this.right, true);\n    }\n\n    var onResize = function() {\n      if (left) makeConnections(left);\n      if (right) makeConnections(right);\n    };\n    CodeMirror.on(window, \"resize\", onResize);\n    var resizeInterval = setInterval(function() {\n      for (var p = wrapElt.parentNode; p && p != document.body; p = p.parentNode) {}\n      if (!p) { clearInterval(resizeInterval); CodeMirror.off(window, \"resize\", onResize); }\n    }, 5000);\n  };\n\n  function buildGap(dv) {\n    var lock = dv.lockButton = elt(\"div\", null, \"CodeMirror-merge-scrolllock\");\n    lock.title = \"Toggle locked scrolling\";\n    var lockWrap = elt(\"div\", [lock], \"CodeMirror-merge-scrolllock-wrap\");\n    CodeMirror.on(lock, \"click\", function() { setScrollLock(dv, !dv.lockScroll); });\n    var gapElts = [lockWrap];\n    if (dv.mv.options.revertButtons !== false) {\n      dv.copyButtons = elt(\"div\", null, \"CodeMirror-merge-copybuttons-\" + dv.type);\n      CodeMirror.on(dv.copyButtons, \"click\", function(e) {\n        var node = e.target || e.srcElement;\n        if (!node.chunk) return;\n        if (node.className == \"CodeMirror-merge-copy-reverse\") {\n          copyChunk(dv, dv.orig, dv.edit, node.chunk);\n          return;\n        }\n        copyChunk(dv, dv.edit, dv.orig, node.chunk);\n      });\n      gapElts.unshift(dv.copyButtons);\n    }\n    if (dv.mv.options.connect != \"align\") {\n      var svg = document.createElementNS && document.createElementNS(svgNS, \"svg\");\n      if (svg && !svg.createSVGRect) svg = null;\n      dv.svg = svg;\n      if (svg) gapElts.push(svg);\n    }\n\n    return dv.gap = elt(\"div\", gapElts, \"CodeMirror-merge-gap\");\n  }\n\n  MergeView.prototype = {\n    constuctor: MergeView,\n    editor: function() { return this.edit; },\n    rightOriginal: function() { return this.right && this.right.orig; },\n    leftOriginal: function() { return this.left && this.left.orig; },\n    setShowDifferences: function(val) {\n      if (this.right) this.right.setShowDifferences(val);\n      if (this.left) this.left.setShowDifferences(val);\n    },\n    rightChunks: function() {\n      if (this.right) { ensureDiff(this.right); return this.right.chunks; }\n    },\n    leftChunks: function() {\n      if (this.left) { ensureDiff(this.left); return this.left.chunks; }\n    }\n  };\n\n  function asString(obj) {\n    if (typeof obj == \"string\") return obj;\n    else return obj.getValue();\n  }\n\n  // Operations on diffs\n\n  var dmp = new diff_match_patch();\n  function getDiff(a, b) {\n    var diff = dmp.diff_main(a, b);\n    dmp.diff_cleanupSemantic(diff);\n    // The library sometimes leaves in empty parts, which confuse the algorithm\n    for (var i = 0; i < diff.length; ++i) {\n      var part = diff[i];\n      if (!part[1]) {\n        diff.splice(i--, 1);\n      } else if (i && diff[i - 1][0] == part[0]) {\n        diff.splice(i--, 1);\n        diff[i][1] += part[1];\n      }\n    }\n    return diff;\n  }\n\n  function getChunks(diff) {\n    var chunks = [];\n    var startEdit = 0, startOrig = 0;\n    var edit = Pos(0, 0), orig = Pos(0, 0);\n    for (var i = 0; i < diff.length; ++i) {\n      var part = diff[i], tp = part[0];\n      if (tp == DIFF_EQUAL) {\n        var startOff = startOfLineClean(diff, i) ? 0 : 1;\n        var cleanFromEdit = edit.line + startOff, cleanFromOrig = orig.line + startOff;\n        moveOver(edit, part[1], null, orig);\n        var endOff = endOfLineClean(diff, i) ? 1 : 0;\n        var cleanToEdit = edit.line + endOff, cleanToOrig = orig.line + endOff;\n        if (cleanToEdit > cleanFromEdit) {\n          if (i) chunks.push({origFrom: startOrig, origTo: cleanFromOrig,\n                              editFrom: startEdit, editTo: cleanFromEdit});\n          startEdit = cleanToEdit; startOrig = cleanToOrig;\n        }\n      } else {\n        moveOver(tp == DIFF_INSERT ? edit : orig, part[1]);\n      }\n    }\n    if (startEdit <= edit.line || startOrig <= orig.line)\n      chunks.push({origFrom: startOrig, origTo: orig.line + 1,\n                   editFrom: startEdit, editTo: edit.line + 1});\n    return chunks;\n  }\n\n  function endOfLineClean(diff, i) {\n    if (i == diff.length - 1) return true;\n    var next = diff[i + 1][1];\n    if (next.length == 1 || next.charCodeAt(0) != 10) return false;\n    if (i == diff.length - 2) return true;\n    next = diff[i + 2][1];\n    return next.length > 1 && next.charCodeAt(0) == 10;\n  }\n\n  function startOfLineClean(diff, i) {\n    if (i == 0) return true;\n    var last = diff[i - 1][1];\n    if (last.charCodeAt(last.length - 1) != 10) return false;\n    if (i == 1) return true;\n    last = diff[i - 2][1];\n    return last.charCodeAt(last.length - 1) == 10;\n  }\n\n  function chunkBoundariesAround(chunks, n, nInEdit) {\n    var beforeE, afterE, beforeO, afterO;\n    for (var i = 0; i < chunks.length; i++) {\n      var chunk = chunks[i];\n      var fromLocal = nInEdit ? chunk.editFrom : chunk.origFrom;\n      var toLocal = nInEdit ? chunk.editTo : chunk.origTo;\n      if (afterE == null) {\n        if (fromLocal > n) { afterE = chunk.editFrom; afterO = chunk.origFrom; }\n        else if (toLocal > n) { afterE = chunk.editTo; afterO = chunk.origTo; }\n      }\n      if (toLocal <= n) { beforeE = chunk.editTo; beforeO = chunk.origTo; }\n      else if (fromLocal <= n) { beforeE = chunk.editFrom; beforeO = chunk.origFrom; }\n    }\n    return {edit: {before: beforeE, after: afterE}, orig: {before: beforeO, after: afterO}};\n  }\n\n  function collapseSingle(cm, from, to) {\n    cm.addLineClass(from, \"wrap\", \"CodeMirror-merge-collapsed-line\");\n    var widget = document.createElement(\"span\");\n    widget.className = \"CodeMirror-merge-collapsed-widget\";\n    widget.title = \"Identical text collapsed. Click to expand.\";\n    var mark = cm.markText(Pos(from, 0), Pos(to - 1), {\n      inclusiveLeft: true,\n      inclusiveRight: true,\n      replacedWith: widget,\n      clearOnEnter: true\n    });\n    function clear() {\n      mark.clear();\n      cm.removeLineClass(from, \"wrap\", \"CodeMirror-merge-collapsed-line\");\n    }\n    CodeMirror.on(widget, \"click\", clear);\n    return {mark: mark, clear: clear};\n  }\n\n  function collapseStretch(size, editors) {\n    var marks = [];\n    function clear() {\n      for (var i = 0; i < marks.length; i++) marks[i].clear();\n    }\n    for (var i = 0; i < editors.length; i++) {\n      var editor = editors[i];\n      var mark = collapseSingle(editor.cm, editor.line, editor.line + size);\n      marks.push(mark);\n      mark.mark.on(\"clear\", clear);\n    }\n    return marks[0].mark;\n  }\n\n  function unclearNearChunks(dv, margin, off, clear) {\n    for (var i = 0; i < dv.chunks.length; i++) {\n      var chunk = dv.chunks[i];\n      for (var l = chunk.editFrom - margin; l < chunk.editTo + margin; l++) {\n        var pos = l + off;\n        if (pos >= 0 && pos < clear.length) clear[pos] = false;\n      }\n    }\n  }\n\n  function collapseIdenticalStretches(mv, margin) {\n    if (typeof margin != \"number\") margin = 2;\n    var clear = [], edit = mv.editor(), off = edit.firstLine();\n    for (var l = off, e = edit.lastLine(); l <= e; l++) clear.push(true);\n    if (mv.left) unclearNearChunks(mv.left, margin, off, clear);\n    if (mv.right) unclearNearChunks(mv.right, margin, off, clear);\n\n    for (var i = 0; i < clear.length; i++) {\n      if (clear[i]) {\n        var line = i + off;\n        for (var size = 1; i < clear.length - 1 && clear[i + 1]; i++, size++) {}\n        if (size > margin) {\n          var editors = [{line: line, cm: edit}];\n          if (mv.left) editors.push({line: getMatchingOrigLine(line, mv.left.chunks), cm: mv.left.orig});\n          if (mv.right) editors.push({line: getMatchingOrigLine(line, mv.right.chunks), cm: mv.right.orig});\n          var mark = collapseStretch(size, editors);\n          if (mv.options.onCollapse) mv.options.onCollapse(mv, line, size, mark);\n        }\n      }\n    }\n  }\n\n  // General utilities\n\n  function elt(tag, content, className, style) {\n    var e = document.createElement(tag);\n    if (className) e.className = className;\n    if (style) e.style.cssText = style;\n    if (typeof content == \"string\") e.appendChild(document.createTextNode(content));\n    else if (content) for (var i = 0; i < content.length; ++i) e.appendChild(content[i]);\n    return e;\n  }\n\n  function clear(node) {\n    for (var count = node.childNodes.length; count > 0; --count)\n      node.removeChild(node.firstChild);\n  }\n\n  function attrs(elt) {\n    for (var i = 1; i < arguments.length; i += 2)\n      elt.setAttribute(arguments[i], arguments[i+1]);\n  }\n\n  function copyObj(obj, target) {\n    if (!target) target = {};\n    for (var prop in obj) if (obj.hasOwnProperty(prop)) target[prop] = obj[prop];\n    return target;\n  }\n\n  function moveOver(pos, str, copy, other) {\n    var out = copy ? Pos(pos.line, pos.ch) : pos, at = 0;\n    for (;;) {\n      var nl = str.indexOf(\"\\n\", at);\n      if (nl == -1) break;\n      ++out.line;\n      if (other) ++other.line;\n      at = nl + 1;\n    }\n    out.ch = (at ? 0 : out.ch) + (str.length - at);\n    if (other) other.ch = (at ? 0 : other.ch) + (str.length - at);\n    return out;\n  }\n\n  function posMin(a, b) { return (a.line - b.line || a.ch - b.ch) < 0 ? a : b; }\n  function posMax(a, b) { return (a.line - b.line || a.ch - b.ch) > 0 ? a : b; }\n  function posEq(a, b) { return a.line == b.line && a.ch == b.ch; }\n\n  function findPrevDiff(chunks, start, isOrig) {\n    for (var i = chunks.length - 1; i >= 0; i--) {\n      var chunk = chunks[i];\n      var to = (isOrig ? chunk.origTo : chunk.editTo) - 1;\n      if (to < start) return to;\n    }\n  }\n\n  function findNextDiff(chunks, start, isOrig) {\n    for (var i = 0; i < chunks.length; i++) {\n      var chunk = chunks[i];\n      var from = (isOrig ? chunk.origFrom : chunk.editFrom);\n      if (from > start) return from;\n    }\n  }\n\n  function goNearbyDiff(cm, dir) {\n    var found = null, views = cm.state.diffViews, line = cm.getCursor().line;\n    if (views) for (var i = 0; i < views.length; i++) {\n      var dv = views[i], isOrig = cm == dv.orig;\n      ensureDiff(dv);\n      var pos = dir < 0 ? findPrevDiff(dv.chunks, line, isOrig) : findNextDiff(dv.chunks, line, isOrig);\n      if (pos != null && (found == null || (dir < 0 ? pos > found : pos < found)))\n        found = pos;\n    }\n    if (found != null)\n      cm.setCursor(found, 0);\n    else\n      return CodeMirror.Pass;\n  }\n\n  CodeMirror.commands.goNextDiff = function(cm) {\n    return goNearbyDiff(cm, 1);\n  };\n  CodeMirror.commands.goPrevDiff = function(cm) {\n    return goNearbyDiff(cm, -1);\n  };\n});\n"]}