{"version":3,"sources":["addon/mode/simple.js"],"names":["define","CodeMirror","ensureState","states","name","hasOwnProperty","Error","toRegex","val","caret","flags","RegExp","ignoreCase","source","String","asToken","replace","result","i","length","push","Rule","data","next","this","regex","token","tokenFunction","config","stream","state","pending","pend","shift","pos","text","local","end","match","tok","endToken","localState","m","mode","endScan","exec","current","start","index","curState","rule","matches","sol","stack","pop","enterLocalMode","indent","indentation","indentUnit","dedent","j","backUp","join","cmp","a","b","props","prop","spec","pers","persistent","p","persistentStates","getMode","lState","startState","forceEnd","indexOf","arr","indentFunction","meta","textAfter","line","dontIndentStates","Pass","rules","scan","dedentIfLineStart","slice","defineSimpleMode","defineMode","simpleMode","states_","hasIndentation","list","orig","copyState","s","innerMode"],"mappings":"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","file":"../../../addon/mode/simple.js","sourcesContent":["// CodeMirror, copyright (c) by Marijn Haverbeke and others\n// Distributed under an MIT license: http://codemirror.net/LICENSE\n\ndefine([\"../../Coder\"], function(CodeMirror) {\n  \"use strict\";\n\n  CodeMirror.defineSimpleMode = function(name, states) {\n    CodeMirror.defineMode(name, function(config) {\n      return CodeMirror.simpleMode(config, states);\n    });\n  };\n\n  CodeMirror.simpleMode = function(config, states) {\n    ensureState(states, \"start\");\n    var states_ = {}, meta = states.meta || {}, hasIndentation = false;\n    for (var state in states) if (state != meta && states.hasOwnProperty(state)) {\n      var list = states_[state] = [], orig = states[state];\n      for (var i = 0; i < orig.length; i++) {\n        var data = orig[i];\n        list.push(new Rule(data, states));\n        if (data.indent || data.dedent) hasIndentation = true;\n      }\n    }\n    var mode = {\n      startState: function() {\n        return {state: \"start\", pending: null,\n                local: null, localState: null,\n                indent: hasIndentation ? [] : null};\n      },\n      copyState: function(state) {\n        var s = {state: state.state, pending: state.pending,\n                 local: state.local, localState: null,\n                 indent: state.indent && state.indent.slice(0)};\n        if (state.localState)\n          s.localState = CodeMirror.copyState(state.local.mode, state.localState);\n        if (state.stack)\n          s.stack = state.stack.slice(0);\n        for (var pers = state.persistentStates; pers; pers = pers.next)\n          s.persistentStates = {mode: pers.mode,\n                                spec: pers.spec,\n                                state: pers.state == state.localState ? s.localState : CodeMirror.copyState(pers.mode, pers.state),\n                                next: s.persistentStates};\n        return s;\n      },\n      token: tokenFunction(states_, config),\n      innerMode: function(state) { return state.local && {mode: state.local.mode, state: state.localState}; },\n      indent: indentFunction(states_, meta)\n    };\n    if (meta) for (var prop in meta) if (meta.hasOwnProperty(prop))\n      mode[prop] = meta[prop];\n    return mode;\n  };\n\n  function ensureState(states, name) {\n    if (!states.hasOwnProperty(name))\n      throw new Error(\"Undefined state \" + name + \" in simple mode\");\n  }\n\n  function toRegex(val, caret) {\n    if (!val) return /(?:)/;\n    var flags = \"\";\n    if (val instanceof RegExp) {\n      if (val.ignoreCase) flags = \"i\";\n      val = val.source;\n    } else {\n      val = String(val);\n    }\n    return new RegExp((caret === false ? \"\" : \"^\") + \"(?:\" + val + \")\", flags);\n  }\n\n  function asToken(val) {\n    if (!val) return null;\n    if (typeof val == \"string\") return val.replace(/\\./g, \" \");\n    var result = [];\n    for (var i = 0; i < val.length; i++)\n      result.push(val[i] && val[i].replace(/\\./g, \" \"));\n    return result;\n  }\n\n  function Rule(data, states) {\n    if (data.next || data.push) ensureState(states, data.next || data.push);\n    this.regex = toRegex(data.regex);\n    this.token = asToken(data.token);\n    this.data = data;\n  }\n\n  function tokenFunction(states, config) {\n    return function(stream, state) {\n      if (state.pending) {\n        var pend = state.pending.shift();\n        if (state.pending.length == 0) state.pending = null;\n        stream.pos += pend.text.length;\n        return pend.token;\n      }\n\n      if (state.local) {\n        if (state.local.end && stream.match(state.local.end)) {\n          var tok = state.local.endToken || null;\n          state.local = state.localState = null;\n          return tok;\n        } else {\n          var tok = state.local.mode.token(stream, state.localState), m;\n          if (state.local.endScan && (m = state.local.endScan.exec(stream.current())))\n            stream.pos = stream.start + m.index;\n          return tok;\n        }\n      }\n\n      var curState = states[state.state];\n      for (var i = 0; i < curState.length; i++) {\n        var rule = curState[i];\n        var matches = (!rule.data.sol || stream.sol()) && stream.match(rule.regex);\n        if (matches) {\n          if (rule.data.next) {\n            state.state = rule.data.next;\n          } else if (rule.data.push) {\n            (state.stack || (state.stack = [])).push(state.state);\n            state.state = rule.data.push;\n          } else if (rule.data.pop && state.stack && state.stack.length) {\n            state.state = state.stack.pop();\n          }\n\n          if (rule.data.mode)\n            enterLocalMode(config, state, rule.data.mode, rule.token);\n          if (rule.data.indent)\n            state.indent.push(stream.indentation() + config.indentUnit);\n          if (rule.data.dedent)\n            state.indent.pop();\n          if (matches.length > 2) {\n            state.pending = [];\n            for (var j = 2; j < matches.length; j++)\n              if (matches[j])\n                state.pending.push({text: matches[j], token: rule.token[j - 1]});\n            stream.backUp(matches[0].length - (matches[1] ? matches[1].length : 0));\n            return rule.token[0];\n          } else if (rule.token && rule.token.join) {\n            return rule.token[0];\n          } else {\n            return rule.token;\n          }\n        }\n      }\n      stream.next();\n      return null;\n    };\n  }\n\n  function cmp(a, b) {\n    if (a === b) return true;\n    if (!a || typeof a != \"object\" || !b || typeof b != \"object\") return false;\n    var props = 0;\n    for (var prop in a) if (a.hasOwnProperty(prop)) {\n      if (!b.hasOwnProperty(prop) || !cmp(a[prop], b[prop])) return false;\n      props++;\n    }\n    for (var prop in b) if (b.hasOwnProperty(prop)) props--;\n    return props == 0;\n  }\n\n  function enterLocalMode(config, state, spec, token) {\n    var pers;\n    if (spec.persistent) for (var p = state.persistentStates; p && !pers; p = p.next)\n      if (spec.spec ? cmp(spec.spec, p.spec) : spec.mode == p.mode) pers = p;\n    var mode = pers ? pers.mode : spec.mode || CodeMirror.getMode(config, spec.spec);\n    var lState = pers ? pers.state : CodeMirror.startState(mode);\n    if (spec.persistent && !pers)\n      state.persistentStates = {mode: mode, spec: spec.spec, state: lState, next: state.persistentStates};\n\n    state.localState = lState;\n    state.local = {mode: mode,\n                   end: spec.end && toRegex(spec.end),\n                   endScan: spec.end && spec.forceEnd !== false && toRegex(spec.end, false),\n                   endToken: token && token.join ? token[token.length - 1] : token};\n  }\n\n  function indexOf(val, arr) {\n    for (var i = 0; i < arr.length; i++) if (arr[i] === val) return true;\n  }\n\n  function indentFunction(states, meta) {\n    return function(state, textAfter, line) {\n      if (state.local && state.local.mode.indent)\n        return state.local.mode.indent(state.localState, textAfter, line);\n      if (state.indent == null || state.local || meta.dontIndentStates && indexOf(state.state, meta.dontIndentStates) > -1)\n        return CodeMirror.Pass;\n\n      var pos = state.indent.length - 1, rules = states[state.state];\n      scan: for (;;) {\n        for (var i = 0; i < rules.length; i++) {\n          var rule = rules[i];\n          if (rule.data.dedent && rule.data.dedentIfLineStart !== false) {\n            var m = rule.regex.exec(textAfter);\n            if (m && m[0]) {\n              pos--;\n              if (rule.next || rule.push) rules = states[rule.next || rule.push];\n              textAfter = textAfter.slice(m[0].length);\n              continue scan;\n            }\n          }\n        }\n        break;\n      }\n      return pos < 0 ? 0 : state.indent[pos];\n    };\n  }\n});\n"]}