{"version":3,"sources":["addon/runmode/runmode-standalone.js"],"names":["window","CodeMirror","splitLines","string","split","StringStream","this","pos","start","lineStart","prototype","eol","length","sol","peek","charAt","next","eat","match","ch","ok","test","eatWhile","eatSpace","skipToEnd","skipTo","found","indexOf","backUp","n","column","indentation","pattern","consume","caseInsensitive","slice","index","cased","str","toLowerCase","substr","current","hideFirstChars","inner","startState","mode","a1","a2","modes","mimeModes","defineMode","name","arguments","dependencies","Array","call","defineMIME","mime","spec","resolveMode","hasOwnProperty","getMode","options","mfactory","Error","registerHelper","registerGlobalHelper","Math","min","token","stream","runMode","modespec","callback","indentUnit","nodeType","tabSize","node","col","innerHTML","text","style","appendChild","document","createElement","content","idx","size","i","sp","className","replace","createTextNode","lines","state","e","blankLine"],"mappings":"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","file":"../../../addon/runmode/runmode-standalone.js","sourcesContent":["// CodeMirror, copyright (c) by Marijn Haverbeke and others\n// Distributed under an MIT license: http://codemirror.net/LICENSE\n\nwindow.CodeMirror = {};\n\n(function() {\n\"use strict\";\n\nfunction splitLines(string){ return string.split(/\\r?\\n|\\r/); };\n\nfunction StringStream(string) {\n  this.pos = this.start = 0;\n  this.string = string;\n  this.lineStart = 0;\n}\nStringStream.prototype = {\n  eol: function() {return this.pos >= this.string.length;},\n  sol: function() {return this.pos == 0;},\n  peek: function() {return this.string.charAt(this.pos) || null;},\n  next: function() {\n    if (this.pos < this.string.length)\n      return this.string.charAt(this.pos++);\n  },\n  eat: function(match) {\n    var ch = this.string.charAt(this.pos);\n    if (typeof match == \"string\") var ok = ch == match;\n    else var ok = ch && (match.test ? match.test(ch) : match(ch));\n    if (ok) {++this.pos; return ch;}\n  },\n  eatWhile: function(match) {\n    var start = this.pos;\n    while (this.eat(match)){}\n    return this.pos > start;\n  },\n  eatSpace: function() {\n    var start = this.pos;\n    while (/[\\s\\u00a0]/.test(this.string.charAt(this.pos))) ++this.pos;\n    return this.pos > start;\n  },\n  skipToEnd: function() {this.pos = this.string.length;},\n  skipTo: function(ch) {\n    var found = this.string.indexOf(ch, this.pos);\n    if (found > -1) {this.pos = found; return true;}\n  },\n  backUp: function(n) {this.pos -= n;},\n  column: function() {return this.start - this.lineStart;},\n  indentation: function() {return 0;},\n  match: function(pattern, consume, caseInsensitive) {\n    if (typeof pattern == \"string\") {\n      var cased = function(str) {return caseInsensitive ? str.toLowerCase() : str;};\n      var substr = this.string.substr(this.pos, pattern.length);\n      if (cased(substr) == cased(pattern)) {\n        if (consume !== false) this.pos += pattern.length;\n        return true;\n      }\n    } else {\n      var match = this.string.slice(this.pos).match(pattern);\n      if (match && match.index > 0) return null;\n      if (match && consume !== false) this.pos += match[0].length;\n      return match;\n    }\n  },\n  current: function(){return this.string.slice(this.start, this.pos);},\n  hideFirstChars: function(n, inner) {\n    this.lineStart += n;\n    try { return inner(); }\n    finally { this.lineStart -= n; }\n  }\n};\nCodeMirror.StringStream = StringStream;\n\nCodeMirror.startState = function (mode, a1, a2) {\n  return mode.startState ? mode.startState(a1, a2) : true;\n};\n\nvar modes = CodeMirror.modes = {}, mimeModes = CodeMirror.mimeModes = {};\nCodeMirror.defineMode = function (name, mode) {\n  if (arguments.length > 2)\n    mode.dependencies = Array.prototype.slice.call(arguments, 2);\n  modes[name] = mode;\n};\nCodeMirror.defineMIME = function (mime, spec) { mimeModes[mime] = spec; };\nCodeMirror.resolveMode = function(spec) {\n  if (typeof spec == \"string\" && mimeModes.hasOwnProperty(spec)) {\n    spec = mimeModes[spec];\n  } else if (spec && typeof spec.name == \"string\" && mimeModes.hasOwnProperty(spec.name)) {\n    spec = mimeModes[spec.name];\n  }\n  if (typeof spec == \"string\") return {name: spec};\n  else return spec || {name: \"null\"};\n};\nCodeMirror.getMode = function (options, spec) {\n  spec = CodeMirror.resolveMode(spec);\n  var mfactory = modes[spec.name];\n  if (!mfactory) throw new Error(\"Unknown mode: \" + spec);\n  return mfactory(options, spec);\n};\nCodeMirror.registerHelper = CodeMirror.registerGlobalHelper = Math.min;\nCodeMirror.defineMode(\"null\", function() {\n  return {token: function(stream) {stream.skipToEnd();}};\n});\nCodeMirror.defineMIME(\"text/plain\", \"null\");\n\nCodeMirror.runMode = function (string, modespec, callback, options) {\n  var mode = CodeMirror.getMode({ indentUnit: 2 }, modespec);\n\n  if (callback.nodeType == 1) {\n    var tabSize = (options && options.tabSize) || 4;\n    var node = callback, col = 0;\n    node.innerHTML = \"\";\n    callback = function (text, style) {\n      if (text == \"\\n\") {\n        node.appendChild(document.createElement(\"br\"));\n        col = 0;\n        return;\n      }\n      var content = \"\";\n      // replace tabs\n      for (var pos = 0; ;) {\n        var idx = text.indexOf(\"\\t\", pos);\n        if (idx == -1) {\n          content += text.slice(pos);\n          col += text.length - pos;\n          break;\n        } else {\n          col += idx - pos;\n          content += text.slice(pos, idx);\n          var size = tabSize - col % tabSize;\n          col += size;\n          for (var i = 0; i < size; ++i) content += \" \";\n          pos = idx + 1;\n        }\n      }\n\n      if (style) {\n        var sp = node.appendChild(document.createElement(\"span\"));\n        sp.className = \"cm-\" + style.replace(/ +/g, \" cm-\");\n        sp.appendChild(document.createTextNode(content));\n      } else {\n        node.appendChild(document.createTextNode(content));\n      }\n    };\n  }\n\n  var lines = splitLines(string), state = (options && options.state) || CodeMirror.startState(mode);\n  for (var i = 0, e = lines.length; i < e; ++i) {\n    if (i) callback(\"\\n\");\n    var stream = new CodeMirror.StringStream(lines[i]);\n    if (!stream.string && mode.blankLine) mode.blankLine(state);\n    while (!stream.eol()) {\n      var style = mode.token(stream, state);\n      callback(stream.current(), style, i, stream.start, state);\n      stream.start = stream.pos;\n    }\n  }\n};\n})();\n"]}