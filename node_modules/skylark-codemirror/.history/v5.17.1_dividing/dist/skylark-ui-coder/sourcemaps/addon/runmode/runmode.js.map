{"version":3,"sources":["addon/runmode/runmode.js"],"names":["define","CodeMirror","runMode","string","modespec","callback","options","mode","getMode","defaults","ie","test","navigator","userAgent","ie_lt9","document","documentMode","appendChild","tabSize","node","col","innerHTML","text","style","createTextNode","content","pos","idx","indexOf","slice","length","size","i","sp","createElement","className","replace","lines","splitLines","state","startState","e","stream","StringStream","blankLine","eol","token","current","start"],"mappings":";;;;;;;AAGAA,QAAQ,eAAgB,SAASC,GACjC,YAEAA,GAAWC,QAAU,SAASC,EAAQC,EAAUC,EAAUC,GACxD,GAAIC,GAAON,EAAWO,QAAQP,EAAWQ,SAAUL,GAC/CM,EAAK,UAAUC,KAAKC,UAAUC,WAC9BC,EAASJ,IAAgC,MAAzBK,SAASC,cAAwBD,SAASC,aAAe,EAE7E,IAAIX,EAASY,YAAa,CACxB,GAAIC,GAAWZ,GAAWA,EAAQY,SAAYjB,EAAWQ,SAASS,QAC9DC,EAAOd,EAAUe,EAAM,CAC3BD,GAAKE,UAAY,GACjBhB,EAAW,SAASiB,EAAMC,GACxB,GAAY,MAARD,EAKF,MAFAH,GAAKF,YAAYF,SAASS,eAAeV,EAAS,KAAOQ,SACzDF,EAAM,EAKR,KAAK,GAFDK,GAAU,GAELC,EAAM,IAAK,CAClB,GAAIC,GAAML,EAAKM,QAAQ,KAAMF,EAC7B,IAAIC,MAAW,CACbF,GAAWH,EAAKO,MAAMH,GACtBN,GAAOE,EAAKQ,OAASJ,CACrB,OAEAN,GAAOO,EAAMD,EACbD,GAAWH,EAAKO,MAAMH,EAAKC,EAC3B,IAAII,GAAOb,EAAUE,EAAMF,CAC3BE,IAAOW,CACP,KAAK,GAAIC,GAAI,EAAGA,EAAID,IAAQC,EAAGP,GAAW,GAC1CC,GAAMC,EAAM,EAIhB,GAAIJ,EAAO,CACT,GAAIU,GAAKd,EAAKF,YAAYF,SAASmB,cAAc,QACjDD,GAAGE,UAAY,MAAQZ,EAAMa,QAAQ,MAAO,QAC5CH,EAAGhB,YAAYF,SAASS,eAAeC,QAEvCN,GAAKF,YAAYF,SAASS,eAAeC,KAM/C,IAAK,GADDY,GAAQpC,EAAWqC,WAAWnC,GAASoC,EAASjC,GAAWA,EAAQiC,OAAUtC,EAAWuC,WAAWjC,GAC9FyB,EAAI,EAAGS,EAAIJ,EAAMP,OAAQE,EAAIS,IAAKT,EAAG,CACxCA,GAAG3B,EAAS,KAChB,IAAIqC,GAAS,GAAIzC,GAAW0C,aAAaN,EAAML,GAE/C,MADKU,EAAOvC,QAAUI,EAAKqC,WAAWrC,EAAKqC,UAAUL,IAC7CG,EAAOG,OAAO,CACpB,GAAItB,GAAQhB,EAAKuC,MAAMJ,EAAQH,EAC/BlC,GAASqC,EAAOK,UAAWxB,EAAOS,EAAGU,EAAOM,MAAOT,GACnDG,EAAOM,MAAQN,EAAOhB","file":"../../../addon/runmode/runmode.js","sourcesContent":["// CodeMirror, copyright (c) by Marijn Haverbeke and others\n// Distributed under an MIT license: http://codemirror.net/LICENSE\n\ndefine([\"../../Coder\"], function(CodeMirror) {\n\"use strict\";\n\nCodeMirror.runMode = function(string, modespec, callback, options) {\n  var mode = CodeMirror.getMode(CodeMirror.defaults, modespec);\n  var ie = /MSIE \\d/.test(navigator.userAgent);\n  var ie_lt9 = ie && (document.documentMode == null || document.documentMode < 9);\n\n  if (callback.appendChild) {\n    var tabSize = (options && options.tabSize) || CodeMirror.defaults.tabSize;\n    var node = callback, col = 0;\n    node.innerHTML = \"\";\n    callback = function(text, style) {\n      if (text == \"\\n\") {\n        // Emitting LF or CRLF on IE8 or earlier results in an incorrect display.\n        // Emitting a carriage return makes everything ok.\n        node.appendChild(document.createTextNode(ie_lt9 ? '\\r' : text));\n        col = 0;\n        return;\n      }\n      var content = \"\";\n      // replace tabs\n      for (var pos = 0;;) {\n        var idx = text.indexOf(\"\\t\", pos);\n        if (idx == -1) {\n          content += text.slice(pos);\n          col += text.length - pos;\n          break;\n        } else {\n          col += idx - pos;\n          content += text.slice(pos, idx);\n          var size = tabSize - col % tabSize;\n          col += size;\n          for (var i = 0; i < size; ++i) content += \" \";\n          pos = idx + 1;\n        }\n      }\n\n      if (style) {\n        var sp = node.appendChild(document.createElement(\"span\"));\n        sp.className = \"cm-\" + style.replace(/ +/g, \" cm-\");\n        sp.appendChild(document.createTextNode(content));\n      } else {\n        node.appendChild(document.createTextNode(content));\n      }\n    };\n  }\n\n  var lines = CodeMirror.splitLines(string), state = (options && options.state) || CodeMirror.startState(mode);\n  for (var i = 0, e = lines.length; i < e; ++i) {\n    if (i) callback(\"\\n\");\n    var stream = new CodeMirror.StringStream(lines[i]);\n    if (!stream.string && mode.blankLine) mode.blankLine(state);\n    while (!stream.eol()) {\n      var style = mode.token(stream, state);\n      callback(stream.current(), style, i, stream.start, state);\n      stream.start = stream.pos;\n    }\n  }\n};\n\n});\n"]}