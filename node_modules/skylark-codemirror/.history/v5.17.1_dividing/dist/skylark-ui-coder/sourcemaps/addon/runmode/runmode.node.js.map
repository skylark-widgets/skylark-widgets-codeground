{"version":3,"sources":["addon/runmode/runmode.node.js"],"names":["splitLines","string","split","StringStream","tabSize","this","pos","start","lastColumnPos","lastColumnValue","lineStart","copyObj","obj","target","overwrite","prop","hasOwnProperty","countColumn","end","startIndex","startValue","search","length","i","n","nextTab","indexOf","prototype","eol","sol","peek","charAt","undefined","next","eat","match","ch","ok","test","eatWhile","eatSpace","skipToEnd","skipTo","found","backUp","column","indentation","pattern","consume","caseInsensitive","slice","index","cased","str","toLowerCase","substr","current","hideFirstChars","inner","exports","startState","mode","a1","a2","modes","mimeModes","defineMode","name","arguments","dependencies","Array","call","defineMIME","mime","spec","token","stream","resolveMode","modeExtensions","extendMode","properties","exts","getMode","options","mfactory","modeObj","helperType","modeProps","registerHelper","registerGlobalHelper","Math","min","runMode","modespec","callback","indentUnit","lines","state","e","blankLine","style","require","cache","resolve"],"mappings":"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","file":"../../../addon/runmode/runmode.node.js","sourcesContent":["// CodeMirror, copyright (c) by Marijn Haverbeke and others\n// Distributed under an MIT license: http://codemirror.net/LICENSE\n\n/* Just enough of CodeMirror to run runMode under node.js */\n\nfunction splitLines(string){return string.split(/\\r\\n?|\\n/);};\n\n// Counts the column offset in a string, taking tabs into account.\n// Used mostly to find indentation.\nvar countColumn = function(string, end, tabSize, startIndex, startValue) {\n  if (end == null) {\n    end = string.search(/[^\\s\\u00a0]/);\n    if (end == -1) end = string.length;\n  }\n  for (var i = startIndex || 0, n = startValue || 0;;) {\n    var nextTab = string.indexOf(\"\\t\", i);\n    if (nextTab < 0 || nextTab >= end)\n      return n + (end - i);\n    n += nextTab - i;\n    n += tabSize - (n % tabSize);\n    i = nextTab + 1;\n  }\n};\n\nfunction StringStream(string, tabSize) {\n  this.pos = this.start = 0;\n  this.string = string;\n  this.tabSize = tabSize || 8;\n  this.lastColumnPos = this.lastColumnValue = 0;\n  this.lineStart = 0;\n};\n\nStringStream.prototype = {\n  eol: function() {return this.pos >= this.string.length;},\n  sol: function() {return this.pos == this.lineStart;},\n  peek: function() {return this.string.charAt(this.pos) || undefined;},\n  next: function() {\n    if (this.pos < this.string.length)\n      return this.string.charAt(this.pos++);\n  },\n  eat: function(match) {\n    var ch = this.string.charAt(this.pos);\n    if (typeof match == \"string\") var ok = ch == match;\n    else var ok = ch && (match.test ? match.test(ch) : match(ch));\n    if (ok) {++this.pos; return ch;}\n  },\n  eatWhile: function(match) {\n    var start = this.pos;\n    while (this.eat(match)){}\n    return this.pos > start;\n  },\n  eatSpace: function() {\n    var start = this.pos;\n    while (/[\\s\\u00a0]/.test(this.string.charAt(this.pos))) ++this.pos;\n    return this.pos > start;\n  },\n  skipToEnd: function() {this.pos = this.string.length;},\n  skipTo: function(ch) {\n    var found = this.string.indexOf(ch, this.pos);\n    if (found > -1) {this.pos = found; return true;}\n  },\n  backUp: function(n) {this.pos -= n;},\n  column: function() {\n    if (this.lastColumnPos < this.start) {\n      this.lastColumnValue = countColumn(this.string, this.start, this.tabSize, this.lastColumnPos, this.lastColumnValue);\n      this.lastColumnPos = this.start;\n    }\n    return this.lastColumnValue - (this.lineStart ? countColumn(this.string, this.lineStart, this.tabSize) : 0);\n  },\n  indentation: function() {\n    return countColumn(this.string, null, this.tabSize) -\n      (this.lineStart ? countColumn(this.string, this.lineStart, this.tabSize) : 0);\n  },\n  match: function(pattern, consume, caseInsensitive) {\n    if (typeof pattern == \"string\") {\n      var cased = function(str) {return caseInsensitive ? str.toLowerCase() : str;};\n      var substr = this.string.substr(this.pos, pattern.length);\n      if (cased(substr) == cased(pattern)) {\n        if (consume !== false) this.pos += pattern.length;\n        return true;\n      }\n    } else {\n      var match = this.string.slice(this.pos).match(pattern);\n      if (match && match.index > 0) return null;\n      if (match && consume !== false) this.pos += match[0].length;\n      return match;\n    }\n  },\n  current: function(){return this.string.slice(this.start, this.pos);},\n  hideFirstChars: function(n, inner) {\n    this.lineStart += n;\n    try { return inner(); }\n    finally { this.lineStart -= n; }\n  }\n};\nexports.StringStream = StringStream;\n\nexports.startState = function(mode, a1, a2) {\n  return mode.startState ? mode.startState(a1, a2) : true;\n};\n\nvar modes = exports.modes = {}, mimeModes = exports.mimeModes = {};\nexports.defineMode = function(name, mode) {\n  if (arguments.length > 2)\n    mode.dependencies = Array.prototype.slice.call(arguments, 2);\n  modes[name] = mode;\n};\nexports.defineMIME = function(mime, spec) { mimeModes[mime] = spec; };\n\nexports.defineMode(\"null\", function() {\n  return {token: function(stream) {stream.skipToEnd();}};\n});\nexports.defineMIME(\"text/plain\", \"null\");\n\nexports.resolveMode = function(spec) {\n  if (typeof spec == \"string\" && mimeModes.hasOwnProperty(spec)) {\n    spec = mimeModes[spec];\n  } else if (spec && typeof spec.name == \"string\" && mimeModes.hasOwnProperty(spec.name)) {\n    spec = mimeModes[spec.name];\n  }\n  if (typeof spec == \"string\") return {name: spec};\n  else return spec || {name: \"null\"};\n};\n\nfunction copyObj(obj, target, overwrite) {\n  if (!target) target = {};\n  for (var prop in obj)\n    if (obj.hasOwnProperty(prop) && (overwrite !== false || !target.hasOwnProperty(prop)))\n      target[prop] = obj[prop];\n  return target;\n}\n\n// This can be used to attach properties to mode objects from\n// outside the actual mode definition.\nvar modeExtensions = exports.modeExtensions = {};\nexports.extendMode = function(mode, properties) {\n  var exts = modeExtensions.hasOwnProperty(mode) ? modeExtensions[mode] : (modeExtensions[mode] = {});\n  copyObj(properties, exts);\n};\n\nexports.getMode = function(options, spec) {\n  var spec = exports.resolveMode(spec);\n  var mfactory = modes[spec.name];\n  if (!mfactory) return exports.getMode(options, \"text/plain\");\n  var modeObj = mfactory(options, spec);\n  if (modeExtensions.hasOwnProperty(spec.name)) {\n    var exts = modeExtensions[spec.name];\n    for (var prop in exts) {\n      if (!exts.hasOwnProperty(prop)) continue;\n      if (modeObj.hasOwnProperty(prop)) modeObj[\"_\" + prop] = modeObj[prop];\n      modeObj[prop] = exts[prop];\n    }\n  }\n  modeObj.name = spec.name;\n  if (spec.helperType) modeObj.helperType = spec.helperType;\n  if (spec.modeProps) for (var prop in spec.modeProps)\n    modeObj[prop] = spec.modeProps[prop];\n\n  return modeObj;\n};\nexports.registerHelper = exports.registerGlobalHelper = Math.min;\n\nexports.runMode = function(string, modespec, callback, options) {\n  var mode = exports.getMode({indentUnit: 2}, modespec);\n  var lines = splitLines(string), state = (options && options.state) || exports.startState(mode);\n  for (var i = 0, e = lines.length; i < e; ++i) {\n    if (i) callback(\"\\n\");\n    var stream = new exports.StringStream(lines[i]);\n    if (!stream.string && mode.blankLine) mode.blankLine(state);\n    while (!stream.eol()) {\n      var style = mode.token(stream, state);\n      callback(stream.current(), style, i, stream.start, state);\n      stream.start = stream.pos;\n    }\n  }\n};\n\nrequire.cache[require.resolve(\"../../Coder\")] = require.cache[require.resolve(\"./runmode.node\")];\nrequire.cache[require.resolve(\"../../addon/runmode/runmode\")] = require.cache[require.resolve(\"./runmode.node\")];\n"]}