{"version":3,"sources":["addon/scroll/simplescrollbars.js"],"names":["define","CodeMirror","Bar","cls","orientation","scroll","onWheel","e","moved","wheelEventPixels","self","oldPos","pos","moveTo","e_preventDefault","this","screen","total","size","node","document","createElement","className","inner","appendChild","on","done","off","move","which","startpos","axis","start","where","innerBox","getBoundingClientRect","clientX","left","right","clientY","top","bottom","SimpleScrollbars","place","addClass","horiz","vert","width","prototype","setPos","force","style","minButtonSize","update","scrollSize","clientSize","barSize","sizeChanged","buttonSize","measure","window","getComputedStyle","currentStyle","parseInt","height","needsH","scrollWidth","clientWidth","needsV","scrollHeight","clientHeight","display","viewHeight","viewWidth","barLeft","setScrollTop","setScrollLeft","clear","parent","parentNode","removeChild","scrollbarModel","simple","overlay"],"mappings":"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","file":"../../../addon/scroll/simplescrollbars.js","sourcesContent":["// CodeMirror, copyright (c) by Marijn Haverbeke and others\n// Distributed under an MIT license: http://codemirror.net/LICENSE\n\ndefine([\"../../Coder\"], function(CodeMirror) {\n  \"use strict\";\n\n  function Bar(cls, orientation, scroll) {\n    this.orientation = orientation;\n    this.scroll = scroll;\n    this.screen = this.total = this.size = 1;\n    this.pos = 0;\n\n    this.node = document.createElement(\"div\");\n    this.node.className = cls + \"-\" + orientation;\n    this.inner = this.node.appendChild(document.createElement(\"div\"));\n\n    var self = this;\n    CodeMirror.on(this.inner, \"mousedown\", function(e) {\n      if (e.which != 1) return;\n      CodeMirror.e_preventDefault(e);\n      var axis = self.orientation == \"horizontal\" ? \"pageX\" : \"pageY\";\n      var start = e[axis], startpos = self.pos;\n      function done() {\n        CodeMirror.off(document, \"mousemove\", move);\n        CodeMirror.off(document, \"mouseup\", done);\n      }\n      function move(e) {\n        if (e.which != 1) return done();\n        self.moveTo(startpos + (e[axis] - start) * (self.total / self.size));\n      }\n      CodeMirror.on(document, \"mousemove\", move);\n      CodeMirror.on(document, \"mouseup\", done);\n    });\n\n    CodeMirror.on(this.node, \"click\", function(e) {\n      CodeMirror.e_preventDefault(e);\n      var innerBox = self.inner.getBoundingClientRect(), where;\n      if (self.orientation == \"horizontal\")\n        where = e.clientX < innerBox.left ? -1 : e.clientX > innerBox.right ? 1 : 0;\n      else\n        where = e.clientY < innerBox.top ? -1 : e.clientY > innerBox.bottom ? 1 : 0;\n      self.moveTo(self.pos + where * self.screen);\n    });\n\n    function onWheel(e) {\n      var moved = CodeMirror.wheelEventPixels(e)[self.orientation == \"horizontal\" ? \"x\" : \"y\"];\n      var oldPos = self.pos;\n      self.moveTo(self.pos + moved);\n      if (self.pos != oldPos) CodeMirror.e_preventDefault(e);\n    }\n    CodeMirror.on(this.node, \"mousewheel\", onWheel);\n    CodeMirror.on(this.node, \"DOMMouseScroll\", onWheel);\n  }\n\n  Bar.prototype.setPos = function(pos, force) {\n    if (pos < 0) pos = 0;\n    if (pos > this.total - this.screen) pos = this.total - this.screen;\n    if (!force && pos == this.pos) return false;\n    this.pos = pos;\n    this.inner.style[this.orientation == \"horizontal\" ? \"left\" : \"top\"] =\n      (pos * (this.size / this.total)) + \"px\";\n    return true\n  };\n\n  Bar.prototype.moveTo = function(pos) {\n    if (this.setPos(pos)) this.scroll(pos, this.orientation);\n  }\n\n  var minButtonSize = 10;\n\n  Bar.prototype.update = function(scrollSize, clientSize, barSize) {\n    var sizeChanged = this.screen != clientSize || this.total != scrollSize || this.size != barSize\n    if (sizeChanged) {\n      this.screen = clientSize;\n      this.total = scrollSize;\n      this.size = barSize;\n    }\n\n    var buttonSize = this.screen * (this.size / this.total);\n    if (buttonSize < minButtonSize) {\n      this.size -= minButtonSize - buttonSize;\n      buttonSize = minButtonSize;\n    }\n    this.inner.style[this.orientation == \"horizontal\" ? \"width\" : \"height\"] =\n      buttonSize + \"px\";\n    this.setPos(this.pos, sizeChanged);\n  };\n\n  function SimpleScrollbars(cls, place, scroll) {\n    this.addClass = cls;\n    this.horiz = new Bar(cls, \"horizontal\", scroll);\n    place(this.horiz.node);\n    this.vert = new Bar(cls, \"vertical\", scroll);\n    place(this.vert.node);\n    this.width = null;\n  }\n\n  SimpleScrollbars.prototype.update = function(measure) {\n    if (this.width == null) {\n      var style = window.getComputedStyle ? window.getComputedStyle(this.horiz.node) : this.horiz.node.currentStyle;\n      if (style) this.width = parseInt(style.height);\n    }\n    var width = this.width || 0;\n\n    var needsH = measure.scrollWidth > measure.clientWidth + 1;\n    var needsV = measure.scrollHeight > measure.clientHeight + 1;\n    this.vert.node.style.display = needsV ? \"block\" : \"none\";\n    this.horiz.node.style.display = needsH ? \"block\" : \"none\";\n\n    if (needsV) {\n      this.vert.update(measure.scrollHeight, measure.clientHeight,\n                       measure.viewHeight - (needsH ? width : 0));\n      this.vert.node.style.bottom = needsH ? width + \"px\" : \"0\";\n    }\n    if (needsH) {\n      this.horiz.update(measure.scrollWidth, measure.clientWidth,\n                        measure.viewWidth - (needsV ? width : 0) - measure.barLeft);\n      this.horiz.node.style.right = needsV ? width + \"px\" : \"0\";\n      this.horiz.node.style.left = measure.barLeft + \"px\";\n    }\n\n    return {right: needsV ? width : 0, bottom: needsH ? width : 0};\n  };\n\n  SimpleScrollbars.prototype.setScrollTop = function(pos) {\n    this.vert.setPos(pos);\n  };\n\n  SimpleScrollbars.prototype.setScrollLeft = function(pos) {\n    this.horiz.setPos(pos);\n  };\n\n  SimpleScrollbars.prototype.clear = function() {\n    var parent = this.horiz.node.parentNode;\n    parent.removeChild(this.horiz.node);\n    parent.removeChild(this.vert.node);\n  };\n\n  CodeMirror.scrollbarModel.simple = function(place, scroll) {\n    return new SimpleScrollbars(\"CodeMirror-simplescroll\", place, scroll);\n  };\n  CodeMirror.scrollbarModel.overlay = function(place, scroll) {\n    return new SimpleScrollbars(\"CodeMirror-overlayscroll\", place, scroll);\n  };\n});\n"]}