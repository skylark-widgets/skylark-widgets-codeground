{"version":3,"sources":["addon/search/jump-to-line.js"],"names":["define","CodeMirror","dialog","cm","text","shortText","deflt","f","openDialog","value","selectValueOnOpen","prompt","interpretLine","string","num","Number","test","getCursor","line","jumpDialog","commands","jumpToLine","cur","ch","posStr","match","exec","setCursor","Math","round","lineCount","keyMap"],"mappings":";;;;;;;AAKAA,QAAQ,cAAe,oBAAqB,SAASC,GACnD,YAEA,SAASC,GAAOC,EAAIC,EAAMC,EAAWC,EAAOC,GACtCJ,EAAGK,WAAYL,EAAGK,WAAWJ,EAAMG,GAAIE,MAAOH,EAAOI,mBAAmB,IACvEH,EAAEI,OAAON,EAAWC,IAM3B,QAASM,GAAcT,EAAIU,GACzB,GAAIC,GAAMC,OAAOF,EACjB,OAAI,QAAQG,KAAKH,GAAgBV,EAAGc,YAAYC,KAAOJ,EAC3CA,EAAM,EANpB,GAAIK,GACA,4LAQJlB,GAAWmB,SAASC,WAAa,SAASlB,GACxC,GAAImB,GAAMnB,EAAGc,WACbf,GAAOC,EAAIgB,EAAY,gBAAkBG,EAAIJ,KAAO,EAAK,IAAMI,EAAIC,GAAI,SAASC,GAC9E,GAAKA,EAAL,CAEA,GAAIC,EACJ,IAAIA,EAAQ,oCAAoCC,KAAKF,GACnDrB,EAAGwB,UAAUf,EAAcT,EAAIsB,EAAM,IAAKV,OAAOU,EAAM,SAClD,IAAIA,EAAQ,gCAAgCC,KAAKF,GAAS,CAC/D,GAAIN,GAAOU,KAAKC,MAAM1B,EAAG2B,YAAcf,OAAOU,EAAM,IAAM,IACtD,SAAQT,KAAKS,EAAM,MAAKP,EAAOI,EAAIJ,KAAOA,EAAO,GACrDf,EAAGwB,UAAUT,EAAO,EAAGI,EAAIC,SAClBE,EAAQ,4BAA4BC,KAAKF,KAClDrB,EAAGwB,UAAUf,EAAcT,EAAIsB,EAAM,IAAKH,EAAIC,QAKpDtB,EAAW8B,OAAO,WAAW,SAAW","file":"../../../addon/search/jump-to-line.js","sourcesContent":["// CodeMirror, copyright (c) by Marijn Haverbeke and others\n// Distributed under an MIT license: http://codemirror.net/LICENSE\n\n// Defines jumpToLine command. Uses dialog.js if present.\n\ndefine([\"../../Coder\", \"../dialog/dialog\"], function(CodeMirror) {\n  \"use strict\";\n\n  function dialog(cm, text, shortText, deflt, f) {\n    if (cm.openDialog) cm.openDialog(text, f, {value: deflt, selectValueOnOpen: true});\n    else f(prompt(shortText, deflt));\n  }\n\n  var jumpDialog =\n      'Jump to line: <input type=\"text\" style=\"width: 10em\" class=\"CodeMirror-search-field\"/> <span style=\"color: #888\" class=\"CodeMirror-search-hint\">(Use line:column or scroll% syntax)</span>';\n\n  function interpretLine(cm, string) {\n    var num = Number(string)\n    if (/^[-+]/.test(string)) return cm.getCursor().line + num\n    else return num - 1\n  }\n\n  CodeMirror.commands.jumpToLine = function(cm) {\n    var cur = cm.getCursor();\n    dialog(cm, jumpDialog, \"Jump to line:\", (cur.line + 1) + \":\" + cur.ch, function(posStr) {\n      if (!posStr) return;\n\n      var match;\n      if (match = /^\\s*([\\+\\-]?\\d+)\\s*\\:\\s*(\\d+)\\s*$/.exec(posStr)) {\n        cm.setCursor(interpretLine(cm, match[1]), Number(match[2]))\n      } else if (match = /^\\s*([\\+\\-]?\\d+(\\.\\d+)?)\\%\\s*/.exec(posStr)) {\n        var line = Math.round(cm.lineCount() * Number(match[1]) / 100);\n        if (/^[-+]/.test(match[1])) line = cur.line + line + 1;\n        cm.setCursor(line - 1, cur.ch);\n      } else if (match = /^\\s*\\:?\\s*([\\+\\-]?\\d+)\\s*/.exec(posStr)) {\n        cm.setCursor(interpretLine(cm, match[1]), cur.ch);\n      }\n    });\n  };\n\n  CodeMirror.keyMap[\"default\"][\"Alt-G\"] = \"jumpToLine\";\n});\n"]}