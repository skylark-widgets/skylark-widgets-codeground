{"version":3,"sources":["addon/search/search.js"],"names":["define","CodeMirror","searchOverlay","query","caseInsensitive","RegExp","replace","global","source","ignoreCase","token","stream","lastIndex","pos","match","exec","string","index","length","skipToEnd","SearchState","this","posFrom","posTo","lastQuery","overlay","getSearchState","cm","state","search","queryCaseInsensitive","toLowerCase","getSearchCursor","persistentDialog","text","deflt","onEnter","onKeyDown","openDialog","value","selectValueOnOpen","closeOnEnter","onClose","clearSearch","dialog","shortText","f","prompt","confirmDialog","fs","openConfirm","confirm","parseString","_","ch","parseQuery","isRE","indexOf","e","test","startSearch","queryText","removeOverlay","addOverlay","showMatchesOnScrollbar","annotate","clear","doSearch","rev","persistent","immediate","findNext","q","getSelection","hiding","searchNext","event","e_stop","getCursor","style","opacity","shiftKey","to","line","document","querySelector","display","wrapper","getBoundingClientRect","bottom","cursorCoords","top","queryDialog","cmd","keyMap","getOption","keyName","execCommand","operation","callback","cursor","find","Pos","lastLine","firstLine","setSelection","from","scrollIntoView","replaceAll","getRange","i","all","dialogText","replaceQueryDialog","replacementQueryDialog","advance","start","doReplaceConfirm","doReplace","commands","findPersistent","findPersistentNext","findPersistentPrev","findPrev"],"mappings":"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","file":"../../../addon/search/search.js","sourcesContent":["// CodeMirror, copyright (c) by Marijn Haverbeke and others\n// Distributed under an MIT license: http://codemirror.net/LICENSE\n\n// Define search commands. Depends on dialog.js or another\n// implementation of the openDialog method.\n\n// Replace works a little oddly -- it will do the replace on the next\n// Ctrl-G (or whatever is bound to findNext) press. You prevent a\n// replace by making sure the match is no longer selected when hitting\n// Ctrl-G.\n\ndefine([\"../../Coder\", \"./searchcursor\", \"../dialog/dialog\"], function(CodeMirror) {\n  \"use strict\";\n\n  function searchOverlay(query, caseInsensitive) {\n    if (typeof query == \"string\")\n      query = new RegExp(query.replace(/[\\-\\[\\]\\/\\{\\}\\(\\)\\*\\+\\?\\.\\\\\\^\\$\\|]/g, \"\\\\$&\"), caseInsensitive ? \"gi\" : \"g\");\n    else if (!query.global)\n      query = new RegExp(query.source, query.ignoreCase ? \"gi\" : \"g\");\n\n    return {token: function(stream) {\n      query.lastIndex = stream.pos;\n      var match = query.exec(stream.string);\n      if (match && match.index == stream.pos) {\n        stream.pos += match[0].length || 1;\n        return \"searching\";\n      } else if (match) {\n        stream.pos = match.index;\n      } else {\n        stream.skipToEnd();\n      }\n    }};\n  }\n\n  function SearchState() {\n    this.posFrom = this.posTo = this.lastQuery = this.query = null;\n    this.overlay = null;\n  }\n\n  function getSearchState(cm) {\n    return cm.state.search || (cm.state.search = new SearchState());\n  }\n\n  function queryCaseInsensitive(query) {\n    return typeof query == \"string\" && query == query.toLowerCase();\n  }\n\n  function getSearchCursor(cm, query, pos) {\n    // Heuristic: if the query string is all lowercase, do a case insensitive search.\n    return cm.getSearchCursor(query, pos, queryCaseInsensitive(query));\n  }\n\n  function persistentDialog(cm, text, deflt, onEnter, onKeyDown) {\n    cm.openDialog(text, onEnter, {\n      value: deflt,\n      selectValueOnOpen: true,\n      closeOnEnter: false,\n      onClose: function() { clearSearch(cm); },\n      onKeyDown: onKeyDown\n    });\n  }\n\n  function dialog(cm, text, shortText, deflt, f) {\n    if (cm.openDialog) cm.openDialog(text, f, {value: deflt, selectValueOnOpen: true});\n    else f(prompt(shortText, deflt));\n  }\n\n  function confirmDialog(cm, text, shortText, fs) {\n    if (cm.openConfirm) cm.openConfirm(text, fs);\n    else if (confirm(shortText)) fs[0]();\n  }\n\n  function parseString(string) {\n    return string.replace(/\\\\(.)/g, function(_, ch) {\n      if (ch == \"n\") return \"\\n\"\n      if (ch == \"r\") return \"\\r\"\n      return ch\n    })\n  }\n\n  function parseQuery(query) {\n    var isRE = query.match(/^\\/(.*)\\/([a-z]*)$/);\n    if (isRE) {\n      try { query = new RegExp(isRE[1], isRE[2].indexOf(\"i\") == -1 ? \"\" : \"i\"); }\n      catch(e) {} // Not a regular expression after all, do a string search\n    } else {\n      query = parseString(query)\n    }\n    if (typeof query == \"string\" ? query == \"\" : query.test(\"\"))\n      query = /x^/;\n    return query;\n  }\n\n  var queryDialog =\n    'Search: <input type=\"text\" style=\"width: 10em\" class=\"CodeMirror-search-field\"/> <span style=\"color: #888\" class=\"CodeMirror-search-hint\">(Use /re/ syntax for regexp search)</span>';\n\n  function startSearch(cm, state, query) {\n    state.queryText = query;\n    state.query = parseQuery(query);\n    cm.removeOverlay(state.overlay, queryCaseInsensitive(state.query));\n    state.overlay = searchOverlay(state.query, queryCaseInsensitive(state.query));\n    cm.addOverlay(state.overlay);\n    if (cm.showMatchesOnScrollbar) {\n      if (state.annotate) { state.annotate.clear(); state.annotate = null; }\n      state.annotate = cm.showMatchesOnScrollbar(state.query, queryCaseInsensitive(state.query));\n    }\n  }\n\n  function doSearch(cm, rev, persistent, immediate) {\n    var state = getSearchState(cm);\n    if (state.query) return findNext(cm, rev);\n    var q = cm.getSelection() || state.lastQuery;\n    if (persistent && cm.openDialog) {\n      var hiding = null\n      var searchNext = function(query, event) {\n        CodeMirror.e_stop(event);\n        if (!query) return;\n        if (query != state.queryText) {\n          startSearch(cm, state, query);\n          state.posFrom = state.posTo = cm.getCursor();\n        }\n        if (hiding) hiding.style.opacity = 1\n        findNext(cm, event.shiftKey, function(_, to) {\n          var dialog\n          if (to.line < 3 && document.querySelector &&\n              (dialog = cm.display.wrapper.querySelector(\".CodeMirror-dialog\")) &&\n              dialog.getBoundingClientRect().bottom - 4 > cm.cursorCoords(to, \"window\").top)\n            (hiding = dialog).style.opacity = .4\n        })\n      };\n      persistentDialog(cm, queryDialog, q, searchNext, function(event, query) {\n        var cmd = CodeMirror.keyMap[cm.getOption(\"keyMap\")][CodeMirror.keyName(event)];\n        if (cmd == \"findNext\" || cmd == \"findPrev\") {\n          CodeMirror.e_stop(event);\n          startSearch(cm, getSearchState(cm), query);\n          cm.execCommand(cmd);\n        } else if (cmd == \"find\" || cmd == \"findPersistent\") {\n          CodeMirror.e_stop(event);\n          searchNext(query, event);\n        }\n      });\n      if (immediate) {\n        startSearch(cm, state, q);\n        findNext(cm, rev);\n      }\n    } else {\n      dialog(cm, queryDialog, \"Search for:\", q, function(query) {\n        if (query && !state.query) cm.operation(function() {\n          startSearch(cm, state, query);\n          state.posFrom = state.posTo = cm.getCursor();\n          findNext(cm, rev);\n        });\n      });\n    }\n  }\n\n  function findNext(cm, rev, callback) {cm.operation(function() {\n    var state = getSearchState(cm);\n    var cursor = getSearchCursor(cm, state.query, rev ? state.posFrom : state.posTo);\n    if (!cursor.find(rev)) {\n      cursor = getSearchCursor(cm, state.query, rev ? CodeMirror.Pos(cm.lastLine()) : CodeMirror.Pos(cm.firstLine(), 0));\n      if (!cursor.find(rev)) return;\n    }\n    cm.setSelection(cursor.from(), cursor.to());\n    cm.scrollIntoView({from: cursor.from(), to: cursor.to()}, 20);\n    state.posFrom = cursor.from(); state.posTo = cursor.to();\n    if (callback) callback(cursor.from(), cursor.to())\n  });}\n\n  function clearSearch(cm) {cm.operation(function() {\n    var state = getSearchState(cm);\n    state.lastQuery = state.query;\n    if (!state.query) return;\n    state.query = state.queryText = null;\n    cm.removeOverlay(state.overlay);\n    if (state.annotate) { state.annotate.clear(); state.annotate = null; }\n  });}\n\n  var replaceQueryDialog =\n    ' <input type=\"text\" style=\"width: 10em\" class=\"CodeMirror-search-field\"/> <span style=\"color: #888\" class=\"CodeMirror-search-hint\">(Use /re/ syntax for regexp search)</span>';\n  var replacementQueryDialog = 'With: <input type=\"text\" style=\"width: 10em\" class=\"CodeMirror-search-field\"/>';\n  var doReplaceConfirm = \"Replace? <button>Yes</button> <button>No</button> <button>All</button> <button>Stop</button>\";\n\n  function replaceAll(cm, query, text) {\n    cm.operation(function() {\n      for (var cursor = getSearchCursor(cm, query); cursor.findNext();) {\n        if (typeof query != \"string\") {\n          var match = cm.getRange(cursor.from(), cursor.to()).match(query);\n          cursor.replace(text.replace(/\\$(\\d)/g, function(_, i) {return match[i];}));\n        } else cursor.replace(text);\n      }\n    });\n  }\n\n  function replace(cm, all) {\n    if (cm.getOption(\"readOnly\")) return;\n    var query = cm.getSelection() || getSearchState(cm).lastQuery;\n    var dialogText = all ? \"Replace all:\" : \"Replace:\"\n    dialog(cm, dialogText + replaceQueryDialog, dialogText, query, function(query) {\n      if (!query) return;\n      query = parseQuery(query);\n      dialog(cm, replacementQueryDialog, \"Replace with:\", \"\", function(text) {\n        text = parseString(text)\n        if (all) {\n          replaceAll(cm, query, text)\n        } else {\n          clearSearch(cm);\n          var cursor = getSearchCursor(cm, query, cm.getCursor(\"from\"));\n          var advance = function() {\n            var start = cursor.from(), match;\n            if (!(match = cursor.findNext())) {\n              cursor = getSearchCursor(cm, query);\n              if (!(match = cursor.findNext()) ||\n                  (start && cursor.from().line == start.line && cursor.from().ch == start.ch)) return;\n            }\n            cm.setSelection(cursor.from(), cursor.to());\n            cm.scrollIntoView({from: cursor.from(), to: cursor.to()});\n            confirmDialog(cm, doReplaceConfirm, \"Replace?\",\n                          [function() {doReplace(match);}, advance,\n                           function() {replaceAll(cm, query, text)}]);\n          };\n          var doReplace = function(match) {\n            cursor.replace(typeof query == \"string\" ? text :\n                           text.replace(/\\$(\\d)/g, function(_, i) {return match[i];}));\n            advance();\n          };\n          advance();\n        }\n      });\n    });\n  }\n\n  CodeMirror.commands.find = function(cm) {clearSearch(cm); doSearch(cm);};\n  CodeMirror.commands.findPersistent = function(cm) {clearSearch(cm); doSearch(cm, false, true);};\n  CodeMirror.commands.findPersistentNext = function(cm) {doSearch(cm, false, true, true);};\n  CodeMirror.commands.findPersistentPrev = function(cm) {doSearch(cm, true, true, true);};\n  CodeMirror.commands.findNext = doSearch;\n  CodeMirror.commands.findPrev = function(cm) {doSearch(cm, true);};\n  CodeMirror.commands.clearSearch = clearSearch;\n  CodeMirror.commands.replace = replace;\n  CodeMirror.commands.replaceAll = function(cm) {replace(cm, true);};\n});\n"]}