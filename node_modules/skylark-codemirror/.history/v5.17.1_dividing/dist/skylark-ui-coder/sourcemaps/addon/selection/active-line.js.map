{"version":3,"sources":["addon/selection/active-line.js"],"names":["define","CodeMirror","clearActiveLines","cm","i","state","activeLines","length","removeLineClass","WRAP_CLASS","BACK_CLASS","GUTT_CLASS","sameArray","a","b","updateActiveLines","ranges","active","range","empty","line","getLineHandleVisualStart","head","push","operation","addLineClass","selectionChange","sel","defineOption","val","old","prev","Init","listSelections","on","off"],"mappings":";;;;;;;AASAA,QAAQ,eAAgB,SAASC,GAC/B,YAkBA,SAASC,GAAiBC,GACxB,IAAK,GAAIC,GAAI,EAAGA,EAAID,EAAGE,MAAMC,YAAYC,OAAQH,IAC/CD,EAAGK,gBAAgBL,EAAGE,MAAMC,YAAYF,GAAI,OAAQK,GACpDN,EAAGK,gBAAgBL,EAAGE,MAAMC,YAAYF,GAAI,aAAcM,GAC1DP,EAAGK,gBAAgBL,EAAGE,MAAMC,YAAYF,GAAI,SAAUO,GAI1D,QAASC,GAAUC,EAAGC,GACpB,GAAID,EAAEN,QAAUO,EAAEP,OAAQ,OAAO,CACjC,KAAK,GAAIH,GAAI,EAAGA,EAAIS,EAAEN,OAAQH,IAC5B,GAAIS,EAAET,IAAMU,EAAEV,GAAI,OAAO,CAC3B,QAAO,EAGT,QAASW,GAAkBZ,EAAIa,GAE7B,IAAK,GADDC,MACKb,EAAI,EAAGA,EAAIY,EAAOT,OAAQH,IAAK,CACtC,GAAIc,GAAQF,EAAOZ,EACnB,IAAKc,EAAMC,QAAX,CACA,GAAIC,GAAOjB,EAAGkB,yBAAyBH,EAAMI,KAAKF,KAC9CH,GAAOA,EAAOV,OAAS,IAAMa,GAAMH,EAAOM,KAAKH,IAEjDR,EAAUT,EAAGE,MAAMC,YAAaW,IACpCd,EAAGqB,UAAU,WACXtB,EAAiBC,EACjB,KAAK,GAAIC,GAAI,EAAGA,EAAIa,EAAOV,OAAQH,IACjCD,EAAGsB,aAAaR,EAAOb,GAAI,OAAQK,GACnCN,EAAGsB,aAAaR,EAAOb,GAAI,aAAcM,GACzCP,EAAGsB,aAAaR,EAAOb,GAAI,SAAUO,EAEvCR,GAAGE,MAAMC,YAAcW,IAI3B,QAASS,GAAgBvB,EAAIwB,GAC3BZ,EAAkBZ,EAAIwB,EAAIX,QArD5B,GAAIP,GAAa,wBACbC,EAAa,mCACbC,EAAa,8BAEjBV,GAAW2B,aAAa,mBAAmB,EAAO,SAASzB,EAAI0B,EAAKC,GAClE,GAAIC,GAAOD,GAAOA,GAAO7B,EAAW+B,IAChCH,KAAQE,GACV5B,EAAGE,MAAMC,eACTS,EAAkBZ,EAAIA,EAAG8B,kBACzB9B,EAAG+B,GAAG,wBAAyBR,KACrBG,GAAOE,IACjB5B,EAAGgC,IAAI,wBAAyBT,GAChCxB,EAAiBC,SACVA,GAAGE,MAAMC","file":"../../../addon/selection/active-line.js","sourcesContent":["// CodeMirror, copyright (c) by Marijn Haverbeke and others\n// Distributed under an MIT license: http://codemirror.net/LICENSE\n\n// Because sometimes you need to style the cursor's line.\n//\n// Adds an option 'styleActiveLine' which, when enabled, gives the\n// active line's wrapping <div> the CSS class \"CodeMirror-activeline\",\n// and gives its background <div> the class \"CodeMirror-activeline-background\".\n\ndefine([\"../../Coder\"], function(CodeMirror) {\n  \"use strict\";\n  var WRAP_CLASS = \"CodeMirror-activeline\";\n  var BACK_CLASS = \"CodeMirror-activeline-background\";\n  var GUTT_CLASS = \"CodeMirror-activeline-gutter\";\n\n  CodeMirror.defineOption(\"styleActiveLine\", false, function(cm, val, old) {\n    var prev = old && old != CodeMirror.Init;\n    if (val && !prev) {\n      cm.state.activeLines = [];\n      updateActiveLines(cm, cm.listSelections());\n      cm.on(\"beforeSelectionChange\", selectionChange);\n    } else if (!val && prev) {\n      cm.off(\"beforeSelectionChange\", selectionChange);\n      clearActiveLines(cm);\n      delete cm.state.activeLines;\n    }\n  });\n\n  function clearActiveLines(cm) {\n    for (var i = 0; i < cm.state.activeLines.length; i++) {\n      cm.removeLineClass(cm.state.activeLines[i], \"wrap\", WRAP_CLASS);\n      cm.removeLineClass(cm.state.activeLines[i], \"background\", BACK_CLASS);\n      cm.removeLineClass(cm.state.activeLines[i], \"gutter\", GUTT_CLASS);\n    }\n  }\n\n  function sameArray(a, b) {\n    if (a.length != b.length) return false;\n    for (var i = 0; i < a.length; i++)\n      if (a[i] != b[i]) return false;\n    return true;\n  }\n\n  function updateActiveLines(cm, ranges) {\n    var active = [];\n    for (var i = 0; i < ranges.length; i++) {\n      var range = ranges[i];\n      if (!range.empty()) continue;\n      var line = cm.getLineHandleVisualStart(range.head.line);\n      if (active[active.length - 1] != line) active.push(line);\n    }\n    if (sameArray(cm.state.activeLines, active)) return;\n    cm.operation(function() {\n      clearActiveLines(cm);\n      for (var i = 0; i < active.length; i++) {\n        cm.addLineClass(active[i], \"wrap\", WRAP_CLASS);\n        cm.addLineClass(active[i], \"background\", BACK_CLASS);\n        cm.addLineClass(active[i], \"gutter\", GUTT_CLASS);\n      }\n      cm.state.activeLines = active;\n    });\n  }\n\n  function selectionChange(cm, sel) {\n    updateActiveLines(cm, sel.ranges);\n  }\n});\n"]}