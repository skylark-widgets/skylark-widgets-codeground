{"version":3,"sources":["addon/selection/selection-pointer.js"],"names":["define","CodeMirror","mousemove","cm","event","data","state","selectionPointer","buttons","which","mouseX","mouseY","clientX","clientY","scheduleUpdate","mouseout","getWrapperElement","contains","relatedTarget","reset","rects","willUpdate","setTimeout","update","somethingSelected","sel","display","selectionDiv","firstChild","nextSibling","push","getBoundingClientRect","inside","i","length","rect","left","right","top","bottom","cursor","value","lineDiv","style","defineOption","val","off","window","windowScroll","on"],"mappings":";;;;;;;AAGAA,QAAQ,eAAgB,SAASC,GAC/B,YA+BA,SAASC,GAAUC,EAAIC,GACrB,GAAIC,GAAOF,EAAGG,MAAMC,kBACC,MAAjBH,EAAMI,QAAkBJ,EAAMK,MAAQL,EAAMI,SAC9CH,EAAKK,OAASL,EAAKM,OAAS,MAE5BN,EAAKK,OAASN,EAAMQ,QACpBP,EAAKM,OAASP,EAAMS,SAEtBC,EAAeX,GAGjB,QAASY,GAASZ,EAAIC,GACpB,IAAKD,EAAGa,oBAAoBC,SAASb,EAAMc,eAAgB,CACzD,GAAIb,GAAOF,EAAGG,MAAMC,gBACpBF,GAAKK,OAASL,EAAKM,OAAS,KAC5BG,EAAeX,IAInB,QAASgB,GAAMhB,GACbA,EAAGG,MAAMC,iBAAiBa,MAAQ,KAClCN,EAAeX,GAGjB,QAASW,GAAeX,GACjBA,EAAGG,MAAMC,iBAAiBc,aAC7BlB,EAAGG,MAAMC,iBAAiBc,YAAa,EACvCC,WAAW,WACTC,EAAOpB,GACPA,EAAGG,MAAMC,iBAAiBc,YAAa,GACtC,KAIP,QAASE,GAAOpB,GACd,GAAIE,GAAOF,EAAGG,MAAMC,gBACpB,IAAKF,EAAL,CACA,GAAkB,MAAdA,EAAKe,OAAgC,MAAff,EAAKK,SAC7BL,EAAKe,SACDjB,EAAGqB,qBACL,IAAK,GAAIC,GAAMtB,EAAGuB,QAAQC,aAAaC,WAAYH,EAAKA,EAAMA,EAAII,YAChExB,EAAKe,MAAMU,KAAKL,EAAIM,wBAG1B,IAAIC,IAAS,CACb,IAAmB,MAAf3B,EAAKK,OAAgB,IAAK,GAAIuB,GAAI,EAAGA,EAAI5B,EAAKe,MAAMc,OAAQD,IAAK,CACnE,GAAIE,GAAO9B,EAAKe,MAAMa,EAClBE,GAAKC,MAAQ/B,EAAKK,QAAUyB,EAAKE,OAAShC,EAAKK,QAC/CyB,EAAKG,KAAOjC,EAAKM,QAAUwB,EAAKI,QAAUlC,EAAKM,SACjDqB,GAAS,GAEb,GAAIQ,GAASR,EAAS3B,EAAKoC,MAAQ,EAC/BtC,GAAGuB,QAAQgB,QAAQC,MAAMH,QAAUA,IACrCrC,EAAGuB,QAAQgB,QAAQC,MAAMH,OAASA,IAlFtCvC,EAAW2C,aAAa,oBAAoB,EAAO,SAASzC,EAAI0C,GAC9D,GAAIxC,GAAOF,EAAGG,MAAMC,gBAChBF,KACFJ,EAAW6C,IAAI3C,EAAGa,oBAAqB,YAAaX,EAAKH,WACzDD,EAAW6C,IAAI3C,EAAGa,oBAAqB,WAAYX,EAAKU,UACxDd,EAAW6C,IAAIC,OAAQ,SAAU1C,EAAK2C,cACtC7C,EAAG2C,IAAI,iBAAkB3B,GACzBhB,EAAG2C,IAAI,SAAU3B,GACjBhB,EAAGG,MAAMC,iBAAmB,KAC5BJ,EAAGuB,QAAQgB,QAAQC,MAAMH,OAAS,IAEhCK,IACFxC,EAAOF,EAAGG,MAAMC,kBACdkC,MAAqB,gBAAPI,GAAkBA,EAAM,UACtC3C,UAAW,SAASE,GAASF,EAAUC,EAAIC,IAC3CW,SAAU,SAASX,GAASW,EAASZ,EAAIC,IACzC4C,aAAc,WAAa7B,EAAMhB,IACjCiB,MAAO,KACPV,OAAQ,KAAMC,OAAQ,KACtBU,YAAY,GAEdpB,EAAWgD,GAAG9C,EAAGa,oBAAqB,YAAaX,EAAKH,WACxDD,EAAWgD,GAAG9C,EAAGa,oBAAqB,WAAYX,EAAKU,UACvDd,EAAWgD,GAAGF,OAAQ,SAAU1C,EAAK2C,cACrC7C,EAAG8C,GAAG,iBAAkB9B,GACxBhB,EAAG8C,GAAG,SAAU9B","file":"../../../addon/selection/selection-pointer.js","sourcesContent":["// CodeMirror, copyright (c) by Marijn Haverbeke and others\n// Distributed under an MIT license: http://codemirror.net/LICENSE\n\ndefine([\"../../Coder\"], function(CodeMirror) {\n  \"use strict\";\n\n  CodeMirror.defineOption(\"selectionPointer\", false, function(cm, val) {\n    var data = cm.state.selectionPointer;\n    if (data) {\n      CodeMirror.off(cm.getWrapperElement(), \"mousemove\", data.mousemove);\n      CodeMirror.off(cm.getWrapperElement(), \"mouseout\", data.mouseout);\n      CodeMirror.off(window, \"scroll\", data.windowScroll);\n      cm.off(\"cursorActivity\", reset);\n      cm.off(\"scroll\", reset);\n      cm.state.selectionPointer = null;\n      cm.display.lineDiv.style.cursor = \"\";\n    }\n    if (val) {\n      data = cm.state.selectionPointer = {\n        value: typeof val == \"string\" ? val : \"default\",\n        mousemove: function(event) { mousemove(cm, event); },\n        mouseout: function(event) { mouseout(cm, event); },\n        windowScroll: function() { reset(cm); },\n        rects: null,\n        mouseX: null, mouseY: null,\n        willUpdate: false\n      };\n      CodeMirror.on(cm.getWrapperElement(), \"mousemove\", data.mousemove);\n      CodeMirror.on(cm.getWrapperElement(), \"mouseout\", data.mouseout);\n      CodeMirror.on(window, \"scroll\", data.windowScroll);\n      cm.on(\"cursorActivity\", reset);\n      cm.on(\"scroll\", reset);\n    }\n  });\n\n  function mousemove(cm, event) {\n    var data = cm.state.selectionPointer;\n    if (event.buttons == null ? event.which : event.buttons) {\n      data.mouseX = data.mouseY = null;\n    } else {\n      data.mouseX = event.clientX;\n      data.mouseY = event.clientY;\n    }\n    scheduleUpdate(cm);\n  }\n\n  function mouseout(cm, event) {\n    if (!cm.getWrapperElement().contains(event.relatedTarget)) {\n      var data = cm.state.selectionPointer;\n      data.mouseX = data.mouseY = null;\n      scheduleUpdate(cm);\n    }\n  }\n\n  function reset(cm) {\n    cm.state.selectionPointer.rects = null;\n    scheduleUpdate(cm);\n  }\n\n  function scheduleUpdate(cm) {\n    if (!cm.state.selectionPointer.willUpdate) {\n      cm.state.selectionPointer.willUpdate = true;\n      setTimeout(function() {\n        update(cm);\n        cm.state.selectionPointer.willUpdate = false;\n      }, 50);\n    }\n  }\n\n  function update(cm) {\n    var data = cm.state.selectionPointer;\n    if (!data) return;\n    if (data.rects == null && data.mouseX != null) {\n      data.rects = [];\n      if (cm.somethingSelected()) {\n        for (var sel = cm.display.selectionDiv.firstChild; sel; sel = sel.nextSibling)\n          data.rects.push(sel.getBoundingClientRect());\n      }\n    }\n    var inside = false;\n    if (data.mouseX != null) for (var i = 0; i < data.rects.length; i++) {\n      var rect = data.rects[i];\n      if (rect.left <= data.mouseX && rect.right >= data.mouseX &&\n          rect.top <= data.mouseY && rect.bottom >= data.mouseY)\n        inside = true;\n    }\n    var cursor = inside ? data.value : \"\";\n    if (cm.display.lineDiv.style.cursor != cursor)\n      cm.display.lineDiv.style.cursor = cursor;\n  }\n});\n"]}