{"version":3,"sources":["keymap/emacs.js"],"names":["define","CodeMirror","posEq","a","b","line","ch","addToRing","str","killRing","push","length","shift","growRingTop","getFromRing","n","Math","min","popFromRing","pop","kill","cm","from","to","mayGrow","text","getRange","lastKill","pos","isClean","gen","replaceRange","changeGeneration","byChar","dir","findPosH","byWord","byLine","findPosV","doc","sel","goalColumn","byPage","byParagraph","no","getLine","sawText","test","slice","fst","firstLine","lst","lastLine","clipPos","Pos","hasText","bySentence","sawWord","next","charAt","byExpr","wrap","findMatchingBracket","match","forward","first","token","getTokenAt","after","start","end","string","newPos","getPrefix","precise","digits","state","emacsPrefix","clearPrefix","Number","repeated","cmd","f","execCommand","prefix","i","findEnd","by","move","extendSelection","getCursor","motion","killTo","cursor","selections","listSelections","head","killRegion","somethingSelected","selection","anchor","addPrefix","digit","on","maybeClearPrefix","maybeDuplicateInput","arg","emacsPrefixMap","prefixPreservingKeys","hasOwnProperty","off","event","dup","origin","one","join","txt","replaceSelection","addPrefixMap","addKeyMap","prefixMap","maybeRemovePrefixMap","removeKeyMap","setMark","setCursor","setExtending","getExtending","clearMark","getInput","msg","openDialog","bottom","prompt","operateOnWord","op","toEnclosingExpr","stack","quit","regPrefix","d","keyMap","Alt-G","Ctrl-X","Ctrl-Q","Ctrl-U","emacs","normalizeKeyMap","Ctrl-W","Ctrl-K","Alt-W","getSelection","Ctrl-Y","setSelection","Alt-Y","Ctrl-Space","Ctrl-Shift-2","Ctrl-F","Ctrl-B","Right","Left","Ctrl-D","Delete","Ctrl-H","Backspace","Alt-F","Alt-B","Alt-D","Alt-Backspace","Ctrl-N","Ctrl-P","Down","Up","Ctrl-A","Ctrl-E","End","Home","Alt-V","Ctrl-V","PageUp","PageDown","Ctrl-Up","Ctrl-Down","Alt-A","Alt-E","Alt-K","Ctrl-Alt-K","Ctrl-Alt-Backspace","Ctrl-Alt-F","Ctrl-Alt-B","Shift-Ctrl-Alt-2","Ctrl-Alt-T","leftStart","leftEnd","rightEnd","rightStart","Ctrl-Alt-U","Alt-Space","Ctrl-O","Ctrl-T","Alt-C","w","letter","search","toUpperCase","toLowerCase","Alt-U","Alt-L","Alt-;","Ctrl-/","Shift-Ctrl--","Ctrl-Z","Cmd-Z","Shift-Alt-,","Shift-Alt-.","Ctrl-S","Ctrl-R","Ctrl-G","Shift-Alt-5","Alt-/","Ctrl-J","Enter","Tab","Alt-G G","num","isNaN","Ctrl-X Tab","indentSelection","getOption","Ctrl-X Ctrl-X","Ctrl-X Ctrl-S","Ctrl-X Ctrl-W","Ctrl-X S","Ctrl-X F","Ctrl-X U","Ctrl-X K","Ctrl-X Delete","Ctrl-X H","Ctrl-Q Tab","String"],"mappings":"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","file":"../../keymap/emacs.js","sourcesContent":["// CodeMirror, copyright (c) by Marijn Haverbeke and others\n// Distributed under an MIT license: http://codemirror.net/LICENSE\n\ndefine([\"../../Coder\"], function(CodeMirror) {\n  \"use strict\";\n\n  var Pos = CodeMirror.Pos;\n  function posEq(a, b) { return a.line == b.line && a.ch == b.ch; }\n\n  // Kill 'ring'\n\n  var killRing = [];\n  function addToRing(str) {\n    killRing.push(str);\n    if (killRing.length > 50) killRing.shift();\n  }\n  function growRingTop(str) {\n    if (!killRing.length) return addToRing(str);\n    killRing[killRing.length - 1] += str;\n  }\n  function getFromRing(n) { return killRing[killRing.length - (n ? Math.min(n, 1) : 1)] || \"\"; }\n  function popFromRing() { if (killRing.length > 1) killRing.pop(); return getFromRing(); }\n\n  var lastKill = null;\n\n  function kill(cm, from, to, mayGrow, text) {\n    if (text == null) text = cm.getRange(from, to);\n\n    if (mayGrow && lastKill && lastKill.cm == cm && posEq(from, lastKill.pos) && cm.isClean(lastKill.gen))\n      growRingTop(text);\n    else\n      addToRing(text);\n    cm.replaceRange(\"\", from, to, \"+delete\");\n\n    if (mayGrow) lastKill = {cm: cm, pos: from, gen: cm.changeGeneration()};\n    else lastKill = null;\n  }\n\n  // Boundaries of various units\n\n  function byChar(cm, pos, dir) {\n    return cm.findPosH(pos, dir, \"char\", true);\n  }\n\n  function byWord(cm, pos, dir) {\n    return cm.findPosH(pos, dir, \"word\", true);\n  }\n\n  function byLine(cm, pos, dir) {\n    return cm.findPosV(pos, dir, \"line\", cm.doc.sel.goalColumn);\n  }\n\n  function byPage(cm, pos, dir) {\n    return cm.findPosV(pos, dir, \"page\", cm.doc.sel.goalColumn);\n  }\n\n  function byParagraph(cm, pos, dir) {\n    var no = pos.line, line = cm.getLine(no);\n    var sawText = /\\S/.test(dir < 0 ? line.slice(0, pos.ch) : line.slice(pos.ch));\n    var fst = cm.firstLine(), lst = cm.lastLine();\n    for (;;) {\n      no += dir;\n      if (no < fst || no > lst)\n        return cm.clipPos(Pos(no - dir, dir < 0 ? 0 : null));\n      line = cm.getLine(no);\n      var hasText = /\\S/.test(line);\n      if (hasText) sawText = true;\n      else if (sawText) return Pos(no, 0);\n    }\n  }\n\n  function bySentence(cm, pos, dir) {\n    var line = pos.line, ch = pos.ch;\n    var text = cm.getLine(pos.line), sawWord = false;\n    for (;;) {\n      var next = text.charAt(ch + (dir < 0 ? -1 : 0));\n      if (!next) { // End/beginning of line reached\n        if (line == (dir < 0 ? cm.firstLine() : cm.lastLine())) return Pos(line, ch);\n        text = cm.getLine(line + dir);\n        if (!/\\S/.test(text)) return Pos(line, ch);\n        line += dir;\n        ch = dir < 0 ? text.length : 0;\n        continue;\n      }\n      if (sawWord && /[!?.]/.test(next)) return Pos(line, ch + (dir > 0 ? 1 : 0));\n      if (!sawWord) sawWord = /\\w/.test(next);\n      ch += dir;\n    }\n  }\n\n  function byExpr(cm, pos, dir) {\n    var wrap;\n    if (cm.findMatchingBracket && (wrap = cm.findMatchingBracket(pos, true))\n        && wrap.match && (wrap.forward ? 1 : -1) == dir)\n      return dir > 0 ? Pos(wrap.to.line, wrap.to.ch + 1) : wrap.to;\n\n    for (var first = true;; first = false) {\n      var token = cm.getTokenAt(pos);\n      var after = Pos(pos.line, dir < 0 ? token.start : token.end);\n      if (first && dir > 0 && token.end == pos.ch || !/\\w/.test(token.string)) {\n        var newPos = cm.findPosH(after, dir, \"char\");\n        if (posEq(after, newPos)) return pos;\n        else pos = newPos;\n      } else {\n        return after;\n      }\n    }\n  }\n\n  // Prefixes (only crudely supported)\n\n  function getPrefix(cm, precise) {\n    var digits = cm.state.emacsPrefix;\n    if (!digits) return precise ? null : 1;\n    clearPrefix(cm);\n    return digits == \"-\" ? -1 : Number(digits);\n  }\n\n  function repeated(cmd) {\n    var f = typeof cmd == \"string\" ? function(cm) { cm.execCommand(cmd); } : cmd;\n    return function(cm) {\n      var prefix = getPrefix(cm);\n      f(cm);\n      for (var i = 1; i < prefix; ++i) f(cm);\n    };\n  }\n\n  function findEnd(cm, pos, by, dir) {\n    var prefix = getPrefix(cm);\n    if (prefix < 0) { dir = -dir; prefix = -prefix; }\n    for (var i = 0; i < prefix; ++i) {\n      var newPos = by(cm, pos, dir);\n      if (posEq(newPos, pos)) break;\n      pos = newPos;\n    }\n    return pos;\n  }\n\n  function move(by, dir) {\n    var f = function(cm) {\n      cm.extendSelection(findEnd(cm, cm.getCursor(), by, dir));\n    };\n    f.motion = true;\n    return f;\n  }\n\n  function killTo(cm, by, dir) {\n    var selections = cm.listSelections(), cursor;\n    var i = selections.length;\n    while (i--) {\n      cursor = selections[i].head;\n      kill(cm, cursor, findEnd(cm, cursor, by, dir), true);\n    }\n  }\n\n  function killRegion(cm) {\n    if (cm.somethingSelected()) {\n      var selections = cm.listSelections(), selection;\n      var i = selections.length;\n      while (i--) {\n        selection = selections[i];\n        kill(cm, selection.anchor, selection.head);\n      }\n      return true;\n    }\n  }\n\n  function addPrefix(cm, digit) {\n    if (cm.state.emacsPrefix) {\n      if (digit != \"-\") cm.state.emacsPrefix += digit;\n      return;\n    }\n    // Not active yet\n    cm.state.emacsPrefix = digit;\n    cm.on(\"keyHandled\", maybeClearPrefix);\n    cm.on(\"inputRead\", maybeDuplicateInput);\n  }\n\n  var prefixPreservingKeys = {\"Alt-G\": true, \"Ctrl-X\": true, \"Ctrl-Q\": true, \"Ctrl-U\": true};\n\n  function maybeClearPrefix(cm, arg) {\n    if (!cm.state.emacsPrefixMap && !prefixPreservingKeys.hasOwnProperty(arg))\n      clearPrefix(cm);\n  }\n\n  function clearPrefix(cm) {\n    cm.state.emacsPrefix = null;\n    cm.off(\"keyHandled\", maybeClearPrefix);\n    cm.off(\"inputRead\", maybeDuplicateInput);\n  }\n\n  function maybeDuplicateInput(cm, event) {\n    var dup = getPrefix(cm);\n    if (dup > 1 && event.origin == \"+input\") {\n      var one = event.text.join(\"\\n\"), txt = \"\";\n      for (var i = 1; i < dup; ++i) txt += one;\n      cm.replaceSelection(txt);\n    }\n  }\n\n  function addPrefixMap(cm) {\n    cm.state.emacsPrefixMap = true;\n    cm.addKeyMap(prefixMap);\n    cm.on(\"keyHandled\", maybeRemovePrefixMap);\n    cm.on(\"inputRead\", maybeRemovePrefixMap);\n  }\n\n  function maybeRemovePrefixMap(cm, arg) {\n    if (typeof arg == \"string\" && (/^\\d$/.test(arg) || arg == \"Ctrl-U\")) return;\n    cm.removeKeyMap(prefixMap);\n    cm.state.emacsPrefixMap = false;\n    cm.off(\"keyHandled\", maybeRemovePrefixMap);\n    cm.off(\"inputRead\", maybeRemovePrefixMap);\n  }\n\n  // Utilities\n\n  function setMark(cm) {\n    cm.setCursor(cm.getCursor());\n    cm.setExtending(!cm.getExtending());\n    cm.on(\"change\", function() { cm.setExtending(false); });\n  }\n\n  function clearMark(cm) {\n    cm.setExtending(false);\n    cm.setCursor(cm.getCursor());\n  }\n\n  function getInput(cm, msg, f) {\n    if (cm.openDialog)\n      cm.openDialog(msg + \": <input type=\\\"text\\\" style=\\\"width: 10em\\\"/>\", f, {bottom: true});\n    else\n      f(prompt(msg, \"\"));\n  }\n\n  function operateOnWord(cm, op) {\n    var start = cm.getCursor(), end = cm.findPosH(start, 1, \"word\");\n    cm.replaceRange(op(cm.getRange(start, end)), start, end);\n    cm.setCursor(end);\n  }\n\n  function toEnclosingExpr(cm) {\n    var pos = cm.getCursor(), line = pos.line, ch = pos.ch;\n    var stack = [];\n    while (line >= cm.firstLine()) {\n      var text = cm.getLine(line);\n      for (var i = ch == null ? text.length : ch; i > 0;) {\n        var ch = text.charAt(--i);\n        if (ch == \")\")\n          stack.push(\"(\");\n        else if (ch == \"]\")\n          stack.push(\"[\");\n        else if (ch == \"}\")\n          stack.push(\"{\");\n        else if (/[\\(\\{\\[]/.test(ch) && (!stack.length || stack.pop() != ch))\n          return cm.extendSelection(Pos(line, i));\n      }\n      --line; ch = null;\n    }\n  }\n\n  function quit(cm) {\n    cm.execCommand(\"clearSearch\");\n    clearMark(cm);\n  }\n\n  // Actual keymap\n\n  var keyMap = CodeMirror.keyMap.emacs = CodeMirror.normalizeKeyMap({\n    \"Ctrl-W\": function(cm) {kill(cm, cm.getCursor(\"start\"), cm.getCursor(\"end\"));},\n    \"Ctrl-K\": repeated(function(cm) {\n      var start = cm.getCursor(), end = cm.clipPos(Pos(start.line));\n      var text = cm.getRange(start, end);\n      if (!/\\S/.test(text)) {\n        text += \"\\n\";\n        end = Pos(start.line + 1, 0);\n      }\n      kill(cm, start, end, true, text);\n    }),\n    \"Alt-W\": function(cm) {\n      addToRing(cm.getSelection());\n      clearMark(cm);\n    },\n    \"Ctrl-Y\": function(cm) {\n      var start = cm.getCursor();\n      cm.replaceRange(getFromRing(getPrefix(cm)), start, start, \"paste\");\n      cm.setSelection(start, cm.getCursor());\n    },\n    \"Alt-Y\": function(cm) {cm.replaceSelection(popFromRing(), \"around\", \"paste\");},\n\n    \"Ctrl-Space\": setMark, \"Ctrl-Shift-2\": setMark,\n\n    \"Ctrl-F\": move(byChar, 1), \"Ctrl-B\": move(byChar, -1),\n    \"Right\": move(byChar, 1), \"Left\": move(byChar, -1),\n    \"Ctrl-D\": function(cm) { killTo(cm, byChar, 1); },\n    \"Delete\": function(cm) { killRegion(cm) || killTo(cm, byChar, 1); },\n    \"Ctrl-H\": function(cm) { killTo(cm, byChar, -1); },\n    \"Backspace\": function(cm) { killRegion(cm) || killTo(cm, byChar, -1); },\n\n    \"Alt-F\": move(byWord, 1), \"Alt-B\": move(byWord, -1),\n    \"Alt-D\": function(cm) { killTo(cm, byWord, 1); },\n    \"Alt-Backspace\": function(cm) { killTo(cm, byWord, -1); },\n\n    \"Ctrl-N\": move(byLine, 1), \"Ctrl-P\": move(byLine, -1),\n    \"Down\": move(byLine, 1), \"Up\": move(byLine, -1),\n    \"Ctrl-A\": \"goLineStart\", \"Ctrl-E\": \"goLineEnd\",\n    \"End\": \"goLineEnd\", \"Home\": \"goLineStart\",\n\n    \"Alt-V\": move(byPage, -1), \"Ctrl-V\": move(byPage, 1),\n    \"PageUp\": move(byPage, -1), \"PageDown\": move(byPage, 1),\n\n    \"Ctrl-Up\": move(byParagraph, -1), \"Ctrl-Down\": move(byParagraph, 1),\n\n    \"Alt-A\": move(bySentence, -1), \"Alt-E\": move(bySentence, 1),\n    \"Alt-K\": function(cm) { killTo(cm, bySentence, 1); },\n\n    \"Ctrl-Alt-K\": function(cm) { killTo(cm, byExpr, 1); },\n    \"Ctrl-Alt-Backspace\": function(cm) { killTo(cm, byExpr, -1); },\n    \"Ctrl-Alt-F\": move(byExpr, 1), \"Ctrl-Alt-B\": move(byExpr, -1),\n\n    \"Shift-Ctrl-Alt-2\": function(cm) {\n      var cursor = cm.getCursor();\n      cm.setSelection(findEnd(cm, cursor, byExpr, 1), cursor);\n    },\n    \"Ctrl-Alt-T\": function(cm) {\n      var leftStart = byExpr(cm, cm.getCursor(), -1), leftEnd = byExpr(cm, leftStart, 1);\n      var rightEnd = byExpr(cm, leftEnd, 1), rightStart = byExpr(cm, rightEnd, -1);\n      cm.replaceRange(cm.getRange(rightStart, rightEnd) + cm.getRange(leftEnd, rightStart) +\n                      cm.getRange(leftStart, leftEnd), leftStart, rightEnd);\n    },\n    \"Ctrl-Alt-U\": repeated(toEnclosingExpr),\n\n    \"Alt-Space\": function(cm) {\n      var pos = cm.getCursor(), from = pos.ch, to = pos.ch, text = cm.getLine(pos.line);\n      while (from && /\\s/.test(text.charAt(from - 1))) --from;\n      while (to < text.length && /\\s/.test(text.charAt(to))) ++to;\n      cm.replaceRange(\" \", Pos(pos.line, from), Pos(pos.line, to));\n    },\n    \"Ctrl-O\": repeated(function(cm) { cm.replaceSelection(\"\\n\", \"start\"); }),\n    \"Ctrl-T\": repeated(function(cm) {\n      cm.execCommand(\"transposeChars\");\n    }),\n\n    \"Alt-C\": repeated(function(cm) {\n      operateOnWord(cm, function(w) {\n        var letter = w.search(/\\w/);\n        if (letter == -1) return w;\n        return w.slice(0, letter) + w.charAt(letter).toUpperCase() + w.slice(letter + 1).toLowerCase();\n      });\n    }),\n    \"Alt-U\": repeated(function(cm) {\n      operateOnWord(cm, function(w) { return w.toUpperCase(); });\n    }),\n    \"Alt-L\": repeated(function(cm) {\n      operateOnWord(cm, function(w) { return w.toLowerCase(); });\n    }),\n\n    \"Alt-;\": \"toggleComment\",\n\n    \"Ctrl-/\": repeated(\"undo\"), \"Shift-Ctrl--\": repeated(\"undo\"),\n    \"Ctrl-Z\": repeated(\"undo\"), \"Cmd-Z\": repeated(\"undo\"),\n    \"Shift-Alt-,\": \"goDocStart\", \"Shift-Alt-.\": \"goDocEnd\",\n    \"Ctrl-S\": \"findNext\", \"Ctrl-R\": \"findPrev\", \"Ctrl-G\": quit, \"Shift-Alt-5\": \"replace\",\n    \"Alt-/\": \"autocomplete\",\n    \"Ctrl-J\": \"newlineAndIndent\", \"Enter\": false, \"Tab\": \"indentAuto\",\n\n    \"Alt-G G\": function(cm) {\n      var prefix = getPrefix(cm, true);\n      if (prefix != null && prefix > 0) return cm.setCursor(prefix - 1);\n\n      getInput(cm, \"Goto line\", function(str) {\n        var num;\n        if (str && !isNaN(num = Number(str)) && num == (num|0) && num > 0)\n          cm.setCursor(num - 1);\n      });\n    },\n\n    \"Ctrl-X Tab\": function(cm) {\n      cm.indentSelection(getPrefix(cm, true) || cm.getOption(\"indentUnit\"));\n    },\n    \"Ctrl-X Ctrl-X\": function(cm) {\n      cm.setSelection(cm.getCursor(\"head\"), cm.getCursor(\"anchor\"));\n    },\n    \"Ctrl-X Ctrl-S\": \"save\",\n    \"Ctrl-X Ctrl-W\": \"save\",\n    \"Ctrl-X S\": \"saveAll\",\n    \"Ctrl-X F\": \"open\",\n    \"Ctrl-X U\": repeated(\"undo\"),\n    \"Ctrl-X K\": \"close\",\n    \"Ctrl-X Delete\": function(cm) { kill(cm, cm.getCursor(), bySentence(cm, cm.getCursor(), 1), true); },\n    \"Ctrl-X H\": \"selectAll\",\n\n    \"Ctrl-Q Tab\": repeated(\"insertTab\"),\n    \"Ctrl-U\": addPrefixMap\n  });\n\n  var prefixMap = {\"Ctrl-G\": clearPrefix};\n  function regPrefix(d) {\n    prefixMap[d] = function(cm) { addPrefix(cm, d); };\n    keyMap[\"Ctrl-\" + d] = function(cm) { addPrefix(cm, d); };\n    prefixPreservingKeys[\"Ctrl-\" + d] = true;\n  }\n  for (var i = 0; i < 10; ++i) regPrefix(String(i));\n  regPrefix(\"-\");\n});\n"]}