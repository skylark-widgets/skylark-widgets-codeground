{"version":3,"sources":["keymap/sublime.js"],"names":["define","CodeMirror","findPosSubword","doc","start","dir","ch","clipPos","Pos","line","getLine","length","type","state","pos","e","i","next","charAt","cat","isWordChar","toUpperCase","moveSubword","cm","extendSelectionsBy","range","display","shift","extend","empty","head","from","to","insertLine","above","isReadOnly","Pass","operation","len","listSelections","newSelection","last","at","replaceRange","indentLine","push","anchor","setSelections","execCommand","wordAt","end","word","slice","selectBetweenBrackets","getCursor","opening","scanForBracket","closing","mirror","indexOf","setSelection","sortLines","caseSensitive","selected","ranges","toSort","firstLine","lastLine","lines","getRange","sort","a","b","au","bu","modifyWordOrSelection","mod","indices","replacements","replaceSelections","cmpPos","getTarget","query","findAndGoTo","forward","target","cur","getSearchCursor","findNext","findPrevious","map","keyMap","sublime","fallthrough","cmds","commands","mac","macDefault","ctrl","goSubwordCombo","scrollLineCombo","info","getScrollInfo","somethingSelected","visibleBottomLine","lineAtHeight","top","clientHeight","scrollTo","defaultTextHeight","visibleTopLine","lineRanges","scroll","extended","fullWord","sublimeFindFullWord","sel","text","RegExp","addSelection","prev","swapLineCombo","linesToMove","newSels","scrollIntoView","toggleComment","indent","joined","offset","obj","actual","exec","rangeCount","marks","sublimeBookmarks","current","found","find","unshift","pop","findMarks","j","sublimeBookmark","clear","k","splice","markText","clearWhenEmpty","cK","cursors","indentUnit","getOption","cursor","toStartOfLine","column","countColumn","deletePos","findPosH","test","prevIndent","findColumn","str","toLowerCase","sublimeMark","setBookmark","tmp","sublimeKilled","setCursor","replaceSelection","cursorCoords","bottom","selectLinesCombo","matches","primaryIndex","normalizeKeyMap"],"mappings":"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","file":"../../keymap/sublime.js","sourcesContent":["// CodeMirror, copyright (c) by Marijn Haverbeke and others\n// Distributed under an MIT license: http://codemirror.net/LICENSE\n\n// A rough approximation of Sublime Text's keybindings\n// Depends on addon/search/searchcursor.js and optionally addon/dialog/dialogs.js\n\ndefine([\"../lib/codemirror\", \"../addon/search/searchcursor\", \"../addon/edit/matchbrackets\"], function(CodeMirror) {\n  \"use strict\";\n\n  var map = CodeMirror.keyMap.sublime = {fallthrough: \"default\"};\n  var cmds = CodeMirror.commands;\n  var Pos = CodeMirror.Pos;\n  var mac = CodeMirror.keyMap[\"default\"] == CodeMirror.keyMap.macDefault;\n  var ctrl = mac ? \"Cmd-\" : \"Ctrl-\";\n\n  // This is not exactly Sublime's algorithm. I couldn't make heads or tails of that.\n  function findPosSubword(doc, start, dir) {\n    if (dir < 0 && start.ch == 0) return doc.clipPos(Pos(start.line - 1));\n    var line = doc.getLine(start.line);\n    if (dir > 0 && start.ch >= line.length) return doc.clipPos(Pos(start.line + 1, 0));\n    var state = \"start\", type;\n    for (var pos = start.ch, e = dir < 0 ? 0 : line.length, i = 0; pos != e; pos += dir, i++) {\n      var next = line.charAt(dir < 0 ? pos - 1 : pos);\n      var cat = next != \"_\" && CodeMirror.isWordChar(next) ? \"w\" : \"o\";\n      if (cat == \"w\" && next.toUpperCase() == next) cat = \"W\";\n      if (state == \"start\") {\n        if (cat != \"o\") { state = \"in\"; type = cat; }\n      } else if (state == \"in\") {\n        if (type != cat) {\n          if (type == \"w\" && cat == \"W\" && dir < 0) pos--;\n          if (type == \"W\" && cat == \"w\" && dir > 0) { type = \"w\"; continue; }\n          break;\n        }\n      }\n    }\n    return Pos(start.line, pos);\n  }\n\n  function moveSubword(cm, dir) {\n    cm.extendSelectionsBy(function(range) {\n      if (cm.display.shift || cm.doc.extend || range.empty())\n        return findPosSubword(cm.doc, range.head, dir);\n      else\n        return dir < 0 ? range.from() : range.to();\n    });\n  }\n\n  var goSubwordCombo = mac ? \"Ctrl-\" : \"Alt-\";\n\n  cmds[map[goSubwordCombo + \"Left\"] = \"goSubwordLeft\"] = function(cm) { moveSubword(cm, -1); };\n  cmds[map[goSubwordCombo + \"Right\"] = \"goSubwordRight\"] = function(cm) { moveSubword(cm, 1); };\n\n  if (mac) map[\"Cmd-Left\"] = \"goLineStartSmart\";\n\n  var scrollLineCombo = mac ? \"Ctrl-Alt-\" : \"Ctrl-\";\n\n  cmds[map[scrollLineCombo + \"Up\"] = \"scrollLineUp\"] = function(cm) {\n    var info = cm.getScrollInfo();\n    if (!cm.somethingSelected()) {\n      var visibleBottomLine = cm.lineAtHeight(info.top + info.clientHeight, \"local\");\n      if (cm.getCursor().line >= visibleBottomLine)\n        cm.execCommand(\"goLineUp\");\n    }\n    cm.scrollTo(null, info.top - cm.defaultTextHeight());\n  };\n  cmds[map[scrollLineCombo + \"Down\"] = \"scrollLineDown\"] = function(cm) {\n    var info = cm.getScrollInfo();\n    if (!cm.somethingSelected()) {\n      var visibleTopLine = cm.lineAtHeight(info.top, \"local\")+1;\n      if (cm.getCursor().line <= visibleTopLine)\n        cm.execCommand(\"goLineDown\");\n    }\n    cm.scrollTo(null, info.top + cm.defaultTextHeight());\n  };\n\n  cmds[map[\"Shift-\" + ctrl + \"L\"] = \"splitSelectionByLine\"] = function(cm) {\n    var ranges = cm.listSelections(), lineRanges = [];\n    for (var i = 0; i < ranges.length; i++) {\n      var from = ranges[i].from(), to = ranges[i].to();\n      for (var line = from.line; line <= to.line; ++line)\n        if (!(to.line > from.line && line == to.line && to.ch == 0))\n          lineRanges.push({anchor: line == from.line ? from : Pos(line, 0),\n                           head: line == to.line ? to : Pos(line)});\n    }\n    cm.setSelections(lineRanges, 0);\n  };\n\n  map[\"Shift-Tab\"] = \"indentLess\";\n\n  cmds[map[\"Esc\"] = \"singleSelectionTop\"] = function(cm) {\n    var range = cm.listSelections()[0];\n    cm.setSelection(range.anchor, range.head, {scroll: false});\n  };\n\n  cmds[map[ctrl + \"L\"] = \"selectLine\"] = function(cm) {\n    var ranges = cm.listSelections(), extended = [];\n    for (var i = 0; i < ranges.length; i++) {\n      var range = ranges[i];\n      extended.push({anchor: Pos(range.from().line, 0),\n                     head: Pos(range.to().line + 1, 0)});\n    }\n    cm.setSelections(extended);\n  };\n\n  map[\"Shift-Ctrl-K\"] = \"deleteLine\";\n\n  function insertLine(cm, above) {\n    if (cm.isReadOnly()) return CodeMirror.Pass\n    cm.operation(function() {\n      var len = cm.listSelections().length, newSelection = [], last = -1;\n      for (var i = 0; i < len; i++) {\n        var head = cm.listSelections()[i].head;\n        if (head.line <= last) continue;\n        var at = Pos(head.line + (above ? 0 : 1), 0);\n        cm.replaceRange(\"\\n\", at, null, \"+insertLine\");\n        cm.indentLine(at.line, null, true);\n        newSelection.push({head: at, anchor: at});\n        last = head.line + 1;\n      }\n      cm.setSelections(newSelection);\n    });\n    cm.execCommand(\"indentAuto\");\n  }\n\n  cmds[map[ctrl + \"Enter\"] = \"insertLineAfter\"] = function(cm) { return insertLine(cm, false); };\n\n  cmds[map[\"Shift-\" + ctrl + \"Enter\"] = \"insertLineBefore\"] = function(cm) { return insertLine(cm, true); };\n\n  function wordAt(cm, pos) {\n    var start = pos.ch, end = start, line = cm.getLine(pos.line);\n    while (start && CodeMirror.isWordChar(line.charAt(start - 1))) --start;\n    while (end < line.length && CodeMirror.isWordChar(line.charAt(end))) ++end;\n    return {from: Pos(pos.line, start), to: Pos(pos.line, end), word: line.slice(start, end)};\n  }\n\n  cmds[map[ctrl + \"D\"] = \"selectNextOccurrence\"] = function(cm) {\n    var from = cm.getCursor(\"from\"), to = cm.getCursor(\"to\");\n    var fullWord = cm.state.sublimeFindFullWord == cm.doc.sel;\n    if (CodeMirror.cmpPos(from, to) == 0) {\n      var word = wordAt(cm, from);\n      if (!word.word) return;\n      cm.setSelection(word.from, word.to);\n      fullWord = true;\n    } else {\n      var text = cm.getRange(from, to);\n      var query = fullWord ? new RegExp(\"\\\\b\" + text + \"\\\\b\") : text;\n      var cur = cm.getSearchCursor(query, to);\n      if (cur.findNext()) {\n        cm.addSelection(cur.from(), cur.to());\n      } else {\n        cur = cm.getSearchCursor(query, Pos(cm.firstLine(), 0));\n        if (cur.findNext())\n          cm.addSelection(cur.from(), cur.to());\n      }\n    }\n    if (fullWord)\n      cm.state.sublimeFindFullWord = cm.doc.sel;\n  };\n\n  var mirror = \"(){}[]\";\n  function selectBetweenBrackets(cm) {\n    var pos = cm.getCursor(), opening = cm.scanForBracket(pos, -1);\n    if (!opening) return;\n    for (;;) {\n      var closing = cm.scanForBracket(pos, 1);\n      if (!closing) return;\n      if (closing.ch == mirror.charAt(mirror.indexOf(opening.ch) + 1)) {\n        cm.setSelection(Pos(opening.pos.line, opening.pos.ch + 1), closing.pos, false);\n        return true;\n      }\n      pos = Pos(closing.pos.line, closing.pos.ch + 1);\n    }\n  }\n\n  cmds[map[\"Shift-\" + ctrl + \"Space\"] = \"selectScope\"] = function(cm) {\n    selectBetweenBrackets(cm) || cm.execCommand(\"selectAll\");\n  };\n  cmds[map[\"Shift-\" + ctrl + \"M\"] = \"selectBetweenBrackets\"] = function(cm) {\n    if (!selectBetweenBrackets(cm)) return CodeMirror.Pass;\n  };\n\n  cmds[map[ctrl + \"M\"] = \"goToBracket\"] = function(cm) {\n    cm.extendSelectionsBy(function(range) {\n      var next = cm.scanForBracket(range.head, 1);\n      if (next && CodeMirror.cmpPos(next.pos, range.head) != 0) return next.pos;\n      var prev = cm.scanForBracket(range.head, -1);\n      return prev && Pos(prev.pos.line, prev.pos.ch + 1) || range.head;\n    });\n  };\n\n  var swapLineCombo = mac ? \"Cmd-Ctrl-\" : \"Shift-Ctrl-\";\n\n  cmds[map[swapLineCombo + \"Up\"] = \"swapLineUp\"] = function(cm) {\n    if (cm.isReadOnly()) return CodeMirror.Pass\n    var ranges = cm.listSelections(), linesToMove = [], at = cm.firstLine() - 1, newSels = [];\n    for (var i = 0; i < ranges.length; i++) {\n      var range = ranges[i], from = range.from().line - 1, to = range.to().line;\n      newSels.push({anchor: Pos(range.anchor.line - 1, range.anchor.ch),\n                    head: Pos(range.head.line - 1, range.head.ch)});\n      if (range.to().ch == 0 && !range.empty()) --to;\n      if (from > at) linesToMove.push(from, to);\n      else if (linesToMove.length) linesToMove[linesToMove.length - 1] = to;\n      at = to;\n    }\n    cm.operation(function() {\n      for (var i = 0; i < linesToMove.length; i += 2) {\n        var from = linesToMove[i], to = linesToMove[i + 1];\n        var line = cm.getLine(from);\n        cm.replaceRange(\"\", Pos(from, 0), Pos(from + 1, 0), \"+swapLine\");\n        if (to > cm.lastLine())\n          cm.replaceRange(\"\\n\" + line, Pos(cm.lastLine()), null, \"+swapLine\");\n        else\n          cm.replaceRange(line + \"\\n\", Pos(to, 0), null, \"+swapLine\");\n      }\n      cm.setSelections(newSels);\n      cm.scrollIntoView();\n    });\n  };\n\n  cmds[map[swapLineCombo + \"Down\"] = \"swapLineDown\"] = function(cm) {\n    if (cm.isReadOnly()) return CodeMirror.Pass\n    var ranges = cm.listSelections(), linesToMove = [], at = cm.lastLine() + 1;\n    for (var i = ranges.length - 1; i >= 0; i--) {\n      var range = ranges[i], from = range.to().line + 1, to = range.from().line;\n      if (range.to().ch == 0 && !range.empty()) from--;\n      if (from < at) linesToMove.push(from, to);\n      else if (linesToMove.length) linesToMove[linesToMove.length - 1] = to;\n      at = to;\n    }\n    cm.operation(function() {\n      for (var i = linesToMove.length - 2; i >= 0; i -= 2) {\n        var from = linesToMove[i], to = linesToMove[i + 1];\n        var line = cm.getLine(from);\n        if (from == cm.lastLine())\n          cm.replaceRange(\"\", Pos(from - 1), Pos(from), \"+swapLine\");\n        else\n          cm.replaceRange(\"\", Pos(from, 0), Pos(from + 1, 0), \"+swapLine\");\n        cm.replaceRange(line + \"\\n\", Pos(to, 0), null, \"+swapLine\");\n      }\n      cm.scrollIntoView();\n    });\n  };\n\n  cmds[map[ctrl + \"/\"] = \"toggleCommentIndented\"] = function(cm) {\n    cm.toggleComment({ indent: true });\n  }\n\n  cmds[map[ctrl + \"J\"] = \"joinLines\"] = function(cm) {\n    var ranges = cm.listSelections(), joined = [];\n    for (var i = 0; i < ranges.length; i++) {\n      var range = ranges[i], from = range.from();\n      var start = from.line, end = range.to().line;\n      while (i < ranges.length - 1 && ranges[i + 1].from().line == end)\n        end = ranges[++i].to().line;\n      joined.push({start: start, end: end, anchor: !range.empty() && from});\n    }\n    cm.operation(function() {\n      var offset = 0, ranges = [];\n      for (var i = 0; i < joined.length; i++) {\n        var obj = joined[i];\n        var anchor = obj.anchor && Pos(obj.anchor.line - offset, obj.anchor.ch), head;\n        for (var line = obj.start; line <= obj.end; line++) {\n          var actual = line - offset;\n          if (line == obj.end) head = Pos(actual, cm.getLine(actual).length + 1);\n          if (actual < cm.lastLine()) {\n            cm.replaceRange(\" \", Pos(actual), Pos(actual + 1, /^\\s*/.exec(cm.getLine(actual + 1))[0].length));\n            ++offset;\n          }\n        }\n        ranges.push({anchor: anchor || head, head: head});\n      }\n      cm.setSelections(ranges, 0);\n    });\n  };\n\n  cmds[map[\"Shift-\" + ctrl + \"D\"] = \"duplicateLine\"] = function(cm) {\n    cm.operation(function() {\n      var rangeCount = cm.listSelections().length;\n      for (var i = 0; i < rangeCount; i++) {\n        var range = cm.listSelections()[i];\n        if (range.empty())\n          cm.replaceRange(cm.getLine(range.head.line) + \"\\n\", Pos(range.head.line, 0));\n        else\n          cm.replaceRange(cm.getRange(range.from(), range.to()), range.from());\n      }\n      cm.scrollIntoView();\n    });\n  };\n\n  map[ctrl + \"T\"] = \"transposeChars\";\n\n  function sortLines(cm, caseSensitive) {\n    if (cm.isReadOnly()) return CodeMirror.Pass\n    var ranges = cm.listSelections(), toSort = [], selected;\n    for (var i = 0; i < ranges.length; i++) {\n      var range = ranges[i];\n      if (range.empty()) continue;\n      var from = range.from().line, to = range.to().line;\n      while (i < ranges.length - 1 && ranges[i + 1].from().line == to)\n        to = range[++i].to().line;\n      toSort.push(from, to);\n    }\n    if (toSort.length) selected = true;\n    else toSort.push(cm.firstLine(), cm.lastLine());\n\n    cm.operation(function() {\n      var ranges = [];\n      for (var i = 0; i < toSort.length; i += 2) {\n        var from = toSort[i], to = toSort[i + 1];\n        var start = Pos(from, 0), end = Pos(to);\n        var lines = cm.getRange(start, end, false);\n        if (caseSensitive)\n          lines.sort();\n        else\n          lines.sort(function(a, b) {\n            var au = a.toUpperCase(), bu = b.toUpperCase();\n            if (au != bu) { a = au; b = bu; }\n            return a < b ? -1 : a == b ? 0 : 1;\n          });\n        cm.replaceRange(lines, start, end);\n        if (selected) ranges.push({anchor: start, head: end});\n      }\n      if (selected) cm.setSelections(ranges, 0);\n    });\n  }\n\n  cmds[map[\"F9\"] = \"sortLines\"] = function(cm) { sortLines(cm, true); };\n  cmds[map[ctrl + \"F9\"] = \"sortLinesInsensitive\"] = function(cm) { sortLines(cm, false); };\n\n  cmds[map[\"F2\"] = \"nextBookmark\"] = function(cm) {\n    var marks = cm.state.sublimeBookmarks;\n    if (marks) while (marks.length) {\n      var current = marks.shift();\n      var found = current.find();\n      if (found) {\n        marks.push(current);\n        return cm.setSelection(found.from, found.to);\n      }\n    }\n  };\n\n  cmds[map[\"Shift-F2\"] = \"prevBookmark\"] = function(cm) {\n    var marks = cm.state.sublimeBookmarks;\n    if (marks) while (marks.length) {\n      marks.unshift(marks.pop());\n      var found = marks[marks.length - 1].find();\n      if (!found)\n        marks.pop();\n      else\n        return cm.setSelection(found.from, found.to);\n    }\n  };\n\n  cmds[map[ctrl + \"F2\"] = \"toggleBookmark\"] = function(cm) {\n    var ranges = cm.listSelections();\n    var marks = cm.state.sublimeBookmarks || (cm.state.sublimeBookmarks = []);\n    for (var i = 0; i < ranges.length; i++) {\n      var from = ranges[i].from(), to = ranges[i].to();\n      var found = cm.findMarks(from, to);\n      for (var j = 0; j < found.length; j++) {\n        if (found[j].sublimeBookmark) {\n          found[j].clear();\n          for (var k = 0; k < marks.length; k++)\n            if (marks[k] == found[j])\n              marks.splice(k--, 1);\n          break;\n        }\n      }\n      if (j == found.length)\n        marks.push(cm.markText(from, to, {sublimeBookmark: true, clearWhenEmpty: false}));\n    }\n  };\n\n  cmds[map[\"Shift-\" + ctrl + \"F2\"] = \"clearBookmarks\"] = function(cm) {\n    var marks = cm.state.sublimeBookmarks;\n    if (marks) for (var i = 0; i < marks.length; i++) marks[i].clear();\n    marks.length = 0;\n  };\n\n  cmds[map[\"Alt-F2\"] = \"selectBookmarks\"] = function(cm) {\n    var marks = cm.state.sublimeBookmarks, ranges = [];\n    if (marks) for (var i = 0; i < marks.length; i++) {\n      var found = marks[i].find();\n      if (!found)\n        marks.splice(i--, 0);\n      else\n        ranges.push({anchor: found.from, head: found.to});\n    }\n    if (ranges.length)\n      cm.setSelections(ranges, 0);\n  };\n\n  map[\"Alt-Q\"] = \"wrapLines\";\n\n  var cK = ctrl + \"K \";\n\n  function modifyWordOrSelection(cm, mod) {\n    cm.operation(function() {\n      var ranges = cm.listSelections(), indices = [], replacements = [];\n      for (var i = 0; i < ranges.length; i++) {\n        var range = ranges[i];\n        if (range.empty()) { indices.push(i); replacements.push(\"\"); }\n        else replacements.push(mod(cm.getRange(range.from(), range.to())));\n      }\n      cm.replaceSelections(replacements, \"around\", \"case\");\n      for (var i = indices.length - 1, at; i >= 0; i--) {\n        var range = ranges[indices[i]];\n        if (at && CodeMirror.cmpPos(range.head, at) > 0) continue;\n        var word = wordAt(cm, range.head);\n        at = word.from;\n        cm.replaceRange(mod(word.word), word.from, word.to);\n      }\n    });\n  }\n\n  map[cK + ctrl + \"Backspace\"] = \"delLineLeft\";\n\n  cmds[map[\"Backspace\"] = \"smartBackspace\"] = function(cm) {\n    if (cm.somethingSelected()) return CodeMirror.Pass;\n\n    cm.operation(function() {\n      var cursors = cm.listSelections();\n      var indentUnit = cm.getOption(\"indentUnit\");\n\n      for (var i = cursors.length - 1; i >= 0; i--) {\n        var cursor = cursors[i].head;\n        var toStartOfLine = cm.getRange({line: cursor.line, ch: 0}, cursor);\n        var column = CodeMirror.countColumn(toStartOfLine, null, cm.getOption(\"tabSize\"));\n\n        // Delete by one character by default\n        var deletePos = cm.findPosH(cursor, -1, \"char\", false);\n\n        if (toStartOfLine && !/\\S/.test(toStartOfLine) && column % indentUnit == 0) {\n          var prevIndent = new Pos(cursor.line,\n            CodeMirror.findColumn(toStartOfLine, column - indentUnit, indentUnit));\n\n          // Smart delete only if we found a valid prevIndent location\n          if (prevIndent.ch != cursor.ch) deletePos = prevIndent;\n        }\n\n        cm.replaceRange(\"\", deletePos, cursor, \"+delete\");\n      }\n    });\n  };\n\n  cmds[map[cK + ctrl + \"K\"] = \"delLineRight\"] = function(cm) {\n    cm.operation(function() {\n      var ranges = cm.listSelections();\n      for (var i = ranges.length - 1; i >= 0; i--)\n        cm.replaceRange(\"\", ranges[i].anchor, Pos(ranges[i].to().line), \"+delete\");\n      cm.scrollIntoView();\n    });\n  };\n\n  cmds[map[cK + ctrl + \"U\"] = \"upcaseAtCursor\"] = function(cm) {\n    modifyWordOrSelection(cm, function(str) { return str.toUpperCase(); });\n  };\n  cmds[map[cK + ctrl + \"L\"] = \"downcaseAtCursor\"] = function(cm) {\n    modifyWordOrSelection(cm, function(str) { return str.toLowerCase(); });\n  };\n\n  cmds[map[cK + ctrl + \"Space\"] = \"setSublimeMark\"] = function(cm) {\n    if (cm.state.sublimeMark) cm.state.sublimeMark.clear();\n    cm.state.sublimeMark = cm.setBookmark(cm.getCursor());\n  };\n  cmds[map[cK + ctrl + \"A\"] = \"selectToSublimeMark\"] = function(cm) {\n    var found = cm.state.sublimeMark && cm.state.sublimeMark.find();\n    if (found) cm.setSelection(cm.getCursor(), found);\n  };\n  cmds[map[cK + ctrl + \"W\"] = \"deleteToSublimeMark\"] = function(cm) {\n    var found = cm.state.sublimeMark && cm.state.sublimeMark.find();\n    if (found) {\n      var from = cm.getCursor(), to = found;\n      if (CodeMirror.cmpPos(from, to) > 0) { var tmp = to; to = from; from = tmp; }\n      cm.state.sublimeKilled = cm.getRange(from, to);\n      cm.replaceRange(\"\", from, to);\n    }\n  };\n  cmds[map[cK + ctrl + \"X\"] = \"swapWithSublimeMark\"] = function(cm) {\n    var found = cm.state.sublimeMark && cm.state.sublimeMark.find();\n    if (found) {\n      cm.state.sublimeMark.clear();\n      cm.state.sublimeMark = cm.setBookmark(cm.getCursor());\n      cm.setCursor(found);\n    }\n  };\n  cmds[map[cK + ctrl + \"Y\"] = \"sublimeYank\"] = function(cm) {\n    if (cm.state.sublimeKilled != null)\n      cm.replaceSelection(cm.state.sublimeKilled, null, \"paste\");\n  };\n\n  map[cK + ctrl + \"G\"] = \"clearBookmarks\";\n  cmds[map[cK + ctrl + \"C\"] = \"showInCenter\"] = function(cm) {\n    var pos = cm.cursorCoords(null, \"local\");\n    cm.scrollTo(null, (pos.top + pos.bottom) / 2 - cm.getScrollInfo().clientHeight / 2);\n  };\n\n  var selectLinesCombo = mac ? \"Ctrl-Shift-\" : \"Ctrl-Alt-\";\n  cmds[map[selectLinesCombo + \"Up\"] = \"selectLinesUpward\"] = function(cm) {\n    cm.operation(function() {\n      var ranges = cm.listSelections();\n      for (var i = 0; i < ranges.length; i++) {\n        var range = ranges[i];\n        if (range.head.line > cm.firstLine())\n          cm.addSelection(Pos(range.head.line - 1, range.head.ch));\n      }\n    });\n  };\n  cmds[map[selectLinesCombo + \"Down\"] = \"selectLinesDownward\"] = function(cm) {\n    cm.operation(function() {\n      var ranges = cm.listSelections();\n      for (var i = 0; i < ranges.length; i++) {\n        var range = ranges[i];\n        if (range.head.line < cm.lastLine())\n          cm.addSelection(Pos(range.head.line + 1, range.head.ch));\n      }\n    });\n  };\n\n  function getTarget(cm) {\n    var from = cm.getCursor(\"from\"), to = cm.getCursor(\"to\");\n    if (CodeMirror.cmpPos(from, to) == 0) {\n      var word = wordAt(cm, from);\n      if (!word.word) return;\n      from = word.from;\n      to = word.to;\n    }\n    return {from: from, to: to, query: cm.getRange(from, to), word: word};\n  }\n\n  function findAndGoTo(cm, forward) {\n    var target = getTarget(cm);\n    if (!target) return;\n    var query = target.query;\n    var cur = cm.getSearchCursor(query, forward ? target.to : target.from);\n\n    if (forward ? cur.findNext() : cur.findPrevious()) {\n      cm.setSelection(cur.from(), cur.to());\n    } else {\n      cur = cm.getSearchCursor(query, forward ? Pos(cm.firstLine(), 0)\n                                              : cm.clipPos(Pos(cm.lastLine())));\n      if (forward ? cur.findNext() : cur.findPrevious())\n        cm.setSelection(cur.from(), cur.to());\n      else if (target.word)\n        cm.setSelection(target.from, target.to);\n    }\n  };\n  cmds[map[ctrl + \"F3\"] = \"findUnder\"] = function(cm) { findAndGoTo(cm, true); };\n  cmds[map[\"Shift-\" + ctrl + \"F3\"] = \"findUnderPrevious\"] = function(cm) { findAndGoTo(cm,false); };\n  cmds[map[\"Alt-F3\"] = \"findAllUnder\"] = function(cm) {\n    var target = getTarget(cm);\n    if (!target) return;\n    var cur = cm.getSearchCursor(target.query);\n    var matches = [];\n    var primaryIndex = -1;\n    while (cur.findNext()) {\n      matches.push({anchor: cur.from(), head: cur.to()});\n      if (cur.from().line <= target.from.line && cur.from().ch <= target.from.ch)\n        primaryIndex++;\n    }\n    cm.setSelections(matches, primaryIndex);\n  };\n\n  map[\"Shift-\" + ctrl + \"[\"] = \"fold\";\n  map[\"Shift-\" + ctrl + \"]\"] = \"unfold\";\n  map[cK + ctrl + \"0\"] = map[cK + ctrl + \"j\"] = \"unfoldAll\";\n\n  map[ctrl + \"I\"] = \"findIncremental\";\n  map[\"Shift-\" + ctrl + \"I\"] = \"findIncrementalReverse\";\n  map[ctrl + \"H\"] = \"replace\";\n  map[\"F3\"] = \"findNext\";\n  map[\"Shift-F3\"] = \"findPrev\";\n\n  CodeMirror.normalizeKeyMap(map);\n});\n"]}