{"version":3,"sources":["mode/eiffel/eiffel.js"],"names":["define","CodeMirror","defineMode","wordObj","words","o","i","e","length","chain","newtok","stream","state","tokenize","push","tokenBase","eatSpace","ch","next","readQuoted","eat","skipToEnd","test","eatWhile","quote","style","unescaped","escaped","pop","keywords","operators","startState","token","word","current","propertyIsEnumerable","lineComment","defineMIME"],"mappings":";;;;;;;AAGAA,QAAQ,eAAgB,SAASC,GACjC,YAEAA,GAAWC,WAAW,SAAU,WAC9B,QAASC,GAAQC,GAEf,IAAK,GADDC,MACKC,EAAI,EAAGC,EAAIH,EAAMI,OAAQF,EAAIC,IAAKD,EAAGD,EAAED,EAAME,KAAM,CAC5D,OAAOD,GAsET,QAASI,GAAMC,EAAQC,EAAQC,GAE7B,MADAA,GAAMC,SAASC,KAAKJ,GACbA,EAAOC,EAAQC,GAGxB,QAASG,GAAUJ,EAAQC,GACzB,GAAID,EAAOK,WAAY,MAAO,KAC9B,IAAIC,GAAKN,EAAOO,MAChB,OAAU,KAAND,GAAiB,KAANA,EACNR,EAAMU,EAAWF,EAAI,UAAWN,EAAQC,GAChC,KAANK,GAAWN,EAAOS,IAAI,MAC/BT,EAAOU,YACA,WACQ,KAANJ,GAAWN,EAAOS,IAAI,KACxB,WACE,QAAQE,KAAKL,IACtBN,EAAOY,SAAS,iBAChBZ,EAAOS,IAAI,UACJ,SACE,eAAeE,KAAKL,IAC7BN,EAAOY,SAAS,gBAChBZ,EAAOS,IAAI,UACJ,SACE,iBAAiBE,KAAKL,IAC/BN,EAAOY,SAAS,kBACT,YAEA,KAIX,QAASJ,GAAWK,EAAOC,EAAQC,GACjC,MAAO,UAASf,EAAQC,GAEtB,IADA,GAAqBK,GAAjBU,GAAU,EACiB,OAAvBV,EAAKN,EAAOO,SAAiB,CACnC,GAAID,GAAMO,IAAUE,IAAcC,GAAU,CAC1Cf,EAAMC,SAASe,KACf,OAEFD,GAAWA,GAAiB,KAANV,EAExB,MAAOQ,IA7GX,GAAII,GAAW1B,GACb,OACA,SACA,OACA,UACA,QACA,SACA,WACA,OACA,QACA,SACA,QACA,SACA,UACA,SACA,YACA,WACA,SACA,OACA,MACA,WACA,OACA,QACA,OACA,KACA,UACA,QACA,UACA,KACA,SACA,OACA,WACA,SACA,SACA,MACA,SACA,OACA,KACA,WACA,SACA,QACA,QACA,QACA,WACA,YACA,UACA,WACA,UACA,WACA,WACA,QACA,OACA,OACA,SACA,YACA,QACA,UACA,SACA,WACA,aACA,KACA,MACA,UACA,MACA,OAEE2B,EAAY3B,GAAS,KAAM,WAAW,MAAO,KAAK,KAAK,MA+C3D,QACE4B,WAAY,WACV,OAAQlB,UAAWE,KAGrBiB,MAAO,SAASrB,EAAQC,GACtB,GAAIa,GAAQb,EAAMC,SAASD,EAAMC,SAASL,OAAO,GAAGG,EAAQC,EAC5D,IAAa,SAATa,EAAkB,CACpB,GAAIQ,GAAOtB,EAAOuB,SAClBT,GAAQI,EAASM,qBAAqBxB,EAAOuB,WAAa,UACtDJ,EAAUK,qBAAqBxB,EAAOuB,WAAa,WACnD,qBAAqBZ,KAAKW,GAAQ,MAClC,iBAAiBX,KAAKW,GAAQ,SAC9B,iBAAiBX,KAAKW,GAAQ,SAC9B,uBAAuBX,KAAKW,GAAQ,SACpC,uCAAuCX,KAAKW,GAAQ,SACpD,YAAYX,KAAKW,GAAQ,SACzB,WAEN,MAAOR,IAETW,YAAa,QAIjBnC,EAAWoC,WAAW,gBAAiB","file":"../../../mode/eiffel/eiffel.js","sourcesContent":["// CodeMirror, copyright (c) by Marijn Haverbeke and others\n// Distributed under an MIT license: http://codemirror.net/LICENSE\n\ndefine([\"../../Coder\"], function(CodeMirror) {\n\"use strict\";\n\nCodeMirror.defineMode(\"eiffel\", function() {\n  function wordObj(words) {\n    var o = {};\n    for (var i = 0, e = words.length; i < e; ++i) o[words[i]] = true;\n    return o;\n  }\n  var keywords = wordObj([\n    'note',\n    'across',\n    'when',\n    'variant',\n    'until',\n    'unique',\n    'undefine',\n    'then',\n    'strip',\n    'select',\n    'retry',\n    'rescue',\n    'require',\n    'rename',\n    'reference',\n    'redefine',\n    'prefix',\n    'once',\n    'old',\n    'obsolete',\n    'loop',\n    'local',\n    'like',\n    'is',\n    'inspect',\n    'infix',\n    'include',\n    'if',\n    'frozen',\n    'from',\n    'external',\n    'export',\n    'ensure',\n    'end',\n    'elseif',\n    'else',\n    'do',\n    'creation',\n    'create',\n    'check',\n    'alias',\n    'agent',\n    'separate',\n    'invariant',\n    'inherit',\n    'indexing',\n    'feature',\n    'expanded',\n    'deferred',\n    'class',\n    'Void',\n    'True',\n    'Result',\n    'Precursor',\n    'False',\n    'Current',\n    'create',\n    'attached',\n    'detachable',\n    'as',\n    'and',\n    'implies',\n    'not',\n    'or'\n  ]);\n  var operators = wordObj([\":=\", \"and then\",\"and\", \"or\",\"<<\",\">>\"]);\n\n  function chain(newtok, stream, state) {\n    state.tokenize.push(newtok);\n    return newtok(stream, state);\n  }\n\n  function tokenBase(stream, state) {\n    if (stream.eatSpace()) return null;\n    var ch = stream.next();\n    if (ch == '\"'||ch == \"'\") {\n      return chain(readQuoted(ch, \"string\"), stream, state);\n    } else if (ch == \"-\"&&stream.eat(\"-\")) {\n      stream.skipToEnd();\n      return \"comment\";\n    } else if (ch == \":\"&&stream.eat(\"=\")) {\n      return \"operator\";\n    } else if (/[0-9]/.test(ch)) {\n      stream.eatWhile(/[xXbBCc0-9\\.]/);\n      stream.eat(/[\\?\\!]/);\n      return \"ident\";\n    } else if (/[a-zA-Z_0-9]/.test(ch)) {\n      stream.eatWhile(/[a-zA-Z_0-9]/);\n      stream.eat(/[\\?\\!]/);\n      return \"ident\";\n    } else if (/[=+\\-\\/*^%<>~]/.test(ch)) {\n      stream.eatWhile(/[=+\\-\\/*^%<>~]/);\n      return \"operator\";\n    } else {\n      return null;\n    }\n  }\n\n  function readQuoted(quote, style,  unescaped) {\n    return function(stream, state) {\n      var escaped = false, ch;\n      while ((ch = stream.next()) != null) {\n        if (ch == quote && (unescaped || !escaped)) {\n          state.tokenize.pop();\n          break;\n        }\n        escaped = !escaped && ch == \"%\";\n      }\n      return style;\n    };\n  }\n\n  return {\n    startState: function() {\n      return {tokenize: [tokenBase]};\n    },\n\n    token: function(stream, state) {\n      var style = state.tokenize[state.tokenize.length-1](stream, state);\n      if (style == \"ident\") {\n        var word = stream.current();\n        style = keywords.propertyIsEnumerable(stream.current()) ? \"keyword\"\n          : operators.propertyIsEnumerable(stream.current()) ? \"operator\"\n          : /^[A-Z][A-Z_0-9]*$/g.test(word) ? \"tag\"\n          : /^0[bB][0-1]+$/g.test(word) ? \"number\"\n          : /^0[cC][0-7]+$/g.test(word) ? \"number\"\n          : /^0[xX][a-fA-F0-9]+$/g.test(word) ? \"number\"\n          : /^([0-9]+\\.[0-9]*)|([0-9]*\\.[0-9]+)$/g.test(word) ? \"number\"\n          : /^[0-9]+$/g.test(word) ? \"number\"\n          : \"variable\";\n      }\n      return style;\n    },\n    lineComment: \"--\"\n  };\n});\n\nCodeMirror.defineMIME(\"text/x-eiffel\", \"eiffel\");\n\n});\n"]}