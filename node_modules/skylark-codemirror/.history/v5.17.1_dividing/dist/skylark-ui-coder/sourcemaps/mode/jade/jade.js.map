{"version":3,"sources":["mode/jade/jade.js"],"names":["define","CodeMirror","defineMode","config","State","this","javaScriptLine","javaScriptLineExcludesColon","javaScriptArguments","javaScriptArgumentsDepth","isInterpolating","interpolationNesting","jsState","startState","jsMode","restOfLine","isIncludeFiltered","isEach","lastTag","scriptType","isAttrs","attrsNest","inAttributeName","attributeIsType","attrValue","indentOf","Infinity","indentToken","innerMode","innerState","innerModeForLine","javaScript","stream","state","sol","peek","tok","token","eol","yieldStatement","match","doctype","DOCTYPE","interpolation","interpolationContinued","next","caseStatement","KEYWORD","when","defaultStatement","extendsStatement","append","prepend","block","include","includeFiltered","includeFilteredContinued","filter","mixin","call","mixinCallAfter","callArguments","conditional","each","eachContinued","whileStatement","tag","captures","toLowerCase","innerModes","current","substring","getMode","setInnerMode","code","id","ID","className","CLASS","attrs","attrsContinued","ATTRS_NEST","push","length","pop","eat","trim","toString","Function","replace","backUp","ex","attributesBlock","indent","eatSpace","comment","indentation","colon","text","dot","indexOf","fail","mode","mimeModes","name","force","hideFirstChars","skipToEnd","copyState","copy","nextToken","{","(","[","prototype","res","slice","defineMIME"],"mappings":";;;;;;;AAGAA,QAAQ,cAAe,2BAA4B,aAAc,0BAA2B,SAASC,GACrG,YAEAA,GAAWC,WAAW,OAAQ,SAAUC,GAetC,QAASC,KACPC,KAAKC,gBAAiB,EACtBD,KAAKE,6BAA8B,EAEnCF,KAAKG,qBAAsB,EAC3BH,KAAKI,yBAA2B,EAEhCJ,KAAKK,iBAAkB,EACvBL,KAAKM,qBAAuB,EAE5BN,KAAKO,QAAUX,EAAWY,WAAWC,GAErCT,KAAKU,WAAa,GAElBV,KAAKW,mBAAoB,EACzBX,KAAKY,QAAS,EAEdZ,KAAKa,QAAU,GACfb,KAAKc,WAAa,GAGlBd,KAAKe,SAAU,EACff,KAAKgB,aACLhB,KAAKiB,iBAAkB,EACvBjB,KAAKkB,iBAAkB,EACvBlB,KAAKmB,UAAY,GAGjBnB,KAAKoB,SAAWC,EAAAA,EAChBrB,KAAKsB,YAAc,GAEnBtB,KAAKuB,UAAY,KACjBvB,KAAKwB,WAAa,KAElBxB,KAAKyB,kBAAmB,EA0C1B,QAASC,GAAWC,EAAQC,GAM1B,GALID,EAAOE,QAETD,EAAM3B,gBAAiB,EACvB2B,EAAM1B,6BAA8B,GAElC0B,EAAM3B,eAAgB,CACxB,GAAI2B,EAAM1B,6BAAiD,MAAlByB,EAAOG,OAG9C,MAFAF,GAAM3B,gBAAiB,OACvB2B,EAAM1B,6BAA8B,EAGtC,IAAI6B,GAAMtB,EAAOuB,MAAML,EAAQC,EAAMrB,QAErC,OADIoB,GAAOM,QAAOL,EAAM3B,gBAAiB,GAClC8B,IAAO,GAGlB,QAAS5B,GAAoBwB,EAAQC,GACnC,GAAIA,EAAMzB,oBAAqB,CAC7B,GAAuC,IAAnCyB,EAAMxB,0BAAoD,MAAlBuB,EAAOG,OAEjD,YADAF,EAAMzB,qBAAsB,EAQ9B,IALsB,MAAlBwB,EAAOG,OACTF,EAAMxB,2BACqB,MAAlBuB,EAAOG,QAChBF,EAAMxB,2BAE+B,IAAnCwB,EAAMxB,yBAER,YADAwB,EAAMzB,qBAAsB,EAI9B,IAAI4B,GAAMtB,EAAOuB,MAAML,EAAQC,EAAMrB,QACrC,OAAOwB,KAAO,GAIlB,QAASG,GAAeP,GACtB,GAAIA,EAAOQ,MAAM,YACb,MAAO,UAIb,QAASC,GAAQT,GACf,GAAIA,EAAOQ,MAAM,2BACb,MAAOE,GAIb,QAASC,GAAcX,EAAQC,GAC7B,GAAID,EAAOQ,MAAM,MAGf,MAFAP,GAAMvB,iBAAkB,EACxBuB,EAAMtB,qBAAuB,EACtB,cAIX,QAASiC,GAAuBZ,EAAQC,GACtC,GAAIA,EAAMvB,gBAAiB,CACzB,GAAsB,MAAlBsB,EAAOG,QAET,GADAF,EAAMtB,uBACFsB,EAAMtB,qBAAuB,EAG/B,MAFAqB,GAAOa,OACPZ,EAAMvB,iBAAkB,EACjB,kBAEkB,MAAlBsB,EAAOG,QAChBF,EAAMtB,sBAER,OAAOG,GAAOuB,MAAML,EAAQC,EAAMrB,WAAY,GAIlD,QAASkC,GAAcd,EAAQC,GAC7B,GAAID,EAAOQ,MAAM,WAEf,MADAP,GAAM3B,gBAAiB,EAChByC,EAIX,QAASC,GAAKhB,EAAQC,GACpB,GAAID,EAAOQ,MAAM,WAGf,MAFAP,GAAM3B,gBAAiB,EACvB2B,EAAM1B,6BAA8B,EAC7BwC,EAIX,QAASE,GAAiBjB,GACxB,GAAIA,EAAOQ,MAAM,cACf,MAAOO,GAIX,QAASG,GAAiBlB,EAAQC,GAChC,GAAID,EAAOQ,MAAM,eAEf,MADAP,GAAMlB,WAAa,SACZgC,EAIX,QAASI,GAAOnB,EAAQC,GACtB,GAAID,EAAOQ,MAAM,aAEf,MADAP,GAAMlB,WAAa,WACZgC,EAGX,QAASK,GAAQpB,EAAQC,GACvB,GAAID,EAAOQ,MAAM,cAEf,MADAP,GAAMlB,WAAa,WACZgC,EAGX,QAASM,GAAMrB,EAAQC,GACrB,GAAID,EAAOQ,MAAM,qCAEf,MADAP,GAAMlB,WAAa,WACZgC,EAIX,QAASO,GAAQtB,EAAQC,GACvB,GAAID,EAAOQ,MAAM,cAEf,MADAP,GAAMlB,WAAa,SACZgC,EAIX,QAASQ,GAAgBvB,EAAQC,GAC/B,GAAID,EAAOQ,MAAM,6BAA6B,IAAUR,EAAOQ,MAAM,WAEnE,MADAP,GAAMjB,mBAAoB,EACnB+B,EAIX,QAASS,GAAyBxB,EAAQC,GACxC,GAAIA,EAAMjB,kBAAmB,CAC3B,GAAIoB,GAAMqB,EAAOzB,EAAQC,EAGzB,OAFAA,GAAMjB,mBAAoB,EAC1BiB,EAAMlB,WAAa,SACZqB,GAIX,QAASsB,GAAM1B,EAAQC,GACrB,GAAID,EAAOQ,MAAM,YAEf,MADAP,GAAM3B,gBAAiB,EAChByC,EAIX,QAASY,GAAK3B,EAAQC,GACpB,MAAID,GAAOQ,MAAM,gBACVR,EAAOQ,MAAM,kBAAkB,KAClCP,EAAMzB,qBAAsB,EAC5ByB,EAAMxB,yBAA2B,GAE5B,YAELuB,EAAOQ,MAAM,SAAS,IACxBR,EAAOa,OACPZ,EAAM2B,gBAAiB,EAChBjB,EAAcX,EAAQC,IAH/B,OAMF,QAAS4B,GAAc7B,EAAQC,GAC7B,GAAIA,EAAM2B,eAMR,MALA3B,GAAM2B,gBAAiB,EAClB5B,EAAOQ,MAAM,kBAAkB,KAClCP,EAAMzB,qBAAsB,EAC5ByB,EAAMxB,yBAA2B,IAE5B,EAIX,QAASqD,GAAY9B,EAAQC,GAC3B,GAAID,EAAOQ,MAAM,+BAEf,MADAP,GAAM3B,gBAAiB,EAChByC,EAIX,QAASgB,GAAK/B,EAAQC,GACpB,GAAID,EAAOQ,MAAM,uBAEf,MADAP,GAAMhB,QAAS,EACR8B,EAGX,QAASiB,GAAchC,EAAQC,GAC7B,GAAIA,EAAMhB,OAAQ,CAChB,GAAIe,EAAOQ,MAAM,UAGf,MAFAP,GAAM3B,gBAAiB,EACvB2B,EAAMhB,QAAS,EACR8B,CACF,IAAIf,EAAOE,OAASF,EAAOM,MAChCL,EAAMhB,QAAS,MACV,IAAIe,EAAOa,OAAQ,CACxB,MAAQb,EAAOQ,MAAM,UAAU,IAAUR,EAAOa,SAChD,MAAO,aAKb,QAASoB,GAAejC,EAAQC,GAC9B,GAAID,EAAOQ,MAAM,YAEf,MADAP,GAAM3B,gBAAiB,EAChByC,EAIX,QAASmB,GAAIlC,EAAQC,GACnB,GAAIkC,EACJ,IAAIA,EAAWnC,EAAOQ,MAAM,0BAK1B,MAJAP,GAAMf,QAAUiD,EAAS,GAAGC,cACN,WAAlBnC,EAAMf,UACRe,EAAMd,WAAa,0BAEd,MAIX,QAASsC,GAAOzB,EAAQC,GACtB,GAAID,EAAOQ,MAAM,eAAgB,CAC/B,GAAIZ,EAWJ,OAVIzB,IAAUA,EAAOkE,aACnBzC,EAAYzB,EAAOkE,WAAWrC,EAAOsC,UAAUC,UAAU,KAEtD3C,IACHA,EAAYI,EAAOsC,UAAUC,UAAU,IAEhB,gBAAd3C,KACTA,EAAY3B,EAAWuE,QAAQrE,EAAQyB,IAEzC6C,EAAazC,EAAQC,EAAOL,GACrB,QAIX,QAAS8C,GAAK1C,EAAQC,GACpB,GAAID,EAAOQ,MAAM,YAEf,MADAP,GAAM3B,gBAAiB,EAChB,cAIX,QAASqE,GAAG3C,GACV,GAAIA,EAAOQ,MAAM,cACf,MAAOoC,GAIX,QAASC,GAAU7C,GACjB,GAAIA,EAAOQ,MAAM,eACf,MAAOsC,GAIX,QAASC,GAAM/C,EAAQC,GACrB,GAAqB,KAAjBD,EAAOG,OAOT,MANAH,GAAOa,OACPZ,EAAMb,SAAU,EAChBa,EAAMZ,aACNY,EAAMX,iBAAkB,EACxBW,EAAMT,UAAY,GAClBS,EAAMV,iBAAkB,EACjB,cAIX,QAASyD,GAAehD,EAAQC,GAC9B,GAAIA,EAAMb,QAAS,CAIjB,GAHI6D,EAAWjD,EAAOG,SACpBF,EAAMZ,UAAU6D,KAAKD,EAAWjD,EAAOG,SAErCF,EAAMZ,UAAUY,EAAMZ,UAAU8D,OAAS,KAAOnD,EAAOG,OACzDF,EAAMZ,UAAU+D,UACV,IAAIpD,EAAOqD,IAAI,KAErB,MADApD,GAAMb,SAAU,EACT,aAET,IAAIa,EAAMX,iBAAmBU,EAAOQ,MAAM,cAUxC,MATsB,MAAlBR,EAAOG,QAAoC,MAAlBH,EAAOG,SAClCF,EAAMX,iBAAkB,EACxBW,EAAMrB,QAAUX,EAAWY,WAAWC,GAChB,WAAlBmB,EAAMf,SAAkE,SAA1Cc,EAAOsC,UAAUgB,OAAOlB,cACxDnC,EAAMV,iBAAkB,EAExBU,EAAMV,iBAAkB,GAGrB,WAGT,IAAIa,GAAMtB,EAAOuB,MAAML,EAAQC,EAAMrB,QAIrC,IAHIqB,EAAMV,iBAA2B,WAARa,IAC3BH,EAAMd,WAAaa,EAAOsC,UAAUiB,YAEP,IAA3BtD,EAAMZ,UAAU8D,SAAyB,WAAR/C,GAA4B,aAARA,GAA8B,YAARA,GAC7E,IAKE,MAJAoD,UAAS,GAAI,SAAWvD,EAAMT,UAAUiE,QAAQ,QAAS,IAAIA,QAAQ,KAAM,KAC3ExD,EAAMX,iBAAkB,EACxBW,EAAMT,UAAY,GAClBQ,EAAO0D,OAAO1D,EAAOsC,UAAUa,QACxBH,EAAehD,EAAQC,GAC9B,MAAO0D,IAKX,MADA1D,GAAMT,WAAaQ,EAAOsC,UACnBlC,IAAO,GAIlB,QAASwD,GAAgB5D,EAAQC,GAC/B,GAAID,EAAOQ,MAAM,kBAGf,MAFAP,GAAMzB,qBAAsB,EAC5ByB,EAAMxB,yBAA2B,EAC1B,UAIX,QAASoF,GAAO7D,GACd,GAAIA,EAAOE,OAASF,EAAO8D,WACzB,MAAO,SAIX,QAASC,GAAQ/D,EAAQC,GACvB,GAAID,EAAOQ,MAAM,uBAGf,MAFAP,GAAMR,SAAWO,EAAOgE,cACxB/D,EAAMN,YAAc,UACb,UAIX,QAASsE,GAAMjE,GACb,GAAIA,EAAOQ,MAAM,QACf,MAAO,QAIX,QAAS0D,GAAKlE,EAAQC,GACpB,MAAID,GAAOQ,MAAM,uBACR,SAELR,EAAOQ,MAAM,cAAc,IAE7BiC,EAAazC,EAAQC,EAAO,aAC5BA,EAAMH,kBAAmB,EAClBF,EAAUI,EAAQC,GAAO,IAJlC,OAQF,QAASkE,GAAInE,EAAQC,GACnB,GAAID,EAAOqD,IAAI,KAAM,CACnB,GAAIzD,GAAY,IAOhB,OANsB,WAAlBK,EAAMf,SAAwBe,EAAMd,WAAWiD,cAAcgC,QAAQ,kBACvExE,EAAYK,EAAMd,WAAWiD,cAAcqB,QAAQ,OAAQ,IAChC,UAAlBxD,EAAMf,UACfU,EAAY,OAEd6C,EAAazC,EAAQC,EAAOL,GACrB,OAIX,QAASyE,GAAKrE,GAEZ,MADAA,GAAOa,OACA,KAIT,QAAS4B,GAAazC,EAAQC,EAAOqE,GACnCA,EAAOrG,EAAWsG,UAAUD,IAASA,EACrCA,EAAOnG,EAAOkE,WAAalE,EAAOkE,WAAWiC,IAASA,EAAOA,EAC7DA,EAAOrG,EAAWsG,UAAUD,IAASA,EACrCA,EAAOrG,EAAWuE,QAAQrE,EAAQmG,GAClCrE,EAAMR,SAAWO,EAAOgE,cAEpBM,GAAsB,SAAdA,EAAKE,KACfvE,EAAML,UAAY0E,EAElBrE,EAAMN,YAAc,SAGxB,QAASC,GAAUI,EAAQC,EAAOwE,GAChC,MAAIzE,GAAOgE,cAAgB/D,EAAMR,UAAaQ,EAAMH,mBAAqBE,EAAOE,OAAUuE,EACpFxE,EAAML,WACHK,EAAMJ,aACTI,EAAMJ,WAAaI,EAAML,UAAUf,WAAaZ,EAAWY,WAAWoB,EAAML,UAAWI,EAAOgE,mBAEzFhE,EAAO0E,eAAezE,EAAMR,SAAW,EAAG,WAC/C,MAAOQ,GAAML,UAAUS,MAAML,EAAQC,EAAMJ,cAAe,MAG5DG,EAAO2E,YACA1E,EAAMN,kBAENK,EAAOE,QAChBD,EAAMR,SAAWC,EAAAA,EACjBO,EAAMN,YAAc,KACpBM,EAAML,UAAY,KAClBK,EAAMJ,WAAa,OAGvB,QAASd,GAAWiB,EAAQC,GAK1B,GAJID,EAAOE,QAETD,EAAMlB,WAAa,IAEjBkB,EAAMlB,WAAY,CACpBiB,EAAO2E,WACP,IAAIvE,GAAMH,EAAMlB,UAEhB,OADAkB,GAAMlB,WAAa,GACZqB,GAKX,QAASvB,KACP,MAAO,IAAIT,GAEb,QAASwG,GAAU3E,GACjB,MAAOA,GAAM4E,OAQf,QAASC,GAAU9E,EAAQC,GACzB,GAAIG,GAAMR,EAAUI,EAAQC,IACvBlB,EAAWiB,EAAQC,IACnBW,EAAuBZ,EAAQC,IAC/BuB,EAAyBxB,EAAQC,IACjC+B,EAAchC,EAAQC,IACtB+C,EAAehD,EAAQC,IACvBF,EAAWC,EAAQC,IACnBzB,EAAoBwB,EAAQC,IAC5B4B,EAAc7B,EAAQC,IAEtBM,EAAeP,EAAQC,IACvBQ,EAAQT,EAAQC,IAChBU,EAAcX,EAAQC,IACtBa,EAAcd,EAAQC,IACtBe,EAAKhB,EAAQC,IACbgB,EAAiBjB,EAAQC,IACzBiB,EAAiBlB,EAAQC,IACzBkB,EAAOnB,EAAQC,IACfmB,EAAQpB,EAAQC,IAChBoB,EAAMrB,EAAQC,IACdqB,EAAQtB,EAAQC,IAChBsB,EAAgBvB,EAAQC,IACxByB,EAAM1B,EAAQC,IACd0B,EAAK3B,EAAQC,IACb6B,EAAY9B,EAAQC,IACpB8B,EAAK/B,EAAQC,IACbgC,EAAejC,EAAQC,IACvBiC,EAAIlC,EAAQC,IACZwB,EAAOzB,EAAQC,IACfyC,EAAK1C,EAAQC,IACb0C,EAAG3C,EAAQC,IACX4C,EAAU7C,EAAQC,IAClB8C,EAAM/C,EAAQC,IACd2D,EAAgB5D,EAAQC,IACxB4D,EAAO7D,EAAQC,IACfiE,EAAKlE,EAAQC,IACb8D,EAAQ/D,EAAQC,IAChBgE,EAAMjE,EAAQC,IACdkE,EAAInE,EAAQC,IACZoE,EAAKrE,EAAQC,EAElB,OAAOG,MAAQ,EAAO,KAAOA,EAnjB/B,GAAIW,GAAU,UACVL,EAAU,OACVkC,EAAK,UACLE,EAAQ,YAERG,GACF8B,IAAK,IACLC,IAAK,IACLC,IAAK,KAGHnG,EAASb,EAAWuE,QAAQrE,EAAQ,aA0iBxC,OA/fAC,GAAM8G,UAAUL,KAAO,WACrB,GAAIM,GAAM,GAAI/G,EA+Bd,OA9BA+G,GAAI7G,eAAiBD,KAAKC,eAC1B6G,EAAI5G,4BAA8BF,KAAKE,4BACvC4G,EAAI3G,oBAAsBH,KAAKG,oBAC/B2G,EAAI1G,yBAA2BJ,KAAKI,yBACpC0G,EAAIzG,gBAAkBL,KAAKK,gBAC3ByG,EAAIxG,qBAAuBN,KAAKM,qBAEhCwG,EAAIvG,QAAUX,EAAW2G,UAAU9F,EAAQT,KAAKO,SAEhDuG,EAAIvF,UAAYvB,KAAKuB,UACjBvB,KAAKuB,WAAavB,KAAKwB,aACzBsF,EAAItF,WAAa5B,EAAW2G,UAAUvG,KAAKuB,UAAWvB,KAAKwB,aAG7DsF,EAAIpG,WAAaV,KAAKU,WAEtBoG,EAAInG,kBAAoBX,KAAKW,kBAC7BmG,EAAIlG,OAASZ,KAAKY,OAClBkG,EAAIjG,QAAUb,KAAKa,QACnBiG,EAAIhG,WAAad,KAAKc,WACtBgG,EAAI/F,QAAUf,KAAKe,QACnB+F,EAAI9F,UAAYhB,KAAKgB,UAAU+F,QAC/BD,EAAI7F,gBAAkBjB,KAAKiB,gBAC3B6F,EAAI5F,gBAAkBlB,KAAKkB,gBAC3B4F,EAAI3F,UAAYnB,KAAKmB,UACrB2F,EAAI1F,SAAWpB,KAAKoB,SACpB0F,EAAIxF,YAActB,KAAKsB,YAEvBwF,EAAIrF,iBAAmBzB,KAAKyB,iBAErBqF,IAgePtG,WAAYA,EACZ+F,UAAWA,EACXvE,MAAOyE,IAER,aAAc,MAAO,aAExB7G,EAAWoH,WAAW,cAAe","file":"../../../mode/jade/jade.js","sourcesContent":["// CodeMirror, copyright (c) by Marijn Haverbeke and others\n// Distributed under an MIT license: http://codemirror.net/LICENSE\n\ndefine([\"../../Coder\", \"../javascript/javascript\", \"../css/css\", \"../htmlmixed/htmlmixed\"], function(CodeMirror) {\n\"use strict\";\n\nCodeMirror.defineMode('jade', function (config) {\n  // token types\n  var KEYWORD = 'keyword';\n  var DOCTYPE = 'meta';\n  var ID = 'builtin';\n  var CLASS = 'qualifier';\n\n  var ATTRS_NEST = {\n    '{': '}',\n    '(': ')',\n    '[': ']'\n  };\n\n  var jsMode = CodeMirror.getMode(config, 'javascript');\n\n  function State() {\n    this.javaScriptLine = false;\n    this.javaScriptLineExcludesColon = false;\n\n    this.javaScriptArguments = false;\n    this.javaScriptArgumentsDepth = 0;\n\n    this.isInterpolating = false;\n    this.interpolationNesting = 0;\n\n    this.jsState = CodeMirror.startState(jsMode);\n\n    this.restOfLine = '';\n\n    this.isIncludeFiltered = false;\n    this.isEach = false;\n\n    this.lastTag = '';\n    this.scriptType = '';\n\n    // Attributes Mode\n    this.isAttrs = false;\n    this.attrsNest = [];\n    this.inAttributeName = true;\n    this.attributeIsType = false;\n    this.attrValue = '';\n\n    // Indented Mode\n    this.indentOf = Infinity;\n    this.indentToken = '';\n\n    this.innerMode = null;\n    this.innerState = null;\n\n    this.innerModeForLine = false;\n  }\n  /**\n   * Safely copy a state\n   *\n   * @return {State}\n   */\n  State.prototype.copy = function () {\n    var res = new State();\n    res.javaScriptLine = this.javaScriptLine;\n    res.javaScriptLineExcludesColon = this.javaScriptLineExcludesColon;\n    res.javaScriptArguments = this.javaScriptArguments;\n    res.javaScriptArgumentsDepth = this.javaScriptArgumentsDepth;\n    res.isInterpolating = this.isInterpolating;\n    res.interpolationNesting = this.interpolationNesting;\n\n    res.jsState = CodeMirror.copyState(jsMode, this.jsState);\n\n    res.innerMode = this.innerMode;\n    if (this.innerMode && this.innerState) {\n      res.innerState = CodeMirror.copyState(this.innerMode, this.innerState);\n    }\n\n    res.restOfLine = this.restOfLine;\n\n    res.isIncludeFiltered = this.isIncludeFiltered;\n    res.isEach = this.isEach;\n    res.lastTag = this.lastTag;\n    res.scriptType = this.scriptType;\n    res.isAttrs = this.isAttrs;\n    res.attrsNest = this.attrsNest.slice();\n    res.inAttributeName = this.inAttributeName;\n    res.attributeIsType = this.attributeIsType;\n    res.attrValue = this.attrValue;\n    res.indentOf = this.indentOf;\n    res.indentToken = this.indentToken;\n\n    res.innerModeForLine = this.innerModeForLine;\n\n    return res;\n  };\n\n  function javaScript(stream, state) {\n    if (stream.sol()) {\n      // if javaScriptLine was set at end of line, ignore it\n      state.javaScriptLine = false;\n      state.javaScriptLineExcludesColon = false;\n    }\n    if (state.javaScriptLine) {\n      if (state.javaScriptLineExcludesColon && stream.peek() === ':') {\n        state.javaScriptLine = false;\n        state.javaScriptLineExcludesColon = false;\n        return;\n      }\n      var tok = jsMode.token(stream, state.jsState);\n      if (stream.eol()) state.javaScriptLine = false;\n      return tok || true;\n    }\n  }\n  function javaScriptArguments(stream, state) {\n    if (state.javaScriptArguments) {\n      if (state.javaScriptArgumentsDepth === 0 && stream.peek() !== '(') {\n        state.javaScriptArguments = false;\n        return;\n      }\n      if (stream.peek() === '(') {\n        state.javaScriptArgumentsDepth++;\n      } else if (stream.peek() === ')') {\n        state.javaScriptArgumentsDepth--;\n      }\n      if (state.javaScriptArgumentsDepth === 0) {\n        state.javaScriptArguments = false;\n        return;\n      }\n\n      var tok = jsMode.token(stream, state.jsState);\n      return tok || true;\n    }\n  }\n\n  function yieldStatement(stream) {\n    if (stream.match(/^yield\\b/)) {\n        return 'keyword';\n    }\n  }\n\n  function doctype(stream) {\n    if (stream.match(/^(?:doctype) *([^\\n]+)?/)) {\n        return DOCTYPE;\n    }\n  }\n\n  function interpolation(stream, state) {\n    if (stream.match('#{')) {\n      state.isInterpolating = true;\n      state.interpolationNesting = 0;\n      return 'punctuation';\n    }\n  }\n\n  function interpolationContinued(stream, state) {\n    if (state.isInterpolating) {\n      if (stream.peek() === '}') {\n        state.interpolationNesting--;\n        if (state.interpolationNesting < 0) {\n          stream.next();\n          state.isInterpolating = false;\n          return 'punctuation';\n        }\n      } else if (stream.peek() === '{') {\n        state.interpolationNesting++;\n      }\n      return jsMode.token(stream, state.jsState) || true;\n    }\n  }\n\n  function caseStatement(stream, state) {\n    if (stream.match(/^case\\b/)) {\n      state.javaScriptLine = true;\n      return KEYWORD;\n    }\n  }\n\n  function when(stream, state) {\n    if (stream.match(/^when\\b/)) {\n      state.javaScriptLine = true;\n      state.javaScriptLineExcludesColon = true;\n      return KEYWORD;\n    }\n  }\n\n  function defaultStatement(stream) {\n    if (stream.match(/^default\\b/)) {\n      return KEYWORD;\n    }\n  }\n\n  function extendsStatement(stream, state) {\n    if (stream.match(/^extends?\\b/)) {\n      state.restOfLine = 'string';\n      return KEYWORD;\n    }\n  }\n\n  function append(stream, state) {\n    if (stream.match(/^append\\b/)) {\n      state.restOfLine = 'variable';\n      return KEYWORD;\n    }\n  }\n  function prepend(stream, state) {\n    if (stream.match(/^prepend\\b/)) {\n      state.restOfLine = 'variable';\n      return KEYWORD;\n    }\n  }\n  function block(stream, state) {\n    if (stream.match(/^block\\b *(?:(prepend|append)\\b)?/)) {\n      state.restOfLine = 'variable';\n      return KEYWORD;\n    }\n  }\n\n  function include(stream, state) {\n    if (stream.match(/^include\\b/)) {\n      state.restOfLine = 'string';\n      return KEYWORD;\n    }\n  }\n\n  function includeFiltered(stream, state) {\n    if (stream.match(/^include:([a-zA-Z0-9\\-]+)/, false) && stream.match('include')) {\n      state.isIncludeFiltered = true;\n      return KEYWORD;\n    }\n  }\n\n  function includeFilteredContinued(stream, state) {\n    if (state.isIncludeFiltered) {\n      var tok = filter(stream, state);\n      state.isIncludeFiltered = false;\n      state.restOfLine = 'string';\n      return tok;\n    }\n  }\n\n  function mixin(stream, state) {\n    if (stream.match(/^mixin\\b/)) {\n      state.javaScriptLine = true;\n      return KEYWORD;\n    }\n  }\n\n  function call(stream, state) {\n    if (stream.match(/^\\+([-\\w]+)/)) {\n      if (!stream.match(/^\\( *[-\\w]+ *=/, false)) {\n        state.javaScriptArguments = true;\n        state.javaScriptArgumentsDepth = 0;\n      }\n      return 'variable';\n    }\n    if (stream.match(/^\\+#{/, false)) {\n      stream.next();\n      state.mixinCallAfter = true;\n      return interpolation(stream, state);\n    }\n  }\n  function callArguments(stream, state) {\n    if (state.mixinCallAfter) {\n      state.mixinCallAfter = false;\n      if (!stream.match(/^\\( *[-\\w]+ *=/, false)) {\n        state.javaScriptArguments = true;\n        state.javaScriptArgumentsDepth = 0;\n      }\n      return true;\n    }\n  }\n\n  function conditional(stream, state) {\n    if (stream.match(/^(if|unless|else if|else)\\b/)) {\n      state.javaScriptLine = true;\n      return KEYWORD;\n    }\n  }\n\n  function each(stream, state) {\n    if (stream.match(/^(- *)?(each|for)\\b/)) {\n      state.isEach = true;\n      return KEYWORD;\n    }\n  }\n  function eachContinued(stream, state) {\n    if (state.isEach) {\n      if (stream.match(/^ in\\b/)) {\n        state.javaScriptLine = true;\n        state.isEach = false;\n        return KEYWORD;\n      } else if (stream.sol() || stream.eol()) {\n        state.isEach = false;\n      } else if (stream.next()) {\n        while (!stream.match(/^ in\\b/, false) && stream.next());\n        return 'variable';\n      }\n    }\n  }\n\n  function whileStatement(stream, state) {\n    if (stream.match(/^while\\b/)) {\n      state.javaScriptLine = true;\n      return KEYWORD;\n    }\n  }\n\n  function tag(stream, state) {\n    var captures;\n    if (captures = stream.match(/^(\\w(?:[-:\\w]*\\w)?)\\/?/)) {\n      state.lastTag = captures[1].toLowerCase();\n      if (state.lastTag === 'script') {\n        state.scriptType = 'application/javascript';\n      }\n      return 'tag';\n    }\n  }\n\n  function filter(stream, state) {\n    if (stream.match(/^:([\\w\\-]+)/)) {\n      var innerMode;\n      if (config && config.innerModes) {\n        innerMode = config.innerModes(stream.current().substring(1));\n      }\n      if (!innerMode) {\n        innerMode = stream.current().substring(1);\n      }\n      if (typeof innerMode === 'string') {\n        innerMode = CodeMirror.getMode(config, innerMode);\n      }\n      setInnerMode(stream, state, innerMode);\n      return 'atom';\n    }\n  }\n\n  function code(stream, state) {\n    if (stream.match(/^(!?=|-)/)) {\n      state.javaScriptLine = true;\n      return 'punctuation';\n    }\n  }\n\n  function id(stream) {\n    if (stream.match(/^#([\\w-]+)/)) {\n      return ID;\n    }\n  }\n\n  function className(stream) {\n    if (stream.match(/^\\.([\\w-]+)/)) {\n      return CLASS;\n    }\n  }\n\n  function attrs(stream, state) {\n    if (stream.peek() == '(') {\n      stream.next();\n      state.isAttrs = true;\n      state.attrsNest = [];\n      state.inAttributeName = true;\n      state.attrValue = '';\n      state.attributeIsType = false;\n      return 'punctuation';\n    }\n  }\n\n  function attrsContinued(stream, state) {\n    if (state.isAttrs) {\n      if (ATTRS_NEST[stream.peek()]) {\n        state.attrsNest.push(ATTRS_NEST[stream.peek()]);\n      }\n      if (state.attrsNest[state.attrsNest.length - 1] === stream.peek()) {\n        state.attrsNest.pop();\n      } else  if (stream.eat(')')) {\n        state.isAttrs = false;\n        return 'punctuation';\n      }\n      if (state.inAttributeName && stream.match(/^[^=,\\)!]+/)) {\n        if (stream.peek() === '=' || stream.peek() === '!') {\n          state.inAttributeName = false;\n          state.jsState = CodeMirror.startState(jsMode);\n          if (state.lastTag === 'script' && stream.current().trim().toLowerCase() === 'type') {\n            state.attributeIsType = true;\n          } else {\n            state.attributeIsType = false;\n          }\n        }\n        return 'attribute';\n      }\n\n      var tok = jsMode.token(stream, state.jsState);\n      if (state.attributeIsType && tok === 'string') {\n        state.scriptType = stream.current().toString();\n      }\n      if (state.attrsNest.length === 0 && (tok === 'string' || tok === 'variable' || tok === 'keyword')) {\n        try {\n          Function('', 'var x ' + state.attrValue.replace(/,\\s*$/, '').replace(/^!/, ''));\n          state.inAttributeName = true;\n          state.attrValue = '';\n          stream.backUp(stream.current().length);\n          return attrsContinued(stream, state);\n        } catch (ex) {\n          //not the end of an attribute\n        }\n      }\n      state.attrValue += stream.current();\n      return tok || true;\n    }\n  }\n\n  function attributesBlock(stream, state) {\n    if (stream.match(/^&attributes\\b/)) {\n      state.javaScriptArguments = true;\n      state.javaScriptArgumentsDepth = 0;\n      return 'keyword';\n    }\n  }\n\n  function indent(stream) {\n    if (stream.sol() && stream.eatSpace()) {\n      return 'indent';\n    }\n  }\n\n  function comment(stream, state) {\n    if (stream.match(/^ *\\/\\/(-)?([^\\n]*)/)) {\n      state.indentOf = stream.indentation();\n      state.indentToken = 'comment';\n      return 'comment';\n    }\n  }\n\n  function colon(stream) {\n    if (stream.match(/^: */)) {\n      return 'colon';\n    }\n  }\n\n  function text(stream, state) {\n    if (stream.match(/^(?:\\| ?| )([^\\n]+)/)) {\n      return 'string';\n    }\n    if (stream.match(/^(<[^\\n]*)/, false)) {\n      // html string\n      setInnerMode(stream, state, 'htmlmixed');\n      state.innerModeForLine = true;\n      return innerMode(stream, state, true);\n    }\n  }\n\n  function dot(stream, state) {\n    if (stream.eat('.')) {\n      var innerMode = null;\n      if (state.lastTag === 'script' && state.scriptType.toLowerCase().indexOf('javascript') != -1) {\n        innerMode = state.scriptType.toLowerCase().replace(/\"|'/g, '');\n      } else if (state.lastTag === 'style') {\n        innerMode = 'css';\n      }\n      setInnerMode(stream, state, innerMode);\n      return 'dot';\n    }\n  }\n\n  function fail(stream) {\n    stream.next();\n    return null;\n  }\n\n\n  function setInnerMode(stream, state, mode) {\n    mode = CodeMirror.mimeModes[mode] || mode;\n    mode = config.innerModes ? config.innerModes(mode) || mode : mode;\n    mode = CodeMirror.mimeModes[mode] || mode;\n    mode = CodeMirror.getMode(config, mode);\n    state.indentOf = stream.indentation();\n\n    if (mode && mode.name !== 'null') {\n      state.innerMode = mode;\n    } else {\n      state.indentToken = 'string';\n    }\n  }\n  function innerMode(stream, state, force) {\n    if (stream.indentation() > state.indentOf || (state.innerModeForLine && !stream.sol()) || force) {\n      if (state.innerMode) {\n        if (!state.innerState) {\n          state.innerState = state.innerMode.startState ? CodeMirror.startState(state.innerMode, stream.indentation()) : {};\n        }\n        return stream.hideFirstChars(state.indentOf + 2, function () {\n          return state.innerMode.token(stream, state.innerState) || true;\n        });\n      } else {\n        stream.skipToEnd();\n        return state.indentToken;\n      }\n    } else if (stream.sol()) {\n      state.indentOf = Infinity;\n      state.indentToken = null;\n      state.innerMode = null;\n      state.innerState = null;\n    }\n  }\n  function restOfLine(stream, state) {\n    if (stream.sol()) {\n      // if restOfLine was set at end of line, ignore it\n      state.restOfLine = '';\n    }\n    if (state.restOfLine) {\n      stream.skipToEnd();\n      var tok = state.restOfLine;\n      state.restOfLine = '';\n      return tok;\n    }\n  }\n\n\n  function startState() {\n    return new State();\n  }\n  function copyState(state) {\n    return state.copy();\n  }\n  /**\n   * Get the next token in the stream\n   *\n   * @param {Stream} stream\n   * @param {State} state\n   */\n  function nextToken(stream, state) {\n    var tok = innerMode(stream, state)\n      || restOfLine(stream, state)\n      || interpolationContinued(stream, state)\n      || includeFilteredContinued(stream, state)\n      || eachContinued(stream, state)\n      || attrsContinued(stream, state)\n      || javaScript(stream, state)\n      || javaScriptArguments(stream, state)\n      || callArguments(stream, state)\n\n      || yieldStatement(stream, state)\n      || doctype(stream, state)\n      || interpolation(stream, state)\n      || caseStatement(stream, state)\n      || when(stream, state)\n      || defaultStatement(stream, state)\n      || extendsStatement(stream, state)\n      || append(stream, state)\n      || prepend(stream, state)\n      || block(stream, state)\n      || include(stream, state)\n      || includeFiltered(stream, state)\n      || mixin(stream, state)\n      || call(stream, state)\n      || conditional(stream, state)\n      || each(stream, state)\n      || whileStatement(stream, state)\n      || tag(stream, state)\n      || filter(stream, state)\n      || code(stream, state)\n      || id(stream, state)\n      || className(stream, state)\n      || attrs(stream, state)\n      || attributesBlock(stream, state)\n      || indent(stream, state)\n      || text(stream, state)\n      || comment(stream, state)\n      || colon(stream, state)\n      || dot(stream, state)\n      || fail(stream, state);\n\n    return tok === true ? null : tok;\n  }\n  return {\n    startState: startState,\n    copyState: copyState,\n    token: nextToken\n  };\n}, 'javascript', 'css', 'htmlmixed');\n\nCodeMirror.defineMIME('text/x-jade', 'jade');\n\n});\n"]}