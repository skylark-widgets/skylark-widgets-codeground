{"version":3,"sources":["mode/python/test.js"],"names":["MT","name","test","mode","Array","prototype","slice","call","arguments","CodeMirror","getMode","indentUnit","version","singleLineStringErrors"],"mappings":";;;;;;;CAGA,WAKE,QAASA,GAAGC,GAAQC,KAAKC,KAAKF,EAAME,EAAMC,MAAMC,UAAUC,MAAMC,KAAKC,UAAW,IAJhF,GAAIL,GAAOM,WAAWC,SAASC,WAAY,IAC9BV,KAAM,SACNW,QAAS,EACTC,wBAAwB,GAKrCb,GAAG,uBACA,cACA,kCACA,sBAEHA,EAAG,oBACA,6BACA,kBACA,sCACA,0BAEHA,EAAG,mBAAoB,0CACvBA,EAAG,sBAAuB,wCAC1BA,EAAG,qBAAsB,yCAEzBA,EAAG,qBAAsB,4CACzBA,EAAG,qBAAsB","file":"../../../mode/python/test.js","sourcesContent":["// CodeMirror, copyright (c) by Marijn Haverbeke and others\n// Distributed under an MIT license: http://codemirror.net/LICENSE\n\n(function() {\n  var mode = CodeMirror.getMode({indentUnit: 4},\n              {name: \"python\",\n               version: 3,\n               singleLineStringErrors: false});\n  function MT(name) { test.mode(name, mode, Array.prototype.slice.call(arguments, 1)); }\n\n  // Error, because \"foobarhello\" is neither a known type or property, but\n  // property was expected (after \"and\"), and it should be in parentheses.\n  MT(\"decoratorStartOfLine\",\n     \"[meta @dec]\",\n     \"[keyword def] [def function]():\",\n     \"    [keyword pass]\");\n\n  MT(\"decoratorIndented\",\n     \"[keyword class] [def Foo]:\",\n     \"    [meta @dec]\",\n     \"    [keyword def] [def function]():\",\n     \"        [keyword pass]\");\n\n  MT(\"matmulWithSpace:\", \"[variable a] [operator @] [variable b]\");\n  MT(\"matmulWithoutSpace:\", \"[variable a][operator @][variable b]\");\n  MT(\"matmulSpaceBefore:\", \"[variable a] [operator @][variable b]\");\n\n  MT(\"fValidStringPrefix\", \"[string f'this is a {formatted} string']\");\n  MT(\"uValidStringPrefix\", \"[string u'this is an unicode string']\");\n})();\n"]}