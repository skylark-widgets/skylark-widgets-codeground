{"version":3,"sources":["mode/rpm/rpm.js"],"names":["define","CodeMirror","defineMode","headerSeperator","headerLine","simpleEmail","token","stream","sol","match","next","defineMIME","arch","preamble","section","control_flow_complex","control_flow_simple","operators","startState","controlFlow","macroParameters","state","ch","peek","skipToEnd","eol"],"mappings":";;;;;;;AAGAA,QAAQ,eAAgB,SAASC,GACjC,YAEAA,GAAWC,WAAW,cAAe,WACnC,GAAIC,GAAkB,OAClBC,EAAa,sIACbC,EAAc,mBAElB,QACEC,MAAO,SAASC,GACd,GAAIA,EAAOC,MAAO,CAChB,GAAID,EAAOE,MAAMN,GAAoB,MAAO,KAC5C,IAAII,EAAOE,MAAML,GAAe,MAAO,MAEzC,MAAIG,GAAOE,MAAMJ,GAAuB,UACxCE,EAAOG,OACA,UAKbT,EAAWU,WAAW,qBAAsB,eAI5CV,EAAWC,WAAW,WAAY,WAChC,GAAIU,GAAO,qHAEPC,EAAW,mBACXC,EAAU,2NACVC,EAAuB,wBACvBC,EAAsB,iBACtBC,EAAY,yCAEhB,QACEC,WAAY,WACR,OACEC,aAAa,EACbC,iBAAiB,EACjBN,SAAS,IAGfR,MAAO,SAAUC,EAAQc,GACvB,GAAIC,GAAKf,EAAOgB,MAChB,IAAU,KAAND,EAAiC,MAApBf,GAAOiB,YAAoB,SAE5C,IAAIjB,EAAOC,MAAO,CAChB,GAAID,EAAOE,MAAMI,GAAa,MAAO,QACrC,IAAIN,EAAOE,MAAMK,GAAY,MAAO,OAGtC,GAAIP,EAAOE,MAAM,UAAa,MAAO,KACrC,IAAIF,EAAOE,MAAM,cAAiB,MAAO,KAEzC,IAAIF,EAAOE,MAAMO,GAAwB,MAAO,SAChD,IAAIT,EAAOE,MAAMM,GAEf,MADAM,GAAMF,aAAc,EACb,SAET,IAAIE,EAAMF,YAAa,CACrB,GAAIZ,EAAOE,MAAMQ,GAAc,MAAO,UACtC,IAAIV,EAAOE,MAAM,UAAa,MAAO,QACjCF,GAAOkB,QAASJ,EAAMF,aAAc,GAG1C,GAAIZ,EAAOE,MAAMG,GAEf,MADIL,GAAOkB,QAASJ,EAAMF,aAAc,GACjC,QAIT,IAAIZ,EAAOE,MAAM,WAEf,MADIF,GAAOE,MAAM,SAAUY,EAAMD,iBAAkB,GAC5C,SAET,IAAIC,EAAMD,gBAAiB,CACzB,GAAIb,EAAOE,MAAM,QAAW,MAAO,QACnC,IAAIF,EAAOE,MAAM,OAEf,MADAY,GAAMD,iBAAkB,EACjB,UAKX,MAAIb,GAAOE,MAAM,0BACXF,EAAOkB,QAASJ,EAAMF,aAAc,GACjC,QAITZ,EAAOG,OACA,UAKbT,EAAWU,WAAW,kBAAmB","file":"../../../mode/rpm/rpm.js","sourcesContent":["// CodeMirror, copyright (c) by Marijn Haverbeke and others\n// Distributed under an MIT license: http://codemirror.net/LICENSE\n\ndefine([\"../../Coder\"], function(CodeMirror) {\n\"use strict\";\n\nCodeMirror.defineMode(\"rpm-changes\", function() {\n  var headerSeperator = /^-+$/;\n  var headerLine = /^(Mon|Tue|Wed|Thu|Fri|Sat|Sun) (Jan|Feb|Mar|Apr|May|Jun|Jul|Aug|Sep|Oct|Nov|Dec)  ?\\d{1,2} \\d{2}:\\d{2}(:\\d{2})? [A-Z]{3,4} \\d{4} - /;\n  var simpleEmail = /^[\\w+.-]+@[\\w.-]+/;\n\n  return {\n    token: function(stream) {\n      if (stream.sol()) {\n        if (stream.match(headerSeperator)) { return 'tag'; }\n        if (stream.match(headerLine)) { return 'tag'; }\n      }\n      if (stream.match(simpleEmail)) { return 'string'; }\n      stream.next();\n      return null;\n    }\n  };\n});\n\nCodeMirror.defineMIME(\"text/x-rpm-changes\", \"rpm-changes\");\n\n// Quick and dirty spec file highlighting\n\nCodeMirror.defineMode(\"rpm-spec\", function() {\n  var arch = /^(i386|i586|i686|x86_64|ppc64le|ppc64|ppc|ia64|s390x|s390|sparc64|sparcv9|sparc|noarch|alphaev6|alpha|hppa|mipsel)/;\n\n  var preamble = /^[a-zA-Z0-9()]+:/;\n  var section = /^%(debug_package|package|description|prep|build|install|files|clean|changelog|preinstall|preun|postinstall|postun|pretrans|posttrans|pre|post|triggerin|triggerun|verifyscript|check|triggerpostun|triggerprein|trigger)/;\n  var control_flow_complex = /^%(ifnarch|ifarch|if)/; // rpm control flow macros\n  var control_flow_simple = /^%(else|endif)/; // rpm control flow macros\n  var operators = /^(\\!|\\?|\\<\\=|\\<|\\>\\=|\\>|\\=\\=|\\&\\&|\\|\\|)/; // operators in control flow macros\n\n  return {\n    startState: function () {\n        return {\n          controlFlow: false,\n          macroParameters: false,\n          section: false\n        };\n    },\n    token: function (stream, state) {\n      var ch = stream.peek();\n      if (ch == \"#\") { stream.skipToEnd(); return \"comment\"; }\n\n      if (stream.sol()) {\n        if (stream.match(preamble)) { return \"header\"; }\n        if (stream.match(section)) { return \"atom\"; }\n      }\n\n      if (stream.match(/^\\$\\w+/)) { return \"def\"; } // Variables like '$RPM_BUILD_ROOT'\n      if (stream.match(/^\\$\\{\\w+\\}/)) { return \"def\"; } // Variables like '${RPM_BUILD_ROOT}'\n\n      if (stream.match(control_flow_simple)) { return \"keyword\"; }\n      if (stream.match(control_flow_complex)) {\n        state.controlFlow = true;\n        return \"keyword\";\n      }\n      if (state.controlFlow) {\n        if (stream.match(operators)) { return \"operator\"; }\n        if (stream.match(/^(\\d+)/)) { return \"number\"; }\n        if (stream.eol()) { state.controlFlow = false; }\n      }\n\n      if (stream.match(arch)) {\n        if (stream.eol()) { state.controlFlow = false; }\n        return \"number\";\n      }\n\n      // Macros like '%make_install' or '%attr(0775,root,root)'\n      if (stream.match(/^%[\\w]+/)) {\n        if (stream.match(/^\\(/)) { state.macroParameters = true; }\n        return \"keyword\";\n      }\n      if (state.macroParameters) {\n        if (stream.match(/^\\d+/)) { return \"number\";}\n        if (stream.match(/^\\)/)) {\n          state.macroParameters = false;\n          return \"keyword\";\n        }\n      }\n\n      // Macros like '%{defined fedora}'\n      if (stream.match(/^%\\{\\??[\\w \\-\\:\\!]+\\}/)) {\n        if (stream.eol()) { state.controlFlow = false; }\n        return \"def\";\n      }\n\n      //TODO: Include bash script sub-parser (CodeMirror supports that)\n      stream.next();\n      return null;\n    }\n  };\n});\n\nCodeMirror.defineMIME(\"text/x-rpm-spec\", \"rpm-spec\");\n\n});\n"]}