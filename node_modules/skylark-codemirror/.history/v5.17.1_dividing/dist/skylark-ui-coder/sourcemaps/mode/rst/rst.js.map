{"version":3,"sources":["mode/rst/rst.js"],"names":["mod","exports","module","require","define","amd","CodeMirror","defineMode","config","options","rx_strong","rx_emphasis","rx_literal","rx_number","rx_positive","rx_negative","rx_uri_protocol","rx_uri_domain","rx_uri_path","rx_uri","RegExp","overlay","token","stream","match","next","mode","getMode","backdrop","overlayMode","format","string","args","Array","prototype","slice","call","arguments","replace","n","to_normal","state","sol","rx_examples","change","to_mode","mode_python","local","startState","rx_explicit","to_explicit","rx_section","phase","rx_role_pre","stage","context","rx_NAME","current","tmp_stex","undefined","tmp","mode_stex","peek","rx_TEXT2","rx_TAIL","rx_role_suf","rx_role","rx_substitution_ref","rx_substitution_text","rx_footnote_ref","rx_citation_ref","rx_link_ref1","rx_link_ref2","rx_verbatim","to_verbatim","rx_substitution","rx_substitution_sepa","rx_substitution_name","rx_substitution_tail","rx_directive","rx_directive_name","tmp_py","rx_directive_tail","rx_link","rx_link_head","rx_link_name","rx_link_tail","rx_footnote","rx_citation","eatSpace","eol","skipToEnd","to_comment","as_block","ctx","tok","SEPA","TAIL","NAME","NAME_WWS","REF_NAME","TEXT1","TEXT2","copyState","innerMode","defineMIME"],"mappings":"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","file":"../../../mode/rst/rst.js","sourcesContent":["// CodeMirror, copyright (c) by Marijn Haverbeke and others\n// Distributed under an MIT license: http://codemirror.net/LICENSE\n\n(function(mod) {\n  if (typeof exports == \"object\" && typeof module == \"object\") // CommonJS\n    mod(require(\"../../Coder\"), require(\"../python/python\"), require(\"../stex/stex\"), require(\"../../addon/mode/overlay\"));\n  else if (typeof define == \"function\" && define.amd) // AMD\n    define([\"../../Coder\", \"../python/python\", \"../stex/stex\", \"../../addon/mode/overlay\"], mod);\n  else // Plain browser env\n    mod(CodeMirror);\n})(function(CodeMirror) {\n\"use strict\";\n\nCodeMirror.defineMode('rst', function (config, options) {\n\n  var rx_strong = /^\\*\\*[^\\*\\s](?:[^\\*]*[^\\*\\s])?\\*\\*/;\n  var rx_emphasis = /^\\*[^\\*\\s](?:[^\\*]*[^\\*\\s])?\\*/;\n  var rx_literal = /^``[^`\\s](?:[^`]*[^`\\s])``/;\n\n  var rx_number = /^(?:[\\d]+(?:[\\.,]\\d+)*)/;\n  var rx_positive = /^(?:\\s\\+[\\d]+(?:[\\.,]\\d+)*)/;\n  var rx_negative = /^(?:\\s\\-[\\d]+(?:[\\.,]\\d+)*)/;\n\n  var rx_uri_protocol = \"[Hh][Tt][Tt][Pp][Ss]?://\";\n  var rx_uri_domain = \"(?:[\\\\d\\\\w.-]+)\\\\.(?:\\\\w{2,6})\";\n  var rx_uri_path = \"(?:/[\\\\d\\\\w\\\\#\\\\%\\\\&\\\\-\\\\.\\\\,\\\\/\\\\:\\\\=\\\\?\\\\~]+)*\";\n  var rx_uri = new RegExp(\"^\" + rx_uri_protocol + rx_uri_domain + rx_uri_path);\n\n  var overlay = {\n    token: function (stream) {\n\n      if (stream.match(rx_strong) && stream.match (/\\W+|$/, false))\n        return 'strong';\n      if (stream.match(rx_emphasis) && stream.match (/\\W+|$/, false))\n        return 'em';\n      if (stream.match(rx_literal) && stream.match (/\\W+|$/, false))\n        return 'string-2';\n      if (stream.match(rx_number))\n        return 'number';\n      if (stream.match(rx_positive))\n        return 'positive';\n      if (stream.match(rx_negative))\n        return 'negative';\n      if (stream.match(rx_uri))\n        return 'link';\n\n      while (stream.next() != null) {\n        if (stream.match(rx_strong, false)) break;\n        if (stream.match(rx_emphasis, false)) break;\n        if (stream.match(rx_literal, false)) break;\n        if (stream.match(rx_number, false)) break;\n        if (stream.match(rx_positive, false)) break;\n        if (stream.match(rx_negative, false)) break;\n        if (stream.match(rx_uri, false)) break;\n      }\n\n      return null;\n    }\n  };\n\n  var mode = CodeMirror.getMode(\n    config, options.backdrop || 'rst-base'\n  );\n\n  return CodeMirror.overlayMode(mode, overlay, true); // combine\n}, 'python', 'stex');\n\n///////////////////////////////////////////////////////////////////////////////\n///////////////////////////////////////////////////////////////////////////////\n\nCodeMirror.defineMode('rst-base', function (config) {\n\n  ///////////////////////////////////////////////////////////////////////////\n  ///////////////////////////////////////////////////////////////////////////\n\n  function format(string) {\n    var args = Array.prototype.slice.call(arguments, 1);\n    return string.replace(/{(\\d+)}/g, function (match, n) {\n      return typeof args[n] != 'undefined' ? args[n] : match;\n    });\n  }\n\n  ///////////////////////////////////////////////////////////////////////////\n  ///////////////////////////////////////////////////////////////////////////\n\n  var mode_python = CodeMirror.getMode(config, 'python');\n  var mode_stex = CodeMirror.getMode(config, 'stex');\n\n  ///////////////////////////////////////////////////////////////////////////\n  ///////////////////////////////////////////////////////////////////////////\n\n  var SEPA = \"\\\\s+\";\n  var TAIL = \"(?:\\\\s*|\\\\W|$)\",\n  rx_TAIL = new RegExp(format('^{0}', TAIL));\n\n  var NAME =\n    \"(?:[^\\\\W\\\\d_](?:[\\\\w!\\\"#$%&'()\\\\*\\\\+,\\\\-\\\\.\\/:;<=>\\\\?]*[^\\\\W_])?)\",\n  rx_NAME = new RegExp(format('^{0}', NAME));\n  var NAME_WWS =\n    \"(?:[^\\\\W\\\\d_](?:[\\\\w\\\\s!\\\"#$%&'()\\\\*\\\\+,\\\\-\\\\.\\/:;<=>\\\\?]*[^\\\\W_])?)\";\n  var REF_NAME = format('(?:{0}|`{1}`)', NAME, NAME_WWS);\n\n  var TEXT1 = \"(?:[^\\\\s\\\\|](?:[^\\\\|]*[^\\\\s\\\\|])?)\";\n  var TEXT2 = \"(?:[^\\\\`]+)\",\n  rx_TEXT2 = new RegExp(format('^{0}', TEXT2));\n\n  var rx_section = new RegExp(\n    \"^([!'#$%&\\\"()*+,-./:;<=>?@\\\\[\\\\\\\\\\\\]^_`{|}~])\\\\1{3,}\\\\s*$\");\n  var rx_explicit = new RegExp(\n    format('^\\\\.\\\\.{0}', SEPA));\n  var rx_link = new RegExp(\n    format('^_{0}:{1}|^__:{1}', REF_NAME, TAIL));\n  var rx_directive = new RegExp(\n    format('^{0}::{1}', REF_NAME, TAIL));\n  var rx_substitution = new RegExp(\n    format('^\\\\|{0}\\\\|{1}{2}::{3}', TEXT1, SEPA, REF_NAME, TAIL));\n  var rx_footnote = new RegExp(\n    format('^\\\\[(?:\\\\d+|#{0}?|\\\\*)]{1}', REF_NAME, TAIL));\n  var rx_citation = new RegExp(\n    format('^\\\\[{0}\\\\]{1}', REF_NAME, TAIL));\n\n  var rx_substitution_ref = new RegExp(\n    format('^\\\\|{0}\\\\|', TEXT1));\n  var rx_footnote_ref = new RegExp(\n    format('^\\\\[(?:\\\\d+|#{0}?|\\\\*)]_', REF_NAME));\n  var rx_citation_ref = new RegExp(\n    format('^\\\\[{0}\\\\]_', REF_NAME));\n  var rx_link_ref1 = new RegExp(\n    format('^{0}__?', REF_NAME));\n  var rx_link_ref2 = new RegExp(\n    format('^`{0}`_', TEXT2));\n\n  var rx_role_pre = new RegExp(\n    format('^:{0}:`{1}`{2}', NAME, TEXT2, TAIL));\n  var rx_role_suf = new RegExp(\n    format('^`{1}`:{0}:{2}', NAME, TEXT2, TAIL));\n  var rx_role = new RegExp(\n    format('^:{0}:{1}', NAME, TAIL));\n\n  var rx_directive_name = new RegExp(format('^{0}', REF_NAME));\n  var rx_directive_tail = new RegExp(format('^::{0}', TAIL));\n  var rx_substitution_text = new RegExp(format('^\\\\|{0}\\\\|', TEXT1));\n  var rx_substitution_sepa = new RegExp(format('^{0}', SEPA));\n  var rx_substitution_name = new RegExp(format('^{0}', REF_NAME));\n  var rx_substitution_tail = new RegExp(format('^::{0}', TAIL));\n  var rx_link_head = new RegExp(\"^_\");\n  var rx_link_name = new RegExp(format('^{0}|_', REF_NAME));\n  var rx_link_tail = new RegExp(format('^:{0}', TAIL));\n\n  var rx_verbatim = new RegExp('^::\\\\s*$');\n  var rx_examples = new RegExp('^\\\\s+(?:>>>|In \\\\[\\\\d+\\\\]:)\\\\s');\n\n  ///////////////////////////////////////////////////////////////////////////\n  ///////////////////////////////////////////////////////////////////////////\n\n  function to_normal(stream, state) {\n    var token = null;\n\n    if (stream.sol() && stream.match(rx_examples, false)) {\n      change(state, to_mode, {\n        mode: mode_python, local: CodeMirror.startState(mode_python)\n      });\n    } else if (stream.sol() && stream.match(rx_explicit)) {\n      change(state, to_explicit);\n      token = 'meta';\n    } else if (stream.sol() && stream.match(rx_section)) {\n      change(state, to_normal);\n      token = 'header';\n    } else if (phase(state) == rx_role_pre ||\n               stream.match(rx_role_pre, false)) {\n\n      switch (stage(state)) {\n      case 0:\n        change(state, to_normal, context(rx_role_pre, 1));\n        stream.match(/^:/);\n        token = 'meta';\n        break;\n      case 1:\n        change(state, to_normal, context(rx_role_pre, 2));\n        stream.match(rx_NAME);\n        token = 'keyword';\n\n        if (stream.current().match(/^(?:math|latex)/)) {\n          state.tmp_stex = true;\n        }\n        break;\n      case 2:\n        change(state, to_normal, context(rx_role_pre, 3));\n        stream.match(/^:`/);\n        token = 'meta';\n        break;\n      case 3:\n        if (state.tmp_stex) {\n          state.tmp_stex = undefined; state.tmp = {\n            mode: mode_stex, local: CodeMirror.startState(mode_stex)\n          };\n        }\n\n        if (state.tmp) {\n          if (stream.peek() == '`') {\n            change(state, to_normal, context(rx_role_pre, 4));\n            state.tmp = undefined;\n            break;\n          }\n\n          token = state.tmp.mode.token(stream, state.tmp.local);\n          break;\n        }\n\n        change(state, to_normal, context(rx_role_pre, 4));\n        stream.match(rx_TEXT2);\n        token = 'string';\n        break;\n      case 4:\n        change(state, to_normal, context(rx_role_pre, 5));\n        stream.match(/^`/);\n        token = 'meta';\n        break;\n      case 5:\n        change(state, to_normal, context(rx_role_pre, 6));\n        stream.match(rx_TAIL);\n        break;\n      default:\n        change(state, to_normal);\n      }\n    } else if (phase(state) == rx_role_suf ||\n               stream.match(rx_role_suf, false)) {\n\n      switch (stage(state)) {\n      case 0:\n        change(state, to_normal, context(rx_role_suf, 1));\n        stream.match(/^`/);\n        token = 'meta';\n        break;\n      case 1:\n        change(state, to_normal, context(rx_role_suf, 2));\n        stream.match(rx_TEXT2);\n        token = 'string';\n        break;\n      case 2:\n        change(state, to_normal, context(rx_role_suf, 3));\n        stream.match(/^`:/);\n        token = 'meta';\n        break;\n      case 3:\n        change(state, to_normal, context(rx_role_suf, 4));\n        stream.match(rx_NAME);\n        token = 'keyword';\n        break;\n      case 4:\n        change(state, to_normal, context(rx_role_suf, 5));\n        stream.match(/^:/);\n        token = 'meta';\n        break;\n      case 5:\n        change(state, to_normal, context(rx_role_suf, 6));\n        stream.match(rx_TAIL);\n        break;\n      default:\n        change(state, to_normal);\n      }\n    } else if (phase(state) == rx_role || stream.match(rx_role, false)) {\n\n      switch (stage(state)) {\n      case 0:\n        change(state, to_normal, context(rx_role, 1));\n        stream.match(/^:/);\n        token = 'meta';\n        break;\n      case 1:\n        change(state, to_normal, context(rx_role, 2));\n        stream.match(rx_NAME);\n        token = 'keyword';\n        break;\n      case 2:\n        change(state, to_normal, context(rx_role, 3));\n        stream.match(/^:/);\n        token = 'meta';\n        break;\n      case 3:\n        change(state, to_normal, context(rx_role, 4));\n        stream.match(rx_TAIL);\n        break;\n      default:\n        change(state, to_normal);\n      }\n    } else if (phase(state) == rx_substitution_ref ||\n               stream.match(rx_substitution_ref, false)) {\n\n      switch (stage(state)) {\n      case 0:\n        change(state, to_normal, context(rx_substitution_ref, 1));\n        stream.match(rx_substitution_text);\n        token = 'variable-2';\n        break;\n      case 1:\n        change(state, to_normal, context(rx_substitution_ref, 2));\n        if (stream.match(/^_?_?/)) token = 'link';\n        break;\n      default:\n        change(state, to_normal);\n      }\n    } else if (stream.match(rx_footnote_ref)) {\n      change(state, to_normal);\n      token = 'quote';\n    } else if (stream.match(rx_citation_ref)) {\n      change(state, to_normal);\n      token = 'quote';\n    } else if (stream.match(rx_link_ref1)) {\n      change(state, to_normal);\n      if (!stream.peek() || stream.peek().match(/^\\W$/)) {\n        token = 'link';\n      }\n    } else if (phase(state) == rx_link_ref2 ||\n               stream.match(rx_link_ref2, false)) {\n\n      switch (stage(state)) {\n      case 0:\n        if (!stream.peek() || stream.peek().match(/^\\W$/)) {\n          change(state, to_normal, context(rx_link_ref2, 1));\n        } else {\n          stream.match(rx_link_ref2);\n        }\n        break;\n      case 1:\n        change(state, to_normal, context(rx_link_ref2, 2));\n        stream.match(/^`/);\n        token = 'link';\n        break;\n      case 2:\n        change(state, to_normal, context(rx_link_ref2, 3));\n        stream.match(rx_TEXT2);\n        break;\n      case 3:\n        change(state, to_normal, context(rx_link_ref2, 4));\n        stream.match(/^`_/);\n        token = 'link';\n        break;\n      default:\n        change(state, to_normal);\n      }\n    } else if (stream.match(rx_verbatim)) {\n      change(state, to_verbatim);\n    }\n\n    else {\n      if (stream.next()) change(state, to_normal);\n    }\n\n    return token;\n  }\n\n  ///////////////////////////////////////////////////////////////////////////\n  ///////////////////////////////////////////////////////////////////////////\n\n  function to_explicit(stream, state) {\n    var token = null;\n\n    if (phase(state) == rx_substitution ||\n        stream.match(rx_substitution, false)) {\n\n      switch (stage(state)) {\n      case 0:\n        change(state, to_explicit, context(rx_substitution, 1));\n        stream.match(rx_substitution_text);\n        token = 'variable-2';\n        break;\n      case 1:\n        change(state, to_explicit, context(rx_substitution, 2));\n        stream.match(rx_substitution_sepa);\n        break;\n      case 2:\n        change(state, to_explicit, context(rx_substitution, 3));\n        stream.match(rx_substitution_name);\n        token = 'keyword';\n        break;\n      case 3:\n        change(state, to_explicit, context(rx_substitution, 4));\n        stream.match(rx_substitution_tail);\n        token = 'meta';\n        break;\n      default:\n        change(state, to_normal);\n      }\n    } else if (phase(state) == rx_directive ||\n               stream.match(rx_directive, false)) {\n\n      switch (stage(state)) {\n      case 0:\n        change(state, to_explicit, context(rx_directive, 1));\n        stream.match(rx_directive_name);\n        token = 'keyword';\n\n        if (stream.current().match(/^(?:math|latex)/))\n          state.tmp_stex = true;\n        else if (stream.current().match(/^python/))\n          state.tmp_py = true;\n        break;\n      case 1:\n        change(state, to_explicit, context(rx_directive, 2));\n        stream.match(rx_directive_tail);\n        token = 'meta';\n\n        if (stream.match(/^latex\\s*$/) || state.tmp_stex) {\n          state.tmp_stex = undefined; change(state, to_mode, {\n            mode: mode_stex, local: CodeMirror.startState(mode_stex)\n          });\n        }\n        break;\n      case 2:\n        change(state, to_explicit, context(rx_directive, 3));\n        if (stream.match(/^python\\s*$/) || state.tmp_py) {\n          state.tmp_py = undefined; change(state, to_mode, {\n            mode: mode_python, local: CodeMirror.startState(mode_python)\n          });\n        }\n        break;\n      default:\n        change(state, to_normal);\n      }\n    } else if (phase(state) == rx_link || stream.match(rx_link, false)) {\n\n      switch (stage(state)) {\n      case 0:\n        change(state, to_explicit, context(rx_link, 1));\n        stream.match(rx_link_head);\n        stream.match(rx_link_name);\n        token = 'link';\n        break;\n      case 1:\n        change(state, to_explicit, context(rx_link, 2));\n        stream.match(rx_link_tail);\n        token = 'meta';\n        break;\n      default:\n        change(state, to_normal);\n      }\n    } else if (stream.match(rx_footnote)) {\n      change(state, to_normal);\n      token = 'quote';\n    } else if (stream.match(rx_citation)) {\n      change(state, to_normal);\n      token = 'quote';\n    }\n\n    else {\n      stream.eatSpace();\n      if (stream.eol()) {\n        change(state, to_normal);\n      } else {\n        stream.skipToEnd();\n        change(state, to_comment);\n        token = 'comment';\n      }\n    }\n\n    return token;\n  }\n\n  ///////////////////////////////////////////////////////////////////////////\n  ///////////////////////////////////////////////////////////////////////////\n\n  function to_comment(stream, state) {\n    return as_block(stream, state, 'comment');\n  }\n\n  function to_verbatim(stream, state) {\n    return as_block(stream, state, 'meta');\n  }\n\n  function as_block(stream, state, token) {\n    if (stream.eol() || stream.eatSpace()) {\n      stream.skipToEnd();\n      return token;\n    } else {\n      change(state, to_normal);\n      return null;\n    }\n  }\n\n  ///////////////////////////////////////////////////////////////////////////\n  ///////////////////////////////////////////////////////////////////////////\n\n  function to_mode(stream, state) {\n\n    if (state.ctx.mode && state.ctx.local) {\n\n      if (stream.sol()) {\n        if (!stream.eatSpace()) change(state, to_normal);\n        return null;\n      }\n\n      return state.ctx.mode.token(stream, state.ctx.local);\n    }\n\n    change(state, to_normal);\n    return null;\n  }\n\n  ///////////////////////////////////////////////////////////////////////////\n  ///////////////////////////////////////////////////////////////////////////\n\n  function context(phase, stage, mode, local) {\n    return {phase: phase, stage: stage, mode: mode, local: local};\n  }\n\n  function change(state, tok, ctx) {\n    state.tok = tok;\n    state.ctx = ctx || {};\n  }\n\n  function stage(state) {\n    return state.ctx.stage || 0;\n  }\n\n  function phase(state) {\n    return state.ctx.phase;\n  }\n\n  ///////////////////////////////////////////////////////////////////////////\n  ///////////////////////////////////////////////////////////////////////////\n\n  return {\n    startState: function () {\n      return {tok: to_normal, ctx: context(undefined, 0)};\n    },\n\n    copyState: function (state) {\n      var ctx = state.ctx, tmp = state.tmp;\n      if (ctx.local)\n        ctx = {mode: ctx.mode, local: CodeMirror.copyState(ctx.mode, ctx.local)};\n      if (tmp)\n        tmp = {mode: tmp.mode, local: CodeMirror.copyState(tmp.mode, tmp.local)};\n      return {tok: state.tok, ctx: ctx, tmp: tmp};\n    },\n\n    innerMode: function (state) {\n      return state.tmp      ? {state: state.tmp.local, mode: state.tmp.mode}\n      : state.ctx.mode ? {state: state.ctx.local, mode: state.ctx.mode}\n      : null;\n    },\n\n    token: function (stream, state) {\n      return state.tok(stream, state);\n    }\n  };\n}, 'python', 'stex');\n\n///////////////////////////////////////////////////////////////////////////////\n///////////////////////////////////////////////////////////////////////////////\n\nCodeMirror.defineMIME('text/x-rst', 'rst');\n\n///////////////////////////////////////////////////////////////////////////////\n///////////////////////////////////////////////////////////////////////////////\n\n});\n"]}