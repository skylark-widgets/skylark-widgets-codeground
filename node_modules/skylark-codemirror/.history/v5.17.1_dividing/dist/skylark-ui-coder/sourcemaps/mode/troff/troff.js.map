{"version":3,"sources":["mode/troff/troff.js"],"names":["mod","exports","module","require","define","amd","CodeMirror","defineMode","tokenBase","stream","eatSpace","sol","ch","next","match","skipTo","eatWhile","eat","skipToEnd","cur","current","words","hasOwnProperty","tokenize","state","tokens","startState","token","defineMIME"],"mappings":";;;;;;;CAGA,SAAUA,GACc,gBAAXC,UAAwC,gBAAVC,QACvCF,EAAIG,QAAQ,gBACY,kBAAVC,SAAwBA,OAAOC,IAC7CD,QAAQ,eAAgBJ,GAExBA,EAAIM,aACL,SAASA,GACZ,YAEAA,GAAWC,WAAW,QAAS,WAI7B,QAASC,GAAUC,GACjB,GAAIA,EAAOC,WAAY,MAAO,KAE9B,IAAIC,GAAMF,EAAOE,MACbC,EAAKH,EAAOI,MAEhB,IAAW,OAAPD,EACF,MAAIH,GAAOK,MAAM,OAASL,EAAOK,MAAM,OAASL,EAAOK,MAAM,OACzDL,EAAOK,MAAM,MAASL,EAAOK,MAAM,MACnCL,EAAOK,MAAM,MAASL,EAAOK,MAAM,KAC9B,SAELL,EAAOK,MAAM,OACfL,EAAOM,OAAO,KACdN,EAAOI,OACA,UAELJ,EAAOK,MAAM,OAASL,EAAOK,MAAM,OACrCL,EAAOO,SAAS,SACT,UAELP,EAAOK,MAAM,MAASL,EAAOK,MAAM,OACrCL,EAAOO,SAAS,SACT,UAEF,QAET,IAAIL,IAAe,MAAPC,GAAqB,MAAPA,IACpBH,EAAOQ,IAAI,OAASR,EAAOQ,IAAI,KAEjC,MADAR,GAAOS,YACA,SAGX,IAAIP,GAAc,MAAPC,EAAY,CACrB,GAAIH,EAAOK,MAAM,OAASL,EAAOK,MAAM,OAASL,EAAOK,MAAM,MAC3D,MAAO,WAET,IAAIL,EAAOK,MAAM,QAAUL,EAAOK,MAAM,QAAUL,EAAOK,MAAM,QAAUL,EAAOK,MAAM,OAEpF,MADAL,GAAOS,YACA,OAET,IAAKT,EAAOK,MAAM,UAAYL,EAAOK,MAAM,UAAcL,EAAOK,MAAM,UAAYL,EAAOK,MAAM,SAC7F,MAAO,YAGXL,EAAOO,SAAS,QAChB,IAAIG,GAAMV,EAAOW,SACjB,OAAOC,GAAMC,eAAeH,GAAOE,EAAMF,GAAO,KAGlD,QAASI,GAASd,EAAQe,GACxB,OAAQA,EAAMC,OAAO,IAAMjB,GAAYC,EAAQe,GArDjD,GAAIH,KAwDJ,QACEK,WAAY,WAAY,OAAQD,YAChCE,MAAO,SAASlB,EAAQe,GACtB,MAAOD,GAASd,EAAQe,OAK9BlB,EAAWsB,WAAW,aAAc,SACpCtB,EAAWsB,WAAW,eAAgB,SACtCtB,EAAWsB,WAAW,sBAAuB","file":"../../../mode/troff/troff.js","sourcesContent":["// CodeMirror, copyright (c) by Marijn Haverbeke and others\n// Distributed under an MIT license: http://codemirror.net/LICENSE\n\n(function(mod) {\n  if (typeof exports == \"object\" && typeof module == \"object\")\n    mod(require(\"../../Coder\"));\n  else if (typeof define == \"function\" && define.amd)\n    define([\"../../Coder\"], mod);\n  else\n    mod(CodeMirror);\n})(function(CodeMirror) {\n\"use strict\";\n\nCodeMirror.defineMode('troff', function() {\n\n  var words = {};\n\n  function tokenBase(stream) {\n    if (stream.eatSpace()) return null;\n\n    var sol = stream.sol();\n    var ch = stream.next();\n\n    if (ch === '\\\\') {\n      if (stream.match('fB') || stream.match('fR') || stream.match('fI') ||\n          stream.match('u')  || stream.match('d')  ||\n          stream.match('%')  || stream.match('&')) {\n        return 'string';\n      }\n      if (stream.match('m[')) {\n        stream.skipTo(']');\n        stream.next();\n        return 'string';\n      }\n      if (stream.match('s+') || stream.match('s-')) {\n        stream.eatWhile(/[\\d-]/);\n        return 'string';\n      }\n      if (stream.match('\\(') || stream.match('*\\(')) {\n        stream.eatWhile(/[\\w-]/);\n        return 'string';\n      }\n      return 'string';\n    }\n    if (sol && (ch === '.' || ch === '\\'')) {\n      if (stream.eat('\\\\') && stream.eat('\\\"')) {\n        stream.skipToEnd();\n        return 'comment';\n      }\n    }\n    if (sol && ch === '.') {\n      if (stream.match('B ') || stream.match('I ') || stream.match('R ')) {\n        return 'attribute';\n      }\n      if (stream.match('TH ') || stream.match('SH ') || stream.match('SS ') || stream.match('HP ')) {\n        stream.skipToEnd();\n        return 'quote';\n      }\n      if ((stream.match(/[A-Z]/) && stream.match(/[A-Z]/)) || (stream.match(/[a-z]/) && stream.match(/[a-z]/))) {\n        return 'attribute';\n      }\n    }\n    stream.eatWhile(/[\\w-]/);\n    var cur = stream.current();\n    return words.hasOwnProperty(cur) ? words[cur] : null;\n  }\n\n  function tokenize(stream, state) {\n    return (state.tokens[0] || tokenBase) (stream, state);\n  };\n\n  return {\n    startState: function() {return {tokens:[]};},\n    token: function(stream, state) {\n      return tokenize(stream, state);\n    }\n  };\n});\n\nCodeMirror.defineMIME('text/troff', 'troff');\nCodeMirror.defineMIME('text/x-troff', 'troff');\nCodeMirror.defineMIME('application/x-troff', 'troff');\n\n});\n"]}