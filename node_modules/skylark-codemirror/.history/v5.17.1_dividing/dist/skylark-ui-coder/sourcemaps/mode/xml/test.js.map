{"version":3,"sources":["mode/xml/test.js"],"names":["MT","name","test","mode","Array","prototype","slice","call","arguments","mname","CodeMirror","getMode","indentUnit"],"mappings":";;;;;;;CAGA,WAEE,QAASA,GAAGC,GAAQC,KAAKC,KAAKF,EAAME,EAAMC,MAAMC,UAAUC,MAAMC,KAAKC,UAAW,GAAIC,GADpF,GAAIN,GAAOO,WAAWC,SAASC,WAAY,GAAI,OAAQH,EAAQ,KAG/DT,GAAG,WACA,0CACA,SACA,+CACA,4CAEHA,EAAG,cACA,0CACA,+CACA,0DAEHA,EAAG,UACA,2BACA,4CAEHA,EAAG,QACA,0CACA,wBACA,wBACA,4CAGHG,EAAOO,WAAWC,SAASC,WAAY,GAAI,aAE3CZ,EAAG,YACA,2CACA,qHACA,6CAEHA,EAAG,OACA,yCACA,8CACA,8CACA,2CAEHA,EAAG,YACA,qGAEHA,EAAG,eACA,wCACA,QACA","file":"../../../mode/xml/test.js","sourcesContent":["// CodeMirror, copyright (c) by Marijn Haverbeke and others\n// Distributed under an MIT license: http://codemirror.net/LICENSE\n\n(function() {\n  var mode = CodeMirror.getMode({indentUnit: 2}, \"xml\"), mname = \"xml\";\n  function MT(name) { test.mode(name, mode, Array.prototype.slice.call(arguments, 1), mname); }\n\n  MT(\"matching\",\n     \"[tag&bracket <][tag top][tag&bracket >]\",\n     \"  text\",\n     \"  [tag&bracket <][tag inner][tag&bracket />]\",\n     \"[tag&bracket </][tag top][tag&bracket >]\");\n\n  MT(\"nonmatching\",\n     \"[tag&bracket <][tag top][tag&bracket >]\",\n     \"  [tag&bracket <][tag inner][tag&bracket />]\",\n     \"  [tag&bracket </][tag&error tip][tag&bracket&error >]\");\n\n  MT(\"doctype\",\n     \"[meta <!doctype foobar>]\",\n     \"[tag&bracket <][tag top][tag&bracket />]\");\n\n  MT(\"cdata\",\n     \"[tag&bracket <][tag top][tag&bracket >]\",\n     \"  [atom <![CDATA[foo]\",\n     \"[atom barbazguh]]]]>]\",\n     \"[tag&bracket </][tag top][tag&bracket >]\");\n\n  // HTML tests\n  mode = CodeMirror.getMode({indentUnit: 2}, \"text/html\");\n\n  MT(\"selfclose\",\n     \"[tag&bracket <][tag html][tag&bracket >]\",\n     \"  [tag&bracket <][tag link] [attribute rel]=[string stylesheet] [attribute href]=[string \\\"/foobar\\\"][tag&bracket >]\",\n     \"[tag&bracket </][tag html][tag&bracket >]\");\n\n  MT(\"list\",\n     \"[tag&bracket <][tag ol][tag&bracket >]\",\n     \"  [tag&bracket <][tag li][tag&bracket >]one\",\n     \"  [tag&bracket <][tag li][tag&bracket >]two\",\n     \"[tag&bracket </][tag ol][tag&bracket >]\");\n\n  MT(\"valueless\",\n     \"[tag&bracket <][tag input] [attribute type]=[string checkbox] [attribute checked][tag&bracket />]\");\n\n  MT(\"pThenArticle\",\n     \"[tag&bracket <][tag p][tag&bracket >]\",\n     \"  foo\",\n     \"[tag&bracket <][tag article][tag&bracket >]bar\");\n\n})();\n"]}