{"version":3,"sources":["mode/xml/xml.js"],"names":["define","CodeMirror","htmlConfig","autoSelfClosers","area","base","br","col","command","embed","frame","hr","img","input","keygen","link","meta","param","source","track","wbr","menuitem","implicitlyClosed","dd","li","optgroup","option","p","rp","rt","tbody","td","tfoot","th","tr","contextGrabbers","dt","address","article","aside","blockquote","dir","div","dl","fieldset","footer","form","h1","h2","h3","h4","h5","h6","header","hgroup","menu","nav","ol","pre","section","table","ul","thead","doNotIndent","allowUnquoted","allowMissing","caseFold","xmlConfig","defineMode","editorConf","config_","inText","stream","state","chain","parser","tokenize","ch","next","eat","match","inBlock","eatWhile","doctype","type","inTag","ok","baseState","tagName","tagStart","test","inAttribute","stringStartCol","column","quote","closure","eol","isInAttribute","style","terminator","depth","Context","startOfLine","this","prev","context","indent","indented","config","hasOwnProperty","noIndent","popContext","maybePopContext","nextTagName","parentTagName","tagNameState","closeTagNameState","current","setStyle","attrState","matchClosing","closeState","closeStateErr","_stream","attrEqState","attrValueState","attrContinuedState","indentUnit","defaults","htmlMode","prop","isInText","startState","baseIndent","token","sol","indentation","eatSpace","textAfter","fullLine","Pass","length","multilineTagIndentPastTag","multilineTagIndentFactor","alignCDATA","tagAfter","exec","grabbers","electricInput","blockCommentStart","blockCommentEnd","configuration","helperType","skipAttribute","defineMIME","mimeModes","name"],"mappings":"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","file":"../../../mode/xml/xml.js","sourcesContent":["// CodeMirror, copyright (c) by Marijn Haverbeke and others\n// Distributed under an MIT license: http://codemirror.net/LICENSE\n\ndefine([\"../../lib/codemirror\"], function(CodeMirror) {\n\"use strict\";\n\nvar htmlConfig = {\n  autoSelfClosers: {'area': true, 'base': true, 'br': true, 'col': true, 'command': true,\n                    'embed': true, 'frame': true, 'hr': true, 'img': true, 'input': true,\n                    'keygen': true, 'link': true, 'meta': true, 'param': true, 'source': true,\n                    'track': true, 'wbr': true, 'menuitem': true},\n  implicitlyClosed: {'dd': true, 'li': true, 'optgroup': true, 'option': true, 'p': true,\n                     'rp': true, 'rt': true, 'tbody': true, 'td': true, 'tfoot': true,\n                     'th': true, 'tr': true},\n  contextGrabbers: {\n    'dd': {'dd': true, 'dt': true},\n    'dt': {'dd': true, 'dt': true},\n    'li': {'li': true},\n    'option': {'option': true, 'optgroup': true},\n    'optgroup': {'optgroup': true},\n    'p': {'address': true, 'article': true, 'aside': true, 'blockquote': true, 'dir': true,\n          'div': true, 'dl': true, 'fieldset': true, 'footer': true, 'form': true,\n          'h1': true, 'h2': true, 'h3': true, 'h4': true, 'h5': true, 'h6': true,\n          'header': true, 'hgroup': true, 'hr': true, 'menu': true, 'nav': true, 'ol': true,\n          'p': true, 'pre': true, 'section': true, 'table': true, 'ul': true},\n    'rp': {'rp': true, 'rt': true},\n    'rt': {'rp': true, 'rt': true},\n    'tbody': {'tbody': true, 'tfoot': true},\n    'td': {'td': true, 'th': true},\n    'tfoot': {'tbody': true},\n    'th': {'td': true, 'th': true},\n    'thead': {'tbody': true, 'tfoot': true},\n    'tr': {'tr': true}\n  },\n  doNotIndent: {\"pre\": true},\n  allowUnquoted: true,\n  allowMissing: true,\n  caseFold: true\n}\n\nvar xmlConfig = {\n  autoSelfClosers: {},\n  implicitlyClosed: {},\n  contextGrabbers: {},\n  doNotIndent: {},\n  allowUnquoted: false,\n  allowMissing: false,\n  caseFold: false\n}\n\nCodeMirror.defineMode(\"xml\", function(editorConf, config_) {\n  var indentUnit = editorConf.indentUnit\n  var config = {}\n  var defaults = config_.htmlMode ? htmlConfig : xmlConfig\n  for (var prop in defaults) config[prop] = defaults[prop]\n  for (var prop in config_) config[prop] = config_[prop]\n\n  // Return variables for tokenizers\n  var type, setStyle;\n\n  function inText(stream, state) {\n    function chain(parser) {\n      state.tokenize = parser;\n      return parser(stream, state);\n    }\n\n    var ch = stream.next();\n    if (ch == \"<\") {\n      if (stream.eat(\"!\")) {\n        if (stream.eat(\"[\")) {\n          if (stream.match(\"CDATA[\")) return chain(inBlock(\"atom\", \"]]>\"));\n          else return null;\n        } else if (stream.match(\"--\")) {\n          return chain(inBlock(\"comment\", \"-->\"));\n        } else if (stream.match(\"DOCTYPE\", true, true)) {\n          stream.eatWhile(/[\\w\\._\\-]/);\n          return chain(doctype(1));\n        } else {\n          return null;\n        }\n      } else if (stream.eat(\"?\")) {\n        stream.eatWhile(/[\\w\\._\\-]/);\n        state.tokenize = inBlock(\"meta\", \"?>\");\n        return \"meta\";\n      } else {\n        type = stream.eat(\"/\") ? \"closeTag\" : \"openTag\";\n        state.tokenize = inTag;\n        return \"tag bracket\";\n      }\n    } else if (ch == \"&\") {\n      var ok;\n      if (stream.eat(\"#\")) {\n        if (stream.eat(\"x\")) {\n          ok = stream.eatWhile(/[a-fA-F\\d]/) && stream.eat(\";\");\n        } else {\n          ok = stream.eatWhile(/[\\d]/) && stream.eat(\";\");\n        }\n      } else {\n        ok = stream.eatWhile(/[\\w\\.\\-:]/) && stream.eat(\";\");\n      }\n      return ok ? \"atom\" : \"error\";\n    } else {\n      stream.eatWhile(/[^&<]/);\n      return null;\n    }\n  }\n  inText.isInText = true;\n\n  function inTag(stream, state) {\n    var ch = stream.next();\n    if (ch == \">\" || (ch == \"/\" && stream.eat(\">\"))) {\n      state.tokenize = inText;\n      type = ch == \">\" ? \"endTag\" : \"selfcloseTag\";\n      return \"tag bracket\";\n    } else if (ch == \"=\") {\n      type = \"equals\";\n      return null;\n    } else if (ch == \"<\") {\n      state.tokenize = inText;\n      state.state = baseState;\n      state.tagName = state.tagStart = null;\n      var next = state.tokenize(stream, state);\n      return next ? next + \" tag error\" : \"tag error\";\n    } else if (/[\\'\\\"]/.test(ch)) {\n      state.tokenize = inAttribute(ch);\n      state.stringStartCol = stream.column();\n      return state.tokenize(stream, state);\n    } else {\n      stream.match(/^[^\\s\\u00a0=<>\\\"\\']*[^\\s\\u00a0=<>\\\"\\'\\/]/);\n      return \"word\";\n    }\n  }\n\n  function inAttribute(quote) {\n    var closure = function(stream, state) {\n      while (!stream.eol()) {\n        if (stream.next() == quote) {\n          state.tokenize = inTag;\n          break;\n        }\n      }\n      return \"string\";\n    };\n    closure.isInAttribute = true;\n    return closure;\n  }\n\n  function inBlock(style, terminator) {\n    return function(stream, state) {\n      while (!stream.eol()) {\n        if (stream.match(terminator)) {\n          state.tokenize = inText;\n          break;\n        }\n        stream.next();\n      }\n      return style;\n    };\n  }\n  function doctype(depth) {\n    return function(stream, state) {\n      var ch;\n      while ((ch = stream.next()) != null) {\n        if (ch == \"<\") {\n          state.tokenize = doctype(depth + 1);\n          return state.tokenize(stream, state);\n        } else if (ch == \">\") {\n          if (depth == 1) {\n            state.tokenize = inText;\n            break;\n          } else {\n            state.tokenize = doctype(depth - 1);\n            return state.tokenize(stream, state);\n          }\n        }\n      }\n      return \"meta\";\n    };\n  }\n\n  function Context(state, tagName, startOfLine) {\n    this.prev = state.context;\n    this.tagName = tagName;\n    this.indent = state.indented;\n    this.startOfLine = startOfLine;\n    if (config.doNotIndent.hasOwnProperty(tagName) || (state.context && state.context.noIndent))\n      this.noIndent = true;\n  }\n  function popContext(state) {\n    if (state.context) state.context = state.context.prev;\n  }\n  function maybePopContext(state, nextTagName) {\n    var parentTagName;\n    while (true) {\n      if (!state.context) {\n        return;\n      }\n      parentTagName = state.context.tagName;\n      if (!config.contextGrabbers.hasOwnProperty(parentTagName) ||\n          !config.contextGrabbers[parentTagName].hasOwnProperty(nextTagName)) {\n        return;\n      }\n      popContext(state);\n    }\n  }\n\n  function baseState(type, stream, state) {\n    if (type == \"openTag\") {\n      state.tagStart = stream.column();\n      return tagNameState;\n    } else if (type == \"closeTag\") {\n      return closeTagNameState;\n    } else {\n      return baseState;\n    }\n  }\n  function tagNameState(type, stream, state) {\n    if (type == \"word\") {\n      state.tagName = stream.current();\n      setStyle = \"tag\";\n      return attrState;\n    } else {\n      setStyle = \"error\";\n      return tagNameState;\n    }\n  }\n  function closeTagNameState(type, stream, state) {\n    if (type == \"word\") {\n      var tagName = stream.current();\n      if (state.context && state.context.tagName != tagName &&\n          config.implicitlyClosed.hasOwnProperty(state.context.tagName))\n        popContext(state);\n      if ((state.context && state.context.tagName == tagName) || config.matchClosing === false) {\n        setStyle = \"tag\";\n        return closeState;\n      } else {\n        setStyle = \"tag error\";\n        return closeStateErr;\n      }\n    } else {\n      setStyle = \"error\";\n      return closeStateErr;\n    }\n  }\n\n  function closeState(type, _stream, state) {\n    if (type != \"endTag\") {\n      setStyle = \"error\";\n      return closeState;\n    }\n    popContext(state);\n    return baseState;\n  }\n  function closeStateErr(type, stream, state) {\n    setStyle = \"error\";\n    return closeState(type, stream, state);\n  }\n\n  function attrState(type, _stream, state) {\n    if (type == \"word\") {\n      setStyle = \"attribute\";\n      return attrEqState;\n    } else if (type == \"endTag\" || type == \"selfcloseTag\") {\n      var tagName = state.tagName, tagStart = state.tagStart;\n      state.tagName = state.tagStart = null;\n      if (type == \"selfcloseTag\" ||\n          config.autoSelfClosers.hasOwnProperty(tagName)) {\n        maybePopContext(state, tagName);\n      } else {\n        maybePopContext(state, tagName);\n        state.context = new Context(state, tagName, tagStart == state.indented);\n      }\n      return baseState;\n    }\n    setStyle = \"error\";\n    return attrState;\n  }\n  function attrEqState(type, stream, state) {\n    if (type == \"equals\") return attrValueState;\n    if (!config.allowMissing) setStyle = \"error\";\n    return attrState(type, stream, state);\n  }\n  function attrValueState(type, stream, state) {\n    if (type == \"string\") return attrContinuedState;\n    if (type == \"word\" && config.allowUnquoted) {setStyle = \"string\"; return attrState;}\n    setStyle = \"error\";\n    return attrState(type, stream, state);\n  }\n  function attrContinuedState(type, stream, state) {\n    if (type == \"string\") return attrContinuedState;\n    return attrState(type, stream, state);\n  }\n\n  return {\n    startState: function(baseIndent) {\n      var state = {tokenize: inText,\n                   state: baseState,\n                   indented: baseIndent || 0,\n                   tagName: null, tagStart: null,\n                   context: null}\n      if (baseIndent != null) state.baseIndent = baseIndent\n      return state\n    },\n\n    token: function(stream, state) {\n      if (!state.tagName && stream.sol())\n        state.indented = stream.indentation();\n\n      if (stream.eatSpace()) return null;\n      type = null;\n      var style = state.tokenize(stream, state);\n      if ((style || type) && style != \"comment\") {\n        setStyle = null;\n        state.state = state.state(type || style, stream, state);\n        if (setStyle)\n          style = setStyle == \"error\" ? style + \" error\" : setStyle;\n      }\n      return style;\n    },\n\n    indent: function(state, textAfter, fullLine) {\n      var context = state.context;\n      // Indent multi-line strings (e.g. css).\n      if (state.tokenize.isInAttribute) {\n        if (state.tagStart == state.indented)\n          return state.stringStartCol + 1;\n        else\n          return state.indented + indentUnit;\n      }\n      if (context && context.noIndent) return CodeMirror.Pass;\n      if (state.tokenize != inTag && state.tokenize != inText)\n        return fullLine ? fullLine.match(/^(\\s*)/)[0].length : 0;\n      // Indent the starts of attribute names.\n      if (state.tagName) {\n        if (config.multilineTagIndentPastTag !== false)\n          return state.tagStart + state.tagName.length + 2;\n        else\n          return state.tagStart + indentUnit * (config.multilineTagIndentFactor || 1);\n      }\n      if (config.alignCDATA && /<!\\[CDATA\\[/.test(textAfter)) return 0;\n      var tagAfter = textAfter && /^<(\\/)?([\\w_:\\.-]*)/.exec(textAfter);\n      if (tagAfter && tagAfter[1]) { // Closing tag spotted\n        while (context) {\n          if (context.tagName == tagAfter[2]) {\n            context = context.prev;\n            break;\n          } else if (config.implicitlyClosed.hasOwnProperty(context.tagName)) {\n            context = context.prev;\n          } else {\n            break;\n          }\n        }\n      } else if (tagAfter) { // Opening tag spotted\n        while (context) {\n          var grabbers = config.contextGrabbers[context.tagName];\n          if (grabbers && grabbers.hasOwnProperty(tagAfter[2]))\n            context = context.prev;\n          else\n            break;\n        }\n      }\n      while (context && context.prev && !context.startOfLine)\n        context = context.prev;\n      if (context) return context.indent + indentUnit;\n      else return state.baseIndent || 0;\n    },\n\n    electricInput: /<\\/[\\s\\w:]+>$/,\n    blockCommentStart: \"<!--\",\n    blockCommentEnd: \"-->\",\n\n    configuration: config.htmlMode ? \"html\" : \"xml\",\n    helperType: config.htmlMode ? \"html\" : \"xml\",\n\n    skipAttribute: function(state) {\n      if (state.state == attrValueState)\n        state.state = attrState\n    }\n  };\n});\n\nCodeMirror.defineMIME(\"text/xml\", \"xml\");\nCodeMirror.defineMIME(\"application/xml\", \"xml\");\nif (!CodeMirror.mimeModes.hasOwnProperty(\"text/html\"))\n  CodeMirror.defineMIME(\"text/html\", {name: \"xml\", htmlMode: true});\n\n});\n"]}