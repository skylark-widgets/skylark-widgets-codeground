{"version":3,"sources":["primitives/display/focus.js"],"names":["define","dom","CoderCtor","partial","ensureFocus","cm","this","state","focused","display","input","focus","onFocus","delayBlurEvent","delayingBlurEvent","setTimeout","onBlur","options","readOnly","signal","addClass","wrapper","curOp","selForContextMenu","doc","sel","reset","webkit","receivedFocus","restartBlink","rmClass","clearInterval","blinker","shift"],"mappings":";;;;;;;AAAAA,QACE,cACA,gBACA,SAASC,EAAKC,GAGdA,EAAUC,SACRC,YAAc,WACZ,GAAIC,GAAKC,IAEJD,GAAGE,MAAMC,UACZH,EAAGI,QAAQC,MAAMC,QACjBN,EAAGO,YAIPC,eAAiB,WACf,GAAIR,GAAKC,IAETD,GAAGE,MAAMO,mBAAoB,EAC7BC,WAAW,WACLV,EAAGE,MAAMO,oBACXT,EAAGE,MAAMO,mBAAoB,EAC7BT,EAAGW,WAEJ,MAGLJ,QAAU,WACR,GAAIP,GAAKC,IACLD,GAAGE,MAAMO,oBACXT,EAAGE,MAAMO,mBAAoB,GAGJ,YAAvBT,EAAGY,QAAQC,WACVb,EAAGE,MAAMC,UACZH,EAAGc,OAAO,QAASd,GACnBA,EAAGE,MAAMC,SAAU,EACnBP,EAAImB,SAASf,EAAGI,QAAQY,QAAS,sBAI5BhB,EAAGiB,OAASjB,EAAGI,QAAQc,mBAAqBlB,EAAGmB,IAAIC,MACtDpB,EAAGI,QAAQC,MAAMgB,QACbC,QAAQZ,WAAW,WACrBV,EAAGI,QAAQC,MAAMgB,OAAM,IACtB,KAELrB,EAAGI,QAAQC,MAAMkB,iBAEnBvB,EAAGwB,iBAGLb,OAAS,WACP,GAAIX,GAAKC,IACLD,GAAGE,MAAMO,oBAITT,EAAGE,MAAMC,UACXW,OAAOd,EAAI,OAAQA,GACnBA,EAAGE,MAAMC,SAAU,EACnBP,EAAI6B,QAAQzB,EAAGI,QAAQY,QAAS,uBAElCU,cAAc1B,EAAGI,QAAQuB,SACzBjB,WAAW,WACJV,EAAGE,MAAMC,UAASH,EAAGI,QAAQwB,OAAQ,IACzC","file":"../../../primitives/display/focus.js","sourcesContent":["define([\r\n  \"../util/dom\",\r\n  \"../CoderCtor\"\r\n],function(dom, CoderCtor) {\r\n\r\n  // FOCUS/BLUR EVENTS\r\n  CoderCtor.partial({\r\n    ensureFocus : function () {\r\n      var cm = this;\r\n\r\n      if (!cm.state.focused) { \r\n        cm.display.input.focus(); \r\n        cm.onFocus(); \r\n      }\r\n    },\r\n\r\n    delayBlurEvent : function () {\r\n      var cm = this;\r\n\r\n      cm.state.delayingBlurEvent = true;\r\n      setTimeout(function() {\r\n        if (cm.state.delayingBlurEvent) {\r\n          cm.state.delayingBlurEvent = false;\r\n          cm.onBlur();\r\n        }\r\n      }, 100);\r\n    },\r\n\r\n    onFocus : function () {\r\n      var cm = this;\r\n      if (cm.state.delayingBlurEvent) {\r\n        cm.state.delayingBlurEvent = false;\r\n      }\r\n\r\n      if (cm.options.readOnly == \"nocursor\") return;\r\n      if (!cm.state.focused) {\r\n        cm.signal(\"focus\", cm);\r\n        cm.state.focused = true;\r\n        dom.addClass(cm.display.wrapper, \"CodeMirror-focused\");\r\n        // This test prevents this from firing when a context\r\n        // menu is closed (since the input reset would kill the\r\n        // select-all detection hack)\r\n        if (!cm.curOp && cm.display.selForContextMenu != cm.doc.sel) {\r\n          cm.display.input.reset();\r\n          if (webkit) setTimeout(function() { \r\n            cm.display.input.reset(true); \r\n          }, 20); // Issue #1730\r\n        }\r\n        cm.display.input.receivedFocus();\r\n      }\r\n      cm.restartBlink();\r\n    },\r\n    \r\n    onBlur : function () {\r\n      var cm = this;\r\n      if (cm.state.delayingBlurEvent) {\r\n        return;\r\n      }\r\n\r\n      if (cm.state.focused) {\r\n        signal(cm, \"blur\", cm);\r\n        cm.state.focused = false;\r\n        dom.rmClass(cm.display.wrapper, \"CodeMirror-focused\");\r\n      }\r\n      clearInterval(cm.display.blinker);\r\n      setTimeout(function() {\r\n        if (!cm.state.focused) cm.display.shift = false;\r\n      }, 150);\r\n    }\r\n\r\n  });\r\n\r\n});\r\n"]}