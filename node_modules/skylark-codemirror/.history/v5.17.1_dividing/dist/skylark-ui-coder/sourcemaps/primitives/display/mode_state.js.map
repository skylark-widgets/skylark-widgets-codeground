{"version":3,"sources":["primitives/display/mode_state.js"],"names":["define","CoderCtor","partial","loadMode","cm","this","doc","mode","CodeMirror","getMode","options","modeOption","resetModeState","iter","line","stateAfter","styles","frontier","first","startWorker","state","modeGen","curOp","regChange"],"mappings":";;;;;;;AAAAA,QACE,gBACA,SAASC,GAGTA,EAAUC,SACRC,SAAW,WACT,GAAIC,GAAKC,IACTD,GAAGE,IAAIC,KAAOC,WAAWC,QAAQL,EAAGM,QAASN,EAAGE,IAAIK,YACpDC,eAAeR,IAEjBQ,eAAiB,WACf,GAAIR,GAAKC,IAETD,GAAGE,IAAIO,KAAK,SAASC,GACfA,EAAKC,aAAYD,EAAKC,WAAa,MACnCD,EAAKE,SAAQF,EAAKE,OAAS,QAEjCZ,EAAGE,IAAIW,SAAWb,EAAGE,IAAIY,MACzBC,YAAYf,EAAI,KAChBA,EAAGgB,MAAMC,UACLjB,EAAGkB,OACLlB,EAAGmB","file":"../../../primitives/display/mode_state.js","sourcesContent":["define([\r\n  \"../CoderCtor\"\r\n],function(CoderCtor) {\r\n  // Used to get the editor into a consistent state again when options change.\r\n\r\n  CoderCtor.partial({\r\n    loadMode : function () {\r\n      var cm = this;\r\n      cm.doc.mode = CodeMirror.getMode(cm.options, cm.doc.modeOption);\r\n      resetModeState(cm);\r\n    },\r\n    resetModeState : function () {\r\n      var cm = this;\r\n\r\n      cm.doc.iter(function(line) {\r\n        if (line.stateAfter) line.stateAfter = null;\r\n        if (line.styles) line.styles = null;\r\n      });\r\n      cm.doc.frontier = cm.doc.first;\r\n      startWorker(cm, 100);\r\n      cm.state.modeGen++;\r\n      if (cm.curOp) {\r\n        cm.regChange();\r\n      }\r\n    }\r\n  });\r\n\r\n});\r\n\r\n"]}