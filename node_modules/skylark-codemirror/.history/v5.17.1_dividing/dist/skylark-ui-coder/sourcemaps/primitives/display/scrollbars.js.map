{"version":3,"sources":["primitives/display/scrollbars.js"],"names":["define","CoderCtor","NativeScrollbars","klass","_construct","place","scroll","cm","this","vert","dom","elt","horiz","on","clientHeight","scrollTop","clientWidth","scrollLeft","checkedZeroWidth","ie","ie_version","style","minHeight","minWidth","update","measure","needsH","scrollWidth","needsV","scrollHeight","sWidth","nativeBarWidth","display","bottom","totalHeight","viewHeight","firstChild","height","Math","max","right","left","barLeft","totalWidth","viewWidth","width","zeroWidthHack","setScrollLeft","pos","disableHoriz","enableZeroWidthBar","setScrollTop","disableVert","w","mac","mac_geMountainLion","pointerEvents","Delayed","bar","delay","maybeDisable","box","getBoundingClientRect","document","elementFromPoint","set","clear","parent","parentNode","removeChild","NullScrollbars","CodeMirror","scrollbarModel","native","null","partial","measureForScrollbars","d","gutterW","gutters","offsetWidth","docH","round","doc","paddingVert","scroller","wrapper","options","fixedGutter","docHeight","scrollGap","barHeight","gutterWidth","initScrollbars","scrollbars","addClass","rmClass","scrollbarStyle","node","insertBefore","scrollbarFiller","event","state","focused","setTimeout","input","focus","setAttribute","axis","updateScrollbars","startWidth","barWidth","startHeight","updateScrollbarsInner","i","lineWrapping","updateHeightsInViewport","s","tartHeight","sizes","sizer","paddingRight","paddingBottom","heightForcer","borderBottom","coverGutterNextToScrollbar","gutterFiller"],"mappings":";;;;;;;AAAAA,QACE,cACA,gBACA,SAASC,GAGT,GAAIC,GAAmBC,OACrBC,WAAa,SAAUC,EAAOC,EAAQC,GACpCC,KAAKD,GAAKA,CAEV,IAAIE,GAAOD,KAAKC,KAAOC,IAAIC,IAAI,OAAQD,IAAIC,IAAI,MAAO,KAAM,KAAM,mBAAoB,yBAClFC,EAAQJ,KAAKI,MAAQF,IAAIC,IAAI,OAAQD,IAAIC,IAAI,MAAO,KAAM,KAAM,kCAAmC,wBACvGN,GAAMI,GAAOJ,EAAMO,GAEnBC,GAAGJ,EAAM,SAAU,WACbA,EAAKK,cAAcR,EAAOG,EAAKM,UAAW,cAEhDF,GAAGD,EAAO,SAAU,WACdA,EAAMI,aAAaV,EAAOM,EAAMK,WAAY,gBAGlDT,KAAKU,kBAAmB,EAEpBC,IAAMC,WAAa,IAAGZ,KAAKI,MAAMS,MAAMC,UAAYd,KAAKC,KAAKY,MAAME,SAAW,SAGpFC,OAAQ,SAASC,GACf,GAAIC,GAASD,EAAQE,YAAcF,EAAQT,YAAc,EACrDY,EAASH,EAAQI,aAAeJ,EAAQX,aAAe,EACvDgB,EAASL,EAAQM,cAErB,IAAIH,EAAQ,CACVpB,KAAKC,KAAKY,MAAMW,QAAU,QAC1BxB,KAAKC,KAAKY,MAAMY,OAASP,EAASI,EAAS,KAAO,GAClD,IAAII,GAAcT,EAAQU,YAAcT,EAASI,EAAS,EAE1DtB,MAAKC,KAAK2B,WAAWf,MAAMgB,OACzBC,KAAKC,IAAI,EAAGd,EAAQI,aAAeJ,EAAQX,aAAeoB,GAAe,SAE3E1B,MAAKC,KAAKY,MAAMW,QAAU,GAC1BxB,KAAKC,KAAK2B,WAAWf,MAAMgB,OAAS,GAGtC,IAAIX,EAAQ,CACVlB,KAAKI,MAAMS,MAAMW,QAAU,QAC3BxB,KAAKI,MAAMS,MAAMmB,MAAQZ,EAASE,EAAS,KAAO,IAClDtB,KAAKI,MAAMS,MAAMoB,KAAOhB,EAAQiB,QAAU,IAC1C,IAAIC,GAAalB,EAAQmB,UAAYnB,EAAQiB,SAAWd,EAASE,EAAS,EAC1EtB,MAAKI,MAAMwB,WAAWf,MAAMwB,MACzBpB,EAAQE,YAAcF,EAAQT,YAAc2B,EAAc,SAE7DnC,MAAKI,MAAMS,MAAMW,QAAU,GAC3BxB,KAAKI,MAAMwB,WAAWf,MAAMwB,MAAQ,GAQtC,QALKrC,KAAKU,kBAAoBO,EAAQX,aAAe,IACrC,GAAVgB,GAAatB,KAAKsC,gBACtBtC,KAAKU,kBAAmB,IAGlBsB,MAAOZ,EAASE,EAAS,EAAGG,OAAQP,EAASI,EAAS,IAEhEiB,cAAe,SAASC,GAClBxC,KAAKI,MAAMK,YAAc+B,IAAKxC,KAAKI,MAAMK,WAAa+B,GACtDxC,KAAKyC,cAAczC,KAAK0C,mBAAmB1C,KAAKI,MAAOJ,KAAKyC,eAElEE,aAAc,SAASH,GACjBxC,KAAKC,KAAKM,WAAaiC,IAAKxC,KAAKC,KAAKM,UAAYiC,GAClDxC,KAAK4C,aAAa5C,KAAK0C,mBAAmB1C,KAAKC,KAAMD,KAAK4C,cAEhEN,cAAe,WACb,GAAIO,GAAIC,MAAQC,mBAAqB,OAAS,MAC9C/C,MAAKI,MAAMS,MAAMgB,OAAS7B,KAAKC,KAAKY,MAAMwB,MAAQQ,EAClD7C,KAAKI,MAAMS,MAAMmC,cAAgBhD,KAAKC,KAAKY,MAAMmC,cAAgB,OACjEhD,KAAKyC,aAAe,GAAIQ,SACxBjD,KAAK4C,YAAc,GAAIK,UAEzBP,mBAAoB,SAASQ,EAAKC,GAEhC,QAASC,KAOP,GAAIC,GAAMH,EAAII,wBACVnD,EAAMoD,SAASC,iBAAiBH,EAAIpB,KAAO,EAAGoB,EAAI5B,OAAS,EAC3DtB,IAAO+C,EAAKA,EAAIrC,MAAMmC,cAAgB,OACrCG,EAAMM,IAAI,IAAML,GAXvBF,EAAIrC,MAAMmC,cAAgB,OAa1BG,EAAMM,IAAI,IAAML,IAElBM,MAAO,WACL,GAAIC,GAAS3D,KAAKI,MAAMwD,UACxBD,GAAOE,YAAY7D,KAAKI,OACxBuD,EAAOE,YAAY7D,KAAKC,SAIxB6D,EAAiBnE,OACnBqB,OAAQ,WAAa,OAAQS,OAAQ,EAAGO,MAAO,IAC/CO,cAAe,aACfI,aAAc,aACde,MAAO,cAGTK,YAAWC,gBAAkBC,SAAUvE,EAAkBwE,OAAQJ,GAEjErE,EAAU0E,SAGRC,qBAAuB,WACrB,GAAIrE,GAAKC,KAELqE,EAAItE,EAAGyB,QAAS8C,EAAUD,EAAEE,QAAQC,YACpCC,EAAO3C,KAAK4C,MAAM3E,EAAG4E,IAAI9C,OAAS+C,YAAY7E,EAAGyB,SACrD,QACElB,aAAc+D,EAAEQ,SAASvE,aACzBqB,WAAY0C,EAAES,QAAQxE,aACtBa,YAAakD,EAAEQ,SAAS1D,YAAaX,YAAa6D,EAAEQ,SAASrE,YAC7D4B,UAAWiC,EAAES,QAAQtE,YACrB0B,QAASnC,EAAGgF,QAAQC,YAAcV,EAAU,EAC5CW,UAAWR,EACXpD,aAAcoD,EAAOS,UAAUnF,GAAMsE,EAAEc,UACvC5D,eAAgB8C,EAAE9C,eAClB6D,YAAad,IAIjBe,eAAiB,WACf,GAAItF,GAAKC,IAELD,GAAGyB,QAAQ8D,aACbvF,EAAGyB,QAAQ8D,WAAW5B,QAClB3D,EAAGyB,QAAQ8D,WAAWC,UACxBC,QAAQzF,EAAGyB,QAAQsD,QAAS/E,EAAGyB,QAAQ8D,WAAWC,WAGtDxF,EAAGyB,QAAQ8D,WAAa,GAAIvB,YAAWC,eAAejE,EAAGgF,QAAQU,gBAAgB,SAASC,GACxF3F,EAAGyB,QAAQsD,QAAQa,aAAaD,EAAM3F,EAAGyB,QAAQoE,iBAEjDC,MAAMxF,GAAGqF,EAAM,YAAa,WACtB3F,EAAG+F,MAAMC,SAASC,WAAW,WAAajG,EAAGyB,QAAQyE,MAAMC,SAAY,KAE7ER,EAAKS,aAAa,iBAAkB,SACnC,SAAS3D,EAAK4D,GACH,cAARA,EACFrG,EAAGwC,cAAcC,GAEjBzC,EAAG4C,aAAaH,IAEjBzC,GAECA,EAAGyB,QAAQ8D,WAAWC,UACxBrF,IAAIqF,SAASxF,EAAGyB,QAAQsD,QAAS/E,EAAGyB,QAAQ8D,WAAWC,WAI3Dc,iBAAmB,SAASpF,GAC1B,GAAIlB,GAAKC,IAEJiB,KACHA,EAAUlB,EAAGqE,uBAGf,IAAIkC,GAAavG,EAAGyB,QAAQ+E,SAC1BC,EAAczG,EAAGyB,QAAQ2D,SAE3BpF,GAAG0G,sBAAsBxF,EACzB,KAAK,GAAIyF,GAAI,EAAGA,EAAI,GAAKJ,GAAcvG,EAAGyB,QAAQ+E,UAAYC,GAAezG,EAAGyB,QAAQ2D,UAAWuB,IAC7FJ,GAAcvG,EAAGyB,QAAQ+E,UAAYxG,EAAGgF,QAAQ4B,cAClD5G,EAAG6G,0BAEL7G,EAAG0G,sBAAsB1G,EAAGqE,wBAC5BkC,EAAavG,EAAGyB,QAAQ+E,SAAUM,EAClCC,WAAa/G,EAAGyB,QAAQ2D,WAM5BsB,sBAAwB,SAAUxF,GAChC,GAAIlB,GAAKC,KAELqE,EAAItE,EAAGyB,QACPuF,EAAQ1C,EAAEiB,WAAWtE,OAAOC,EAEhCoD,GAAE2C,MAAMnG,MAAMoG,cAAgB5C,EAAEkC,SAAWQ,EAAM/E,OAAS,KAC1DqC,EAAE2C,MAAMnG,MAAMqG,eAAiB7C,EAAEc,UAAY4B,EAAMtF,QAAU,KAC7D4C,EAAE8C,aAAatG,MAAMuG,aAAeL,EAAMtF,OAAS,uBAE/CsF,EAAM/E,OAAS+E,EAAMtF,QACvB4C,EAAEuB,gBAAgB/E,MAAMW,QAAU,QAClC6C,EAAEuB,gBAAgB/E,MAAMgB,OAASkF,EAAMtF,OAAS,KAChD4C,EAAEuB,gBAAgB/E,MAAMwB,MAAQ0E,EAAM/E,MAAQ,MACzCqC,EAAEuB,gBAAgB/E,MAAMW,QAAU,GACrCuF,EAAMtF,QAAU1B,EAAGgF,QAAQsC,4BAA8BtH,EAAGgF,QAAQC,aACtEX,EAAEiD,aAAazG,MAAMW,QAAU,QAC/B6C,EAAEiD,aAAazG,MAAMgB,OAASkF,EAAMtF,OAAS,KAC7C4C,EAAEiD,aAAazG,MAAMwB,MAAQpB,EAAQmE,YAAc,MAC9Cf,EAAEiD,aAAazG,MAAMW,QAAU","file":"../../../primitives/display/scrollbars.js","sourcesContent":["define([\r\n  \"../util/dom\",\r\n  \"../CoderCtor\"\r\n],function(CoderCtor) {\r\n  // SCROLLBARS\r\n\r\n  var NativeScrollbars = klass({\r\n    _construct : function (place, scroll, cm) {\r\n      this.cm = cm;\r\n      \r\n      var vert = this.vert = dom.elt(\"div\", [dom.elt(\"div\", null, null, \"min-width: 1px\")], \"CodeMirror-vscrollbar\");\r\n      var horiz = this.horiz = dom.elt(\"div\", [dom.elt(\"div\", null, null, \"height: 100%; min-height: 1px\")], \"CodeMirror-hscrollbar\");\r\n      place(vert); place(horiz);\r\n\r\n      on(vert, \"scroll\", function() {\r\n        if (vert.clientHeight) scroll(vert.scrollTop, \"vertical\");\r\n      });\r\n      on(horiz, \"scroll\", function() {\r\n        if (horiz.clientWidth) scroll(horiz.scrollLeft, \"horizontal\");\r\n      });\r\n\r\n      this.checkedZeroWidth = false;\r\n      // Need to set a minimum width to see the scrollbar on IE7 (but must not set it on IE8).\r\n      if (ie && ie_version < 8) this.horiz.style.minHeight = this.vert.style.minWidth = \"18px\";\r\n    },\r\n\r\n    update: function(measure) {\r\n      var needsH = measure.scrollWidth > measure.clientWidth + 1;\r\n      var needsV = measure.scrollHeight > measure.clientHeight + 1;\r\n      var sWidth = measure.nativeBarWidth;\r\n\r\n      if (needsV) {\r\n        this.vert.style.display = \"block\";\r\n        this.vert.style.bottom = needsH ? sWidth + \"px\" : \"0\";\r\n        var totalHeight = measure.viewHeight - (needsH ? sWidth : 0);\r\n        // A bug in IE8 can cause this value to be negative, so guard it.\r\n        this.vert.firstChild.style.height =\r\n          Math.max(0, measure.scrollHeight - measure.clientHeight + totalHeight) + \"px\";\r\n      } else {\r\n        this.vert.style.display = \"\";\r\n        this.vert.firstChild.style.height = \"0\";\r\n      }\r\n\r\n      if (needsH) {\r\n        this.horiz.style.display = \"block\";\r\n        this.horiz.style.right = needsV ? sWidth + \"px\" : \"0\";\r\n        this.horiz.style.left = measure.barLeft + \"px\";\r\n        var totalWidth = measure.viewWidth - measure.barLeft - (needsV ? sWidth : 0);\r\n        this.horiz.firstChild.style.width =\r\n          (measure.scrollWidth - measure.clientWidth + totalWidth) + \"px\";\r\n      } else {\r\n        this.horiz.style.display = \"\";\r\n        this.horiz.firstChild.style.width = \"0\";\r\n      }\r\n\r\n      if (!this.checkedZeroWidth && measure.clientHeight > 0) {\r\n        if (sWidth == 0) this.zeroWidthHack();\r\n        this.checkedZeroWidth = true;\r\n      }\r\n\r\n      return {right: needsV ? sWidth : 0, bottom: needsH ? sWidth : 0};\r\n    },\r\n    setScrollLeft: function(pos) {\r\n      if (this.horiz.scrollLeft != pos) this.horiz.scrollLeft = pos;\r\n      if (this.disableHoriz) this.enableZeroWidthBar(this.horiz, this.disableHoriz);\r\n    },\r\n    setScrollTop: function(pos) {\r\n      if (this.vert.scrollTop != pos) this.vert.scrollTop = pos;\r\n      if (this.disableVert) this.enableZeroWidthBar(this.vert, this.disableVert);\r\n    },\r\n    zeroWidthHack: function() {\r\n      var w = mac && !mac_geMountainLion ? \"12px\" : \"18px\";\r\n      this.horiz.style.height = this.vert.style.width = w;\r\n      this.horiz.style.pointerEvents = this.vert.style.pointerEvents = \"none\";\r\n      this.disableHoriz = new Delayed;\r\n      this.disableVert = new Delayed;\r\n    },\r\n    enableZeroWidthBar: function(bar, delay) {\r\n      bar.style.pointerEvents = \"auto\";\r\n      function maybeDisable() {\r\n        // To find out whether the scrollbar is still visible, we\r\n        // check whether the element under the pixel in the bottom\r\n        // left corner of the scrollbar box is the scrollbar box\r\n        // itself (when the bar is still visible) or its filler child\r\n        // (when the bar is hidden). If it is still visible, we keep\r\n        // it enabled, if it's hidden, we disable pointer events.\r\n        var box = bar.getBoundingClientRect();\r\n        var elt = document.elementFromPoint(box.left + 1, box.bottom - 1);\r\n        if (elt != bar) bar.style.pointerEvents = \"none\";\r\n        else delay.set(1000, maybeDisable);\r\n      }\r\n      delay.set(1000, maybeDisable);\r\n    },\r\n    clear: function() {\r\n      var parent = this.horiz.parentNode;\r\n      parent.removeChild(this.horiz);\r\n      parent.removeChild(this.vert);\r\n    }\r\n  });\r\n\r\n  var NullScrollbars = klass({\r\n    update: function() { return {bottom: 0, right: 0}; },\r\n    setScrollLeft: function() {},\r\n    setScrollTop: function() {},\r\n    clear: function() {}\r\n  });\r\n\r\n  CodeMirror.scrollbarModel = {\"native\": NativeScrollbars, \"null\": NullScrollbars};\r\n\r\n  CoderCtor.partial({\r\n    // Prepare DOM reads needed to update the scrollbars. Done in one\r\n    // shot to minimize update/measure roundtrips.\r\n    measureForScrollbars : function () {\r\n      var cm = this;\r\n\r\n      var d = cm.display, gutterW = d.gutters.offsetWidth;\r\n      var docH = Math.round(cm.doc.height + paddingVert(cm.display));\r\n      return {\r\n        clientHeight: d.scroller.clientHeight,\r\n        viewHeight: d.wrapper.clientHeight,\r\n        scrollWidth: d.scroller.scrollWidth, clientWidth: d.scroller.clientWidth,\r\n        viewWidth: d.wrapper.clientWidth,\r\n        barLeft: cm.options.fixedGutter ? gutterW : 0,\r\n        docHeight: docH,\r\n        scrollHeight: docH + scrollGap(cm) + d.barHeight,\r\n        nativeBarWidth: d.nativeBarWidth,\r\n        gutterWidth: gutterW\r\n      };\r\n    },\r\n\r\n    initScrollbars : function () {\r\n      var cm = this;\r\n\r\n      if (cm.display.scrollbars) {\r\n        cm.display.scrollbars.clear();\r\n        if (cm.display.scrollbars.addClass)\r\n          rmClass(cm.display.wrapper, cm.display.scrollbars.addClass);\r\n      }\r\n\r\n      cm.display.scrollbars = new CodeMirror.scrollbarModel[cm.options.scrollbarStyle](function(node) {\r\n        cm.display.wrapper.insertBefore(node, cm.display.scrollbarFiller);\r\n        // Prevent clicks in the scrollbars from killing focus\r\n        event.on(node, \"mousedown\", function() {\r\n          if (cm.state.focused) setTimeout(function() { cm.display.input.focus(); }, 0);\r\n        });\r\n        node.setAttribute(\"cm-not-content\", \"true\");\r\n      }, function(pos, axis) {\r\n        if (axis == \"horizontal\") {\r\n          cm.setScrollLeft(pos);\r\n        } else {\r\n          cm.setScrollTop(pos);\r\n        }\r\n      }, cm);\r\n\r\n      if (cm.display.scrollbars.addClass) {\r\n        dom.addClass(cm.display.wrapper, cm.display.scrollbars.addClass);\r\n      }\r\n    },\r\n\r\n    updateScrollbars : function(measure) {\r\n      var cm = this;\r\n\r\n      if (!measure) {\r\n        measure = cm.measureForScrollbars()\r\n      };\r\n\r\n      var startWidth = cm.display.barWidth, \r\n        startHeight = cm.display.barHeight;\r\n      \r\n      cm.updateScrollbarsInner(measure);\r\n      for (var i = 0; i < 4 && startWidth != cm.display.barWidth || startHeight != cm.display.barHeight; i++) {\r\n        if (startWidth != cm.display.barWidth && cm.options.lineWrapping) {\r\n          cm.updateHeightsInViewport();\r\n        }\r\n        cm.updateScrollbarsInner(cm.measureForScrollbars());\r\n        startWidth = cm.display.barWidth; s\r\n        tartHeight = cm.display.barHeight;\r\n      }\r\n    },\r\n\r\n    // Re-synchronize the fake scrollbars with the actual size of the\r\n    // content.\r\n    updateScrollbarsInner : function (measure) {\r\n      var cm = this;\r\n\r\n      var d = cm.display;\r\n      var sizes = d.scrollbars.update(measure);\r\n\r\n      d.sizer.style.paddingRight = (d.barWidth = sizes.right) + \"px\";\r\n      d.sizer.style.paddingBottom = (d.barHeight = sizes.bottom) + \"px\";\r\n      d.heightForcer.style.borderBottom = sizes.bottom + \"px solid transparent\"\r\n\r\n      if (sizes.right && sizes.bottom) {\r\n        d.scrollbarFiller.style.display = \"block\";\r\n        d.scrollbarFiller.style.height = sizes.bottom + \"px\";\r\n        d.scrollbarFiller.style.width = sizes.right + \"px\";\r\n      } else d.scrollbarFiller.style.display = \"\";\r\n      if (sizes.bottom && cm.options.coverGutterNextToScrollbar && cm.options.fixedGutter) {\r\n        d.gutterFiller.style.display = \"block\";\r\n        d.gutterFiller.style.height = sizes.bottom + \"px\";\r\n        d.gutterFiller.style.width = measure.gutterWidth + \"px\";\r\n      } else d.gutterFiller.style.display = \"\";\r\n    }\r\n\r\n  });\r\n\r\n});\r\n"]}