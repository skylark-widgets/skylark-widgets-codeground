{"version":3,"sources":["primitives/edit/commands.js"],"names":["define","CoderCtor","CodeMirror","commands","selectAll","cm","setSelection","Pos","firstLine","lastLine","sel_dontScroll","singleSelection","getCursor","killLine","deleteNearSelection","range","empty","len","getLine","doc","head","line","text","length","ch","from","to","deleteLine","clipPos","delLineLeft","delWrappedLineLeft","top","charCoords","leftPos","coordsChar","left","delWrappedLineRight","rightPos","display","lineDiv","offsetWidth","undo","redo","undoSelection","redoSelection","goDocStart","extendSelection","goDocEnd","goLineStart","extendSelectionsBy","lineStart","origin","bias","goLineStartSmart","lineStartSmart","goLineEnd","lineEnd","goLineRight","sel_move","goLineLeft","goLineLeftSmart","pos","search","goLineUp","moveV","goLineDown","goPageUp","goPageDown","goCharLeft","moveH","goCharRight","goColumnLeft","goColumnRight","goWordLeft","goGroupRight","goGroupLeft","goWordRight","delCharBefore","deleteH","delCharAfter","delWordBefore","delWordAfter","delGroupBefore","delGroupAfter","indentAuto","indentSelection","indentMore","indentLess","insertTab","replaceSelection","insertSoftTab","spaces","ranges","listSelections","tabSize","options","i","col","countColumn","push","spaceStr","replaceSelections","defaultTab","somethingSelected","execCommand","transposeChars","runInOp","newSel","cur","replaceRange","charAt","first","prev","lineSeparator","Range","setSelections","newlineAndIndent","anchor","indentLine","ensureCursorVisible","openLine","toggleOverwrite"],"mappings":"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","file":"../../../primitives/edit/commands.js","sourcesContent":["define([\r\n  \"../CoderCtor\"\r\n],function(CoderCtor) {\r\n  // STANDARD COMMANDS\r\n\r\n  // Commands are parameter-less actions that can be performed on an\r\n  // editor, mostly used for keybindings.\r\n  var commands = CodeMirror.commands = {\r\n    selectAll: function(cm) {\r\n      cm.setSelection(Pos(cm.firstLine(), 0), Pos(cm.lastLine()), sel_dontScroll);\r\n    },\r\n    \r\n    singleSelection: function(cm) {\r\n      cm.setSelection(cm.getCursor(\"anchor\"), cm.getCursor(\"head\"), sel_dontScroll);\r\n    },\r\n    \r\n    killLine: function(cm) {\r\n      cm.deleteNearSelection(function(range) {\r\n        if (range.empty()) {\r\n          var len = getLine(cm.doc, range.head.line).text.length;\r\n          if (range.head.ch == len && range.head.line < cm.lastLine())\r\n            return {from: range.head, to: Pos(range.head.line + 1, 0)};\r\n          else\r\n            return {from: range.head, to: Pos(range.head.line, len)};\r\n        } else {\r\n          return {from: range.from(), to: range.to()};\r\n        }\r\n      });\r\n    },\r\n    deleteLine: function(cm) {\r\n      cm.deleteNearSelection(function(range) {\r\n        return {from: Pos(range.from().line, 0),\r\n                to: clipPos(cm.doc, Pos(range.to().line + 1, 0))};\r\n      });\r\n    },\r\n    delLineLeft: function(cm) {\r\n      cm.deleteNearSelection(function(range) {\r\n        return {from: Pos(range.from().line, 0), to: range.from()};\r\n      });\r\n    },\r\n    delWrappedLineLeft: function(cm) {\r\n      cm.deleteNearSelection(function(range) {\r\n        var top = cm.charCoords(range.head, \"div\").top + 5;\r\n        var leftPos = cm.coordsChar({left: 0, top: top}, \"div\");\r\n        return {from: leftPos, to: range.from()};\r\n      });\r\n    },\r\n    delWrappedLineRight: function(cm) {\r\n      cm.deleteNearSelection(function(range) {\r\n        var top = cm.charCoords(range.head, \"div\").top + 5;\r\n        var rightPos = cm.coordsChar({left: cm.display.lineDiv.offsetWidth + 100, top: top}, \"div\");\r\n        return {from: range.from(), to: rightPos };\r\n      });\r\n    },\r\n    undo: function(cm) {cm.undo();},\r\n    redo: function(cm) {cm.redo();},\r\n    undoSelection: function(cm) {cm.undoSelection();},\r\n    redoSelection: function(cm) {cm.redoSelection();},\r\n    goDocStart: function(cm) {cm.extendSelection(Pos(cm.firstLine(), 0));},\r\n    goDocEnd: function(cm) {cm.extendSelection(Pos(cm.lastLine()));},\r\n    goLineStart: function(cm) {\r\n      cm.extendSelectionsBy(function(range) { return lineStart(cm, range.head.line); },\r\n                            {origin: \"+move\", bias: 1});\r\n    },\r\n    goLineStartSmart: function(cm) {\r\n      cm.extendSelectionsBy(function(range) {\r\n        return lineStartSmart(cm, range.head);\r\n      }, {origin: \"+move\", bias: 1});\r\n    },\r\n    goLineEnd: function(cm) {\r\n      cm.extendSelectionsBy(function(range) { return lineEnd(cm, range.head.line); },\r\n                            {origin: \"+move\", bias: -1});\r\n    },\r\n    goLineRight: function(cm) {\r\n      cm.extendSelectionsBy(function(range) {\r\n        var top = cm.charCoords(range.head, \"div\").top + 5;\r\n        return cm.coordsChar({left: cm.display.lineDiv.offsetWidth + 100, top: top}, \"div\");\r\n      }, sel_move);\r\n    },\r\n    goLineLeft: function(cm) {\r\n      cm.extendSelectionsBy(function(range) {\r\n        var top = cm.charCoords(range.head, \"div\").top + 5;\r\n        return cm.coordsChar({left: 0, top: top}, \"div\");\r\n      }, sel_move);\r\n    },\r\n    goLineLeftSmart: function(cm) {\r\n      cm.extendSelectionsBy(function(range) {\r\n        var top = cm.charCoords(range.head, \"div\").top + 5;\r\n        var pos = cm.coordsChar({left: 0, top: top}, \"div\");\r\n        if (pos.ch < cm.getLine(pos.line).search(/\\S/)) return lineStartSmart(cm, range.head);\r\n        return pos;\r\n      }, sel_move);\r\n    },\r\n    goLineUp: function(cm) {cm.moveV(-1, \"line\");},\r\n    goLineDown: function(cm) {cm.moveV(1, \"line\");},\r\n    goPageUp: function(cm) {cm.moveV(-1, \"page\");},\r\n    goPageDown: function(cm) {cm.moveV(1, \"page\");},\r\n    goCharLeft: function(cm) {cm.moveH(-1, \"char\");},\r\n    goCharRight: function(cm) {cm.moveH(1, \"char\");},\r\n    goColumnLeft: function(cm) {cm.moveH(-1, \"column\");},\r\n    goColumnRight: function(cm) {cm.moveH(1, \"column\");},\r\n    goWordLeft: function(cm) {cm.moveH(-1, \"word\");},\r\n    goGroupRight: function(cm) {cm.moveH(1, \"group\");},\r\n    goGroupLeft: function(cm) {cm.moveH(-1, \"group\");},\r\n    goWordRight: function(cm) {cm.moveH(1, \"word\");},\r\n    delCharBefore: function(cm) {cm.deleteH(-1, \"char\");},\r\n    delCharAfter: function(cm) {cm.deleteH(1, \"char\");},\r\n    delWordBefore: function(cm) {cm.deleteH(-1, \"word\");},\r\n    delWordAfter: function(cm) {cm.deleteH(1, \"word\");},\r\n    delGroupBefore: function(cm) {cm.deleteH(-1, \"group\");},\r\n    delGroupAfter: function(cm) {cm.deleteH(1, \"group\");},\r\n    indentAuto: function(cm) {cm.indentSelection(\"smart\");},\r\n    indentMore: function(cm) {cm.indentSelection(\"add\");},\r\n    indentLess: function(cm) {cm.indentSelection(\"subtract\");},\r\n    insertTab: function(cm) {cm.replaceSelection(\"\\t\");},\r\n    insertSoftTab: function(cm) {\r\n      var spaces = [], ranges = cm.listSelections(), tabSize = cm.options.tabSize;\r\n      for (var i = 0; i < ranges.length; i++) {\r\n        var pos = ranges[i].from();\r\n        var col = countColumn(cm.getLine(pos.line), pos.ch, tabSize);\r\n        spaces.push(spaceStr(tabSize - col % tabSize));\r\n      }\r\n      cm.replaceSelections(spaces);\r\n    },\r\n    defaultTab: function(cm) {\r\n      if (cm.somethingSelected()) cm.indentSelection(\"add\");\r\n      else cm.execCommand(\"insertTab\");\r\n    },\r\n    transposeChars: function(cm) {\r\n      runInOp(cm, function() {\r\n        var ranges = cm.listSelections(), newSel = [];\r\n        for (var i = 0; i < ranges.length; i++) {\r\n          var cur = ranges[i].head, line = getLine(cm.doc, cur.line).text;\r\n          if (line) {\r\n            if (cur.ch == line.length) cur = new Pos(cur.line, cur.ch - 1);\r\n            if (cur.ch > 0) {\r\n              cur = new Pos(cur.line, cur.ch + 1);\r\n              cm.replaceRange(line.charAt(cur.ch - 1) + line.charAt(cur.ch - 2),\r\n                              Pos(cur.line, cur.ch - 2), cur, \"+transpose\");\r\n            } else if (cur.line > cm.doc.first) {\r\n              var prev = getLine(cm.doc, cur.line - 1).text;\r\n              if (prev)\r\n                cm.replaceRange(line.charAt(0) + cm.doc.lineSeparator() +\r\n                                prev.charAt(prev.length - 1),\r\n                                Pos(cur.line - 1, prev.length - 1), Pos(cur.line, 1), \"+transpose\");\r\n            }\r\n          }\r\n          newSel.push(new Range(cur, cur));\r\n        }\r\n        cm.setSelections(newSel);\r\n      });\r\n    },\r\n    newlineAndIndent: function(cm) {\r\n      runInOp(cm, function() {\r\n        var len = cm.listSelections().length;\r\n        for (var i = 0; i < len; i++) {\r\n          var range = cm.listSelections()[i];\r\n          cm.replaceRange(cm.doc.lineSeparator(), range.anchor, range.head, \"+input\");\r\n          cm.indentLine(range.from().line + 1, null, true);\r\n        }\r\n        ensureCursorVisible(cm);\r\n      });\r\n    },\r\n    openLine: function(cm) {cm.replaceSelection(\"\\n\", \"start\")},\r\n    toggleOverwrite: function(cm) {cm.toggleOverwrite();}\r\n  };\r\n\r\n\r\n});\r\n"]}