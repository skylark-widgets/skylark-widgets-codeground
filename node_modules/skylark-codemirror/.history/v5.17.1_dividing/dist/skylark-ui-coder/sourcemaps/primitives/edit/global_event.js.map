{"version":3,"sources":["primitives/edit/global_event.js"],"names":["define","CoderCtor","partial","onResize","cm","this","d","display","lastWrapHeight","wrapper","clientHeight","lastWrapWidth","clientWidth","cachedCharWidth","cachedTextHeight","cachedPaddingH","scrollbarsClipped","setSize"],"mappings":";;;;;;;AAAAA,QACE,gBACA,SAASC,GAyCTA,EAAUC,SAGRC,SAAW,WACT,GAAIC,GAAKC,KAELC,EAAIF,EAAGG,OACPD,GAAEE,gBAAkBF,EAAEG,QAAQC,cAAgBJ,EAAEK,eAAiBL,EAAEG,QAAQG,cAG/EN,EAAEO,gBAAkBP,EAAEQ,iBAAmBR,EAAES,eAAiB,KAC5DT,EAAEU,mBAAoB,EACtBZ,EAAGa","file":"../../../primitives/edit/global_event.js","sourcesContent":["define([\r\n  \"../CoderCtor\"\r\n],function(CoderCtor) {\r\n  // WINDOW-WIDE EVENTS\r\n\r\n  // These must be handled carefully, because naively registering a\r\n  // handler for each editor will cause the editors to never be\r\n  // garbage collected.\r\n\r\n  function forEachCodeMirror(f) {\r\n    if (!document.body.getElementsByClassName) return;\r\n    var byClass = document.body.getElementsByClassName(\"CodeMirror\");\r\n    for (var i = 0; i < byClass.length; i++) {\r\n      var cm = byClass[i].CodeMirror;\r\n      if (cm) f(cm);\r\n    }\r\n  }\r\n\r\n  var globalsRegistered = false;\r\n  function ensureGlobalHandlers() {\r\n    if (globalsRegistered) return;\r\n    registerGlobalHandlers();\r\n    globalsRegistered = true;\r\n  }\r\n  function registerGlobalHandlers() {\r\n    // When the window resizes, we need to refresh active editors.\r\n    var resizeTimer;\r\n    on(window, \"resize\", function() {\r\n      if (resizeTimer == null) resizeTimer = setTimeout(function() {\r\n        resizeTimer = null;\r\n        forEachCodeMirror(function(cm){\r\n          cm.onResize();\r\n        });\r\n      }, 100);\r\n    });\r\n    // When the window loses focus, we want to show the editor as blurred\r\n    on(window, \"blur\", function() {\r\n      forEachCodeMirror(function(cm){\r\n        cm.onBlur();\r\n      });\r\n    });\r\n  }\r\n\r\n  CoderCtor.partial({\r\n\r\n    // Called when the window resizes\r\n    onResize : function () {\r\n      var cm = this;\r\n\r\n      var d = cm.display;\r\n      if (d.lastWrapHeight == d.wrapper.clientHeight && d.lastWrapWidth == d.wrapper.clientWidth)\r\n        return;\r\n      // Might be a text scaling operation, clear size caches.\r\n      d.cachedCharWidth = d.cachedTextHeight = d.cachedPaddingH = null;\r\n      d.scrollbarsClipped = false;\r\n      cm.setSize();\r\n    }\r\n  });\r\n\r\n});\r\n"]}