{"version":3,"sources":["primitives/edit/options.js"],"names":["define","dom","CoderCtor","setGuttersForLineNumbers","options","found","indexOf","gutters","lineNumbers","concat","slice","splice","dragDropChanged","cm","value","old","wasOn","CodeMirror","Init","funcs","display","dragFunctions","toggle","on","off","scroller","start","enter","over","leave","drop","wrappingChanged","lineWrapping","addClass","wrapper","sizer","style","minWidth","sizerWidth","rmClass","findMaxLine","estimateLineHeights","regChange","clearCaches","setTimeout","updateScrollbars","guttersChanged","updateGutters","alignHorizontally","option","name","deflt","handle","notOnInit","defaults","optionHandlers","val","toString","setValue","doc","modeOption","loadMode","resetModeState","lineSep","newBreaks","lineNo","first","iter","line","pos","text","length","push","Pos","i","replaceRange","ch","state","specialChars","RegExp","source","test","refresh","defaultSpecialCharPlaceholder","mobile","Error","windows","themeChanged","next","getKeyMap","prev","detach","attach","left","compensateForHScroll","initScrollbars","scrollbars","setScrollTop","scrollTop","setScrollLeft","scrollLeft","integer","updateSelection","onBlur","input","blur","disabled","readOnlyChanged","reset","history","undoDepth","resetPosition","getField","tabIndex"],"mappings":"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","file":"../../../primitives/edit/options.js","sourcesContent":["define([\r\n  \"../util/dom\",\r\n  \"../CoderCtor\"\r\n],function(dom,CoderCtor) {\r\n\r\n  // Make sure the gutters options contains the element\r\n  // \"CodeMirror-linenumbers\" when the lineNumbers option is true.\r\n  function setGuttersForLineNumbers(options) {\r\n    var found = indexOf(options.gutters, \"CodeMirror-linenumbers\");\r\n    if (found == -1 && options.lineNumbers) {\r\n      options.gutters = options.gutters.concat([\"CodeMirror-linenumbers\"]);\r\n    } else if (found > -1 && !options.lineNumbers) {\r\n      options.gutters = options.gutters.slice(0);\r\n      options.gutters.splice(found, 1);\r\n    }\r\n  }\r\n  \r\n  function dragDropChanged(cm, value, old) {\r\n    var wasOn = old && old != CodeMirror.Init;\r\n    if (!value != !wasOn) {\r\n      var funcs = cm.display.dragFunctions;\r\n      var toggle = value ? on : off;\r\n      toggle(cm.display.scroller, \"dragstart\", funcs.start);\r\n      toggle(cm.display.scroller, \"dragenter\", funcs.enter);\r\n      toggle(cm.display.scroller, \"dragover\", funcs.over);\r\n      toggle(cm.display.scroller, \"dragleave\", funcs.leave);\r\n      toggle(cm.display.scroller, \"drop\", funcs.drop);\r\n    }\r\n  }\r\n\r\n  function wrappingChanged(cm) {\r\n    if (cm.options.lineWrapping) {\r\n      dom.addClass(cm.display.wrapper, \"CodeMirror-wrap\");\r\n      cm.display.sizer.style.minWidth = \"\";\r\n      cm.display.sizerWidth = null;\r\n    } else {\r\n      dom.rmClass(cm.display.wrapper, \"CodeMirror-wrap\");\r\n      cm.findMaxLine();\r\n    }\r\n    cm.estimateLineHeights();\r\n    cm.regChange(cm);\r\n    cm.clearCaches();\r\n    setTimeout(function(){\r\n      cm.updateScrollbars();\r\n    }, 100);\r\n  }\r\n\r\n  function guttersChanged(cm) {\r\n    cm.updateGutters();\r\n    cm.regChange();\r\n    setTimeout(function(){\r\n      cm.alignHorizontally();\r\n    }, 20);\r\n  }\r\n\r\n\r\n\r\n    // OPTION DEFAULTS\r\n\r\n  // The default configuration options.\r\n  var defaults = CodeMirror.defaults = {};\r\n  // Functions to run when options are changed.\r\n  var optionHandlers = CodeMirror.optionHandlers = {};\r\n\r\n  function option(name, deflt, handle, notOnInit) {\r\n    CodeMirror.defaults[name] = deflt;\r\n    if (handle) {\r\n      if (notOnInit) {\r\n        optionHandlers[name] = function(cm, val, old) {\r\n          if (old != Init) {\r\n            handle(cm, val, old);\r\n          }\r\n        };\r\n      } else {\r\n        optionHandlers[name] = handle;\r\n      }\r\n    }\r\n  }\r\n\r\n  // Passed to option handlers when there is no old value.\r\n  var Init = CodeMirror.Init = {\r\n    toString: function(){\r\n      return \"CodeMirror.Init\";\r\n    }\r\n  };\r\n\r\n  // These two are, on init, called from the construCoderCtor because they\r\n  // have to be initialized before the editor can start at all.\r\n  option(\"value\", \"\", function(cm, val) {\r\n    cm.setValue(val);\r\n  }, true);\r\n\r\n  option(\"mode\", null, function(cm, val) {\r\n    cm.doc.modeOption = val;\r\n    cm.loadMode();\r\n  }, true);\r\n\r\n  option(\"indentUnit\", 2, function(cm){\r\n    cm.loadMode();\r\n  }, true);\r\n\r\n  option(\"indentWithTabs\", false);\r\n  option(\"smartIndent\", true);\r\n  option(\"tabSize\", 4, function(cm) {\r\n    cm.resetModeState();\r\n    cm.clearCaches();\r\n    cm.regChange();\r\n  }, true);\r\n  option(\"lineSeparator\", null, function(cm, val) {\r\n    cm.doc.lineSep = val;\r\n    if (!val) return;\r\n    var newBreaks = [], lineNo = cm.doc.first;\r\n    cm.doc.iter(function(line) {\r\n      for (var pos = 0;;) {\r\n        var found = line.text.indexOf(val, pos);\r\n        if (found == -1) break;\r\n        pos = found + val.length;\r\n        newBreaks.push(Pos(lineNo, found));\r\n      }\r\n      lineNo++;\r\n    });\r\n    for (var i = newBreaks.length - 1; i >= 0; i--)\r\n      replaceRange(cm.doc, val, newBreaks[i], Pos(newBreaks[i].line, newBreaks[i].ch + val.length))\r\n  });\r\n  option(\"specialChars\", /[\\u0000-\\u001f\\u007f\\u00ad\\u200b-\\u200f\\u2028\\u2029\\ufeff]/g, function(cm, val, old) {\r\n    cm.state.specialChars = new RegExp(val.source + (val.test(\"\\t\") ? \"\" : \"|\\t\"), \"g\");\r\n    if (old != CodeMirror.Init) cm.refresh();\r\n  });\r\n  option(\"specialCharPlaceholder\", defaultSpecialCharPlaceholder, function(cm) {cm.refresh();}, true);\r\n  option(\"electricChars\", true);\r\n  option(\"inputStyle\", mobile ? \"contenteditable\" : \"textarea\", function() {\r\n    throw new Error(\"inputStyle can not (yet) be changed in a running editor\"); // FIXME\r\n  }, true);\r\n  option(\"rtlMoveVisually\", !windows);\r\n  option(\"wholeLineUpdateBefore\", true);\r\n\r\n  option(\"theme\", \"default\", function(cm) {\r\n    themeChanged(cm);\r\n    guttersChanged(cm);\r\n  }, true);\r\n  option(\"keyMap\", \"default\", function(cm, val, old) {\r\n    var next = getKeyMap(val);\r\n    var prev = old != CodeMirror.Init && getKeyMap(old);\r\n    if (prev && prev.detach) prev.detach(cm, next);\r\n    if (next.attach) next.attach(cm, prev || null);\r\n  });\r\n  option(\"extraKeys\", null);\r\n\r\n  option(\"lineWrapping\", false, wrappingChanged, true);\r\n  option(\"gutters\", [], function(cm) {\r\n    setGuttersForLineNumbers(cm.options);\r\n    guttersChanged(cm);\r\n  }, true);\r\n  option(\"fixedGutter\", true, function(cm, val) {\r\n    cm.display.gutters.style.left = val ? compensateForHScroll(cm.display) + \"px\" : \"0\";\r\n    cm.refresh();\r\n  }, true);\r\n  option(\"coverGutterNextToScrollbar\", false, function(cm) {\r\n    cm.updateScrollbars();\r\n  }, true);\r\n  option(\"scrollbarStyle\", \"native\", function(cm) {\r\n    initScrollbars(cm);\r\n    updateScrollbars(cm);\r\n    cm.display.scrollbars.setScrollTop(cm.doc.scrollTop);\r\n    cm.display.scrollbars.setScrollLeft(cm.doc.scrollLeft);\r\n  }, true);\r\n  option(\"lineNumbers\", false, function(cm) {\r\n    setGuttersForLineNumbers(cm.options);\r\n    guttersChanged(cm);\r\n  }, true);\r\n\r\n  option(\"firstLineNumber\", 1, guttersChanged, true);\r\n  option(\"lineNumberFormatter\", function(integer) {\r\n    return integer;\r\n  }, guttersChanged, true);\r\n  option(\"showCursorWhenSelecting\", false, updateSelection, true);\r\n\r\n  option(\"resetSelectionOnContextMenu\", true);\r\n  option(\"lineWiseCopyCut\", true);\r\n\r\n  option(\"readOnly\", false, function(cm, val) {\r\n    if (val == \"nocursor\") {\r\n      onBlur(cm);\r\n      cm.display.input.blur();\r\n      cm.display.disabled = true;\r\n    } else {\r\n      cm.display.disabled = false;\r\n    }\r\n    cm.display.input.readOnlyChanged(val)\r\n  });\r\n  option(\"disableInput\", false, function(cm, val) {if (!val) cm.display.input.reset();}, true);\r\n  option(\"dragDrop\", true, dragDropChanged);\r\n  option(\"allowDropFileTypes\", null);\r\n\r\n  option(\"cursorBlinkRate\", 530);\r\n  option(\"cursorScrollMargin\", 0);\r\n  option(\"cursorHeight\", 1, function(cm) {\r\n    cm.updateSelection();\r\n  }, true);\r\n  option(\"singleCursorHeightPerLine\", true, function(cm){\r\n    cm.updateSelection();\r\n  }, true);\r\n  option(\"workTime\", 100);\r\n  option(\"workDelay\", 100);\r\n  option(\"flattenSpans\", true, function(cm){\r\n    cm.resetModeState();\r\n  }, true);\r\n  option(\"addModeClass\", false, function(cm){\r\n    cm.resetModeState();\r\n  }, true);\r\n  option(\"pollInterval\", 100);\r\n  option(\"undoDepth\", 200, function(cm, val){\r\n    cm.doc.history.undoDepth = val;\r\n  });\r\n  option(\"historyEventDelay\", 1250);\r\n  option(\"viewportMargin\", 10, function(cm){\r\n    cm.refresh();\r\n  }, true);\r\n  option(\"maxHighlightLength\", 10000, function(cm){\r\n    cm.resetModeState();\r\n  }, true);\r\n  option(\"moveInputWithCursor\", true, function(cm, val) {\r\n    if (!val) cm.display.input.resetPosition();\r\n  });\r\n\r\n  option(\"tabindex\", null, function(cm, val) {\r\n    cm.display.input.getField().tabIndex = val || \"\";\r\n  });\r\n  option(\"autofocus\", null);\r\n\r\n\r\n});\r\n"]}