{"version":3,"sources":["primitives/line/pos.js"],"names":["define","klass","CoderCtor","Pos","_construct","line","ch","this","compareTo","other","clone","thie","compare","a","b"],"mappings":";;;;;;;AAAAA,QACE,sBACA,gBACA,SAASC,EAAOC,GAIhB,GAAIC,GAAMF,GACRG,WAAa,SAASC,EAAKC,GACzBC,KAAKF,KAAOA,EACZE,KAAKD,GAAKA,GAEZE,UAAY,SAASC,GACnB,MAAOF,MAAKF,KAAOI,EAAMJ,MAAQE,KAAKD,GAAKG,EAAMH,IAGnDI,MAAQ,WACN,MAAO,IAAIP,GAAII,KAAKF,KAAKM,KAAKL,MAMvBH,GAAIS,QAAU,SAASC,EAAGC,GACnC,MAAOD,GAAEL,UAAUM","file":"../../../primitives/line/pos.js","sourcesContent":["define([\r\n  \"skylark-langx/klass\",\r\n  \"../CoderCtor\"\r\n],function(klass, CoderCtor) {\r\n  // POSITION OBJECT\r\n\r\n  // A Pos instance represents a position within the text.\r\n  var Pos = klass({\r\n    _construct : function(line,ch) {\r\n      this.line = line; \r\n      this.ch = ch;\r\n    },\r\n    compareTo : function(other) {\r\n      return this.line - other.line || this.ch - other.ch; \r\n    },\r\n\r\n    clone : function() {\r\n      return new Pos(this.line,thie.ch);\r\n    }\r\n  });\r\n\r\n  // Compare two positions, return 0 if they are the same, a negative\r\n  // number when a is less, and a positive number otherwise.\r\n  var cmp =  Pos.compare = function(a, b) { \r\n    return a.compareTo(b);\r\n  };\r\n\r\n  function copyPos(x) {\r\n    return x.clone();\r\n  }\r\n\r\n  function maxPos(a, b) { \r\n    return cmp(a, b) < 0 ? b : a; \r\n  }\r\n\r\n  function minPos(a, b) { \r\n    return cmp(a, b) < 0 ? a : b; \r\n  }\r\n\r\n  // Most of the external API clips given positions to make sure they\r\n  // actually exist within the document.\r\n  function clipLine(doc, n) {\r\n    return Math.max(doc.first, Math.min(n, doc.first + doc.size - 1));\r\n  }\r\n  \r\n  function clipPos(doc, pos) {\r\n    if (pos.line < doc.first) return Pos(doc.first, 0);\r\n    var last = doc.first + doc.size - 1;\r\n    if (pos.line > last) return Pos(last, getLine(doc, last).text.length);\r\n    return clipToLen(pos, getLine(doc, pos.line).text.length);\r\n  }\r\n\r\n  function clipToLen(pos, linelen) {\r\n    var ch = pos.ch;\r\n    if (ch == null || ch > linelen) return Pos(pos.line, linelen);\r\n    else if (ch < 0) return Pos(pos.line, 0);\r\n    else return pos;\r\n  }\r\n\r\n  function isLine(doc, l) {\r\n    return l >= doc.first && l < doc.first + doc.size;\r\n  }\r\n  \r\n  function clipPosArray(doc, array) {\r\n    for (var out = [], i = 0; i < array.length; i++) out[i] = clipPos(doc, array[i]);\r\n    return out;\r\n  }\r\n\r\n\r\n});\r\n"]}