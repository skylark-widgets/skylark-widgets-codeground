{"version":3,"sources":["skylark-ui-coder.js"],"names":["factory","globals","absolute","relative","base","stack","split","parts","pop","i","length","push","join","define","require","isAmd","amd","isCmd","exports","map","id","deps","dep","hasOwnProperty","Error","module","args","forEach","apply","window","skylarkjs","Evented","inherit","CoderCtorName","elt","tag","content","className","style","e","document","createElement","cssText","appendChild","createTextNode","removeChildren","count","childNodes","removeChild","firstChild","removeChildrenAndAdd","parent","contains","child","nodeType","parentNode","host","activeElt","activeElement","root","classTest","cls","RegExp","rmClass","node","current","match","exec","after","slice","index","addClass","test","joinClasses","a","b","as","range","createRange","start","end","endNode","r","setEnd","setStart","body","createTextRange","moveToElementText","collapse","moveEnd","moveStart","ie","ie_version","dom","CoderCtor","partial","ensureFocus","cm","this","state","focused","display","input","focus","onFocus","delayBlurEvent","delayingBlurEvent","setTimeout","onBlur","options","readOnly","signal","wrapper","curOp","selForContextMenu","doc","sel","reset","webkit","receivedFocus","restartBlink","clearInterval","blinker","shift","getStateBefore","n","precise","mode","startState","pos","findStartLine","first","getLine","stateAfter","copyState","iter","line","processLine","text","save","viewFrom","viewTo","frontier","registerEventHandlers","finishTouch","d","activeTouch","touchFinished","prevTouch","Date","isMouseLikeTouchEvent","touches","touch","radiusX","radiusY","farAway","other","left","dx","dy","top","on","scroller","operation","onMouseDown","signalDOMEvent","posFromMouse","clickInGutter","eventInWidget","e_preventDefault","word","findWordAt","extendSelection","anchor","head","captureRightClick","onContextMenu","clearTimeout","now","moved","prev","pageX","pageY","coordsChar","Range","Pos","clipPos","setSelection","clientHeight","setScrollTop","scrollTop","setScrollLeft","scrollLeft","onScrollWheel","dragFunctions","enter","e_stop","over","onDragOver","onDragStart","drop","onDrop","leave","clearDragCursor","inp","getField","onKeyUp","call","onKeyDown","onKeyPress","bind","findPosH","dir","unit","visually","findNextLine","l","size","lineObj","moveOnce","boundToLine","next","moveVisually","moveLogically","ch","lineRight","lineLeft","origDir","sawType","group","helper","getHelper","cur","charAt","type","isWordChar","result","skipAtomic","cmp","hitSide","findPosV","y","x","pageSize","Math","min","innerHeight","documentElement","textHeight","bottom","target","outside","height","_construct","place","CodeMirror","copyObj","defaults","setGuttersForLineNumbers","value","Doc","lineSeparator","inputStyles","inputStyle","Display","updateGutters","themeChanged","lineWrapping","autofocus","mobile","initScrollbars","keyMaps","overlays","modeGen","overwrite","suppressEdits","pasteIncoming","cutIncoming","selectingText","draggingText","highlight","Delayed","keySeq","specialChars","ensureGlobalHandlers","startOperation","forceUpdate","attachDoc","hasFocus","opt","optionHandlers","Init","maybeUpdateLineNumberWidth","finishInit","initHooks","endOperation","getComputedStyle","lineDiv","textRendering","textarea","TextareaInput","contenteditable","ContentEditableInput","prototype","constructor","setOption","option","old","getOption","getDoc","addKeyMap","getKeyMap","removeKeyMap","maps","name","splice","addOverlay","methodOp","spec","token","getMode","modeSpec","opaque","regChange","removeOverlay","indentLine","aggressive","smartIndent","isLine","indentSelection","how","ranges","empty","primIndex","ensureCursorVisible","from","to","max","lastLine","j","newRanges","replaceOneSelection","sel_dontScroll","getTokenAt","takeToken","getLineTokens","getTokenTypeAt","styles","getLineStyles","before","mid","cut","indexOf","getModeAt","innerMode","getHelpers","found","helpers","help","val","helperType","_global","pred","getStateAfter","clipLine","cursorCoords","primary","charCoords","coords","fromCoordSystem","lineAtHeight","viewOffset","heightAtLine","last","intoCoordSystem","defaultTextHeight","defaultCharWidth","charWidth","setGutterMarker","gutterID","changeLine","markers","gutterMarkers","isEmpty","clearGutter","regLineChange","lineInfo","lineNo","handle","textClass","bgClass","wrapClass","widgets","getViewport","addWidget","scroll","vert","horiz","position","setAttribute","setUneditable","sizer","vspace","hspace","clientWidth","lineSpace","offsetHeight","offsetWidth","right","scrollIntoView","triggerOnKeyDown","triggerOnKeyPress","triggerOnKeyUp","execCommand","cmd","commands","triggerElectric","amount","moveH","extendSelectionsBy","extend","rtlMoveVisually","sel_move","deleteH","somethingSelected","replaceSelection","deleteNearSelection","goalColumn","moveV","goals","headPos","addToScrollPos","xRel","startChar","check","toggleOverwrite","cursorDiv","isReadOnly","cantEdit","scrollTo","resolveScrollToPos","getScrollInfo","scrollHeight","scrollGap","barHeight","width","scrollWidth","barWidth","displayHeight","displayWidth","margin","cursorScrollMargin","scrollToPos","sPos","calculateScrollPos","setSize","interpret","String","clearLineMeasurementCache","noHScroll","f","runInOp","refresh","oldHeight","cachedTextHeight","clearCaches","updateGutterSpace","abs","estimateLineHeights","swapDoc","forceScroll","signalLater","getInputField","getWrapperElement","getScrollerElement","getGutterElement","gutters","eventMixin","version","$","main"],"mappings":"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","file":"../skylark-ui-coder.js","sourcesContent":["define('skylark-ui-coder/primitives/CoderCtor',[\r\n\t\"skylark-langx/Evented\"\r\n],function(Evented){\r\n\treturn Evented.inherit({\r\n\t\tCoderCtorName : \"Coder\"\r\n\t});\r\n});\ndefine('skylark-ui-coder/primitives/util/dom',[],function(){\r\n  // DOM UTILITIES\r\n  function elt(tag, content, className, style) {\r\n    var e = document.createElement(tag);\r\n    if (className) e.className = className;\r\n    if (style) e.style.cssText = style;\r\n    if (typeof content == \"string\") e.appendChild(document.createTextNode(content));\r\n    else if (content) for (var i = 0; i < content.length; ++i) e.appendChild(content[i]);\r\n    return e;\r\n  }\r\n\r\n  var range;\r\n  if (document.createRange) {\r\n    range = function(node, start, end, endNode) {\r\n      var r = document.createRange();\r\n      r.setEnd(endNode || node, end);\r\n      r.setStart(node, start);\r\n      return r;\r\n    };\r\n  } else {\r\n    range = function(node, start, end) {\r\n      var r = document.body.createTextRange();\r\n      try { \r\n        r.moveToElementText(node.parentNode); }\r\n      catch(e) { \r\n        return r; \r\n      }\r\n      r.collapse(true);\r\n      r.moveEnd(\"character\", end);\r\n      r.moveStart(\"character\", start);\r\n      return r;\r\n    };\r\n  }\r\n\r\n  function removeChildren(e) {\r\n    for (var count = e.childNodes.length; count > 0; --count)\r\n      e.removeChild(e.firstChild);\r\n    return e;\r\n  }\r\n\r\n  function removeChildrenAndAdd(parent, e) {\r\n    return removeChildren(parent).appendChild(e);\r\n  }\r\n\r\n  function contains(parent, child) {\r\n    if (child.nodeType == 3) // Android browser always returns false when child is a textnode\r\n      child = child.parentNode;\r\n    if (parent.contains)\r\n      return parent.contains(child);\r\n    do {\r\n      if (child.nodeType == 11) child = child.host;\r\n      if (child == parent) return true;\r\n    } while (child = child.parentNode);\r\n  };\r\n\r\n  function activeElt() {\r\n    var activeElement = document.activeElement;\r\n    while (activeElement && activeElement.root && activeElement.root.activeElement)\r\n      activeElement = activeElement.root.activeElement;\r\n    return activeElement;\r\n  }\r\n\r\n  // Older versions of IE throws unspecified error when touching\r\n  // document.activeElement in some cases (during loading, in iframe)\r\n  if (ie && ie_version < 11) activeElt = function() {\r\n    try { return document.activeElement; }\r\n    catch(e) { \r\n      return document.body; \r\n    }\r\n  };\r\n\r\n  function classTest(cls) { \r\n    return new RegExp(\"(^|\\\\s)\" + cls + \"(?:$|\\\\s)\\\\s*\"); \r\n  }\r\n  \r\n  function rmClass(node, cls) {\r\n    var current = node.className;\r\n    var match = classTest(cls).exec(current);\r\n    if (match) {\r\n      var after = current.slice(match.index + match[0].length);\r\n      node.className = current.slice(0, match.index) + (after ? match[1] + after : \"\");\r\n    }\r\n  };\r\n  \r\n  function addClass (node, cls) {\r\n    var current = node.className;\r\n    if (!classTest(cls).test(current)) node.className += (current ? \" \" : \"\") + cls;\r\n  };\r\n\r\n  function joinClasses(a, b) {\r\n    var as = a.split(\" \");\r\n    for (var i = 0; i < as.length; i++)\r\n      if (as[i] && !classTest(as[i]).test(b)) b += \" \" + as[i];\r\n    return b;\r\n  }\r\n\r\n  return {\r\n    elt : elt,\r\n    range : range,\r\n    removeChildren : removeChildren,\r\n    removeChildrenAndAdd : removeChildrenAndAdd,\r\n    contains : contains,\r\n    activeElt : activeElt,\r\n    rmClass : rmClass,\r\n    addClass : addClass,\r\n    joinClasses : joinClasses\r\n\r\n  };\r\n\r\n});\r\n\ndefine('skylark-ui-coder/primitives/display/focus',[\r\n  \"../util/dom\",\r\n  \"../CoderCtor\"\r\n],function(dom, CoderCtor) {\r\n\r\n  // FOCUS/BLUR EVENTS\r\n  CoderCtor.partial({\r\n    ensureFocus : function () {\r\n      var cm = this;\r\n\r\n      if (!cm.state.focused) { \r\n        cm.display.input.focus(); \r\n        cm.onFocus(); \r\n      }\r\n    },\r\n\r\n    delayBlurEvent : function () {\r\n      var cm = this;\r\n\r\n      cm.state.delayingBlurEvent = true;\r\n      setTimeout(function() {\r\n        if (cm.state.delayingBlurEvent) {\r\n          cm.state.delayingBlurEvent = false;\r\n          cm.onBlur();\r\n        }\r\n      }, 100);\r\n    },\r\n\r\n    onFocus : function () {\r\n      var cm = this;\r\n      if (cm.state.delayingBlurEvent) {\r\n        cm.state.delayingBlurEvent = false;\r\n      }\r\n\r\n      if (cm.options.readOnly == \"nocursor\") return;\r\n      if (!cm.state.focused) {\r\n        cm.signal(\"focus\", cm);\r\n        cm.state.focused = true;\r\n        dom.addClass(cm.display.wrapper, \"CodeMirror-focused\");\r\n        // This test prevents this from firing when a context\r\n        // menu is closed (since the input reset would kill the\r\n        // select-all detection hack)\r\n        if (!cm.curOp && cm.display.selForContextMenu != cm.doc.sel) {\r\n          cm.display.input.reset();\r\n          if (webkit) setTimeout(function() { \r\n            cm.display.input.reset(true); \r\n          }, 20); // Issue #1730\r\n        }\r\n        cm.display.input.receivedFocus();\r\n      }\r\n      cm.restartBlink();\r\n    },\r\n    \r\n    onBlur : function () {\r\n      var cm = this;\r\n      if (cm.state.delayingBlurEvent) {\r\n        return;\r\n      }\r\n\r\n      if (cm.state.focused) {\r\n        signal(cm, \"blur\", cm);\r\n        cm.state.focused = false;\r\n        dom.rmClass(cm.display.wrapper, \"CodeMirror-focused\");\r\n      }\r\n      clearInterval(cm.display.blinker);\r\n      setTimeout(function() {\r\n        if (!cm.state.focused) cm.display.shift = false;\r\n      }, 150);\r\n    }\r\n\r\n  });\r\n\r\n});\r\n\ndefine('skylark-ui-coder/Coder',[\n  \"./primitives/CoderCtor\",\n  \"./primitives/display/focus\"\n], function(CoderCtor) {\n\n  // Original : CodeMirror 5.17.1\n  \"use strict\";\n\n  // util/browser.js\n\n\n  // EDITOR CONSTRUCTOR\n  CoderCtor.partial({\n    _construct : function (place, options) {\n      if (!(this instanceof CodeMirror)) return new CodeMirror(place, options);\n\n      this.options = options = options ? copyObj(options) : {};\n      // Determine effective options based on given values and defaults.\n      copyObj(defaults, options, false);\n      setGuttersForLineNumbers(options);\n\n      var doc = options.value;\n      if (typeof doc == \"string\") doc = new Doc(doc, options.mode, null, options.lineSeparator);\n      this.doc = doc;\n\n      var input = new CodeMirror.inputStyles[options.inputStyle](this);\n      var display = this.display = new Display(place, doc, input);\n      display.wrapper.CodeMirror = this;\n      updateGutters(this);\n      themeChanged(this);\n      if (options.lineWrapping)\n        this.display.wrapper.className += \" CodeMirror-wrap\";\n      if (options.autofocus && !mobile) display.input.focus();\n      initScrollbars(this);\n\n      this.state = {\n        keyMaps: [],  // stores maps added by addKeyMap\n        overlays: [], // highlighting overlays, as added by addOverlay\n        modeGen: 0,   // bumped when mode/overlay changes, used to invalidate highlighting info\n        overwrite: false,\n        delayingBlurEvent: false,\n        focused: false,\n        suppressEdits: false, // used to disable editing during key handlers when in readOnly mode\n        pasteIncoming: false, cutIncoming: false, // help recognize paste/cut edits in input.poll\n        selectingText: false,\n        draggingText: false,\n        highlight: new Delayed(), // stores highlight worker timeout\n        keySeq: null,  // Unfinished key sequence\n        specialChars: null\n      };\n\n      var cm = this;\n\n      // Override magic textarea content restore that IE sometimes does\n      // on our hidden textarea on reload\n      if (ie && ie_version < 11) setTimeout(function() { cm.display.input.reset(true); }, 20);\n\n      registerEventHandlers(this);\n      ensureGlobalHandlers();\n\n      startOperation(this);\n      this.curOp.forceUpdate = true;\n      attachDoc(this, doc);\n\n      if ((options.autofocus && !mobile) || cm.hasFocus())\n        setTimeout(bind(onFocus, this), 20);\n      else\n        onBlur(this);\n\n      for (var opt in optionHandlers) if (optionHandlers.hasOwnProperty(opt))\n        optionHandlers[opt](this, options[opt], Init);\n      maybeUpdateLineNumberWidth(this);\n      if (options.finishInit) options.finishInit(this);\n      for (var i = 0; i < initHooks.length; ++i) initHooks[i](this);\n      endOperation(this);\n      // Suppress optimizelegibility in Webkit, since it breaks text\n      // measuring on line wrapping boundaries.\n      if (webkit && options.lineWrapping &&\n          getComputedStyle(display.lineDiv).textRendering == \"optimizelegibility\")\n        display.lineDiv.style.textRendering = \"auto\";\n    },\n\n  });\n\n  // display/Display.js\n\n  // STATE UPDATES\n\n  // display/scrollbars.js\n\n  // display/line_numbers.js\n\n  // display/update_display.js \n \n  // display/update_lines.js\n\n\n  // display/update_line.js\n\n  // line/pos.js\n  \n  // display/focus.js\n   \n  // input/input.js\n\n  // input/Textaeainout.js\n\n  // input/ContentEditableInput.js\n\n\n  CodeMirror.inputStyles = {\"textarea\": TextareaInput, \"contenteditable\": ContentEditableInput};\n\n  // SELECTION / CURSOR\n\n  // Selection/Range -> skylark-utils-text\n\n  // skylark-utils-text/selection_updates.js\n\n  // display/highlight_worker.js\n\n  // line/highlight.js\n\n\n  function getStateBefore(cm, n, precise) {\n    var doc = cm.doc, display = cm.display;\n    if (!doc.mode.startState) return true;\n    var pos = findStartLine(cm, n, precise), state = pos > doc.first && getLine(doc, pos-1).stateAfter;\n    if (!state) state = startState(doc.mode);\n    else state = copyState(doc.mode, state);\n    doc.iter(pos, n, function(line) {\n      processLine(cm, line.text, state);\n      var save = pos == n - 1 || pos % 5 == 0 || pos >= display.viewFrom && pos < display.viewTo;\n      line.stateAfter = save ? copyState(doc.mode, state) : null;\n      ++pos;\n    });\n    if (precise) doc.frontier = pos;\n    return state;\n  }\n\n  // position_measurement.js\n\n  // util/operation_group.js\n\n  // line/line_data.js\n\n  // dislpay/view_tracking .js\n\n\n  // EVENT HANDLERS\n\n  // Attach the necessary event handlers when initializing the editor\n  function registerEventHandlers(cm) {\n    var d = cm.display;\n    on(d.scroller, \"mousedown\", operation(cm, onMouseDown));\n    // Older IE's will not fire a second mousedown for a double click\n    if (ie && ie_version < 11)\n      on(d.scroller, \"dblclick\", operation(cm, function(e) {\n        if (signalDOMEvent(cm, e)) return;\n        var pos = posFromMouse(cm, e);\n        if (!pos || clickInGutter(cm, e) || eventInWidget(cm.display, e)) return;\n        e_preventDefault(e);\n        var word = cm.findWordAt(pos);\n        extendSelection(cm.doc, word.anchor, word.head);\n      }));\n    else\n      on(d.scroller, \"dblclick\", function(e) { signalDOMEvent(cm, e) || e_preventDefault(e); });\n    // Some browsers fire contextmenu *after* opening the menu, at\n    // which point we can't mess with it anymore. Context menu is\n    // handled in onMouseDown for these browsers.\n    if (!captureRightClick) on(d.scroller, \"contextmenu\", function(e) {onContextMenu(cm, e);});\n\n    // Used to suppress mouse event handling when a touch happens\n    var touchFinished, prevTouch = {end: 0};\n    function finishTouch() {\n      if (d.activeTouch) {\n        touchFinished = setTimeout(function() {d.activeTouch = null;}, 1000);\n        prevTouch = d.activeTouch;\n        prevTouch.end = +new Date;\n      }\n    };\n    function isMouseLikeTouchEvent(e) {\n      if (e.touches.length != 1) return false;\n      var touch = e.touches[0];\n      return touch.radiusX <= 1 && touch.radiusY <= 1;\n    }\n    function farAway(touch, other) {\n      if (other.left == null) return true;\n      var dx = other.left - touch.left, dy = other.top - touch.top;\n      return dx * dx + dy * dy > 20 * 20;\n    }\n    on(d.scroller, \"touchstart\", function(e) {\n      if (!signalDOMEvent(cm, e) && !isMouseLikeTouchEvent(e)) {\n        clearTimeout(touchFinished);\n        var now = +new Date;\n        d.activeTouch = {start: now, moved: false,\n                         prev: now - prevTouch.end <= 300 ? prevTouch : null};\n        if (e.touches.length == 1) {\n          d.activeTouch.left = e.touches[0].pageX;\n          d.activeTouch.top = e.touches[0].pageY;\n        }\n      }\n    });\n    on(d.scroller, \"touchmove\", function() {\n      if (d.activeTouch) d.activeTouch.moved = true;\n    });\n    on(d.scroller, \"touchend\", function(e) {\n      var touch = d.activeTouch;\n      if (touch && !eventInWidget(d, e) && touch.left != null &&\n          !touch.moved && new Date - touch.start < 300) {\n        var pos = cm.coordsChar(d.activeTouch, \"page\"), range;\n        if (!touch.prev || farAway(touch, touch.prev)) // Single tap\n          range = new Range(pos, pos);\n        else if (!touch.prev.prev || farAway(touch, touch.prev.prev)) // Double tap\n          range = cm.findWordAt(pos);\n        else // Triple tap\n          range = new Range(Pos(pos.line, 0), clipPos(cm.doc, Pos(pos.line + 1, 0)));\n        cm.setSelection(range.anchor, range.head);\n        cm.focus();\n        e_preventDefault(e);\n      }\n      finishTouch();\n    });\n    on(d.scroller, \"touchcancel\", finishTouch);\n\n    // Sync scrolling between fake scrollbars and real scrollable\n    // area, ensure viewport is updated when scrolling.\n    on(d.scroller, \"scroll\", function() {\n      if (d.scroller.clientHeight) {\n        setScrollTop(cm, d.scroller.scrollTop);\n        setScrollLeft(cm, d.scroller.scrollLeft, true);\n        signal(cm, \"scroll\", cm);\n      }\n    });\n\n    // Listen to wheel events in order to try and update the viewport on time.\n    on(d.scroller, \"mousewheel\", function(e){onScrollWheel(cm, e);});\n    on(d.scroller, \"DOMMouseScroll\", function(e){onScrollWheel(cm, e);});\n\n    // Prevent wrapper from ever scrolling\n    on(d.wrapper, \"scroll\", function() { d.wrapper.scrollTop = d.wrapper.scrollLeft = 0; });\n\n    d.dragFunctions = {\n      enter: function(e) {if (!signalDOMEvent(cm, e)) e_stop(e);},\n      over: function(e) {if (!signalDOMEvent(cm, e)) { onDragOver(cm, e); e_stop(e); }},\n      start: function(e){onDragStart(cm, e);},\n      drop: operation(cm, onDrop),\n      leave: function(e) {if (!signalDOMEvent(cm, e)) { clearDragCursor(cm); }}\n    };\n\n    var inp = d.input.getField();\n    on(inp, \"keyup\", function(e) { onKeyUp.call(cm, e); });\n    on(inp, \"keydown\", operation(cm, onKeyDown));\n    on(inp, \"keypress\", operation(cm, onKeyPress));\n    on(inp, \"focus\", bind(onFocus, cm));\n    on(inp, \"blur\", bind(onBlur, cm));\n  }\n\n  // edit/options.js\n\n\n  // edit/mouse_events.js\n\n \n\n  // edit/drop_events.js\n\n  // display/scroll_events.js\n\n  // edit/key_events.js\n\n  // display/focus.js  \n\n  // edit/mouse_events.js\n\n  \n  // skylark-utils-text/change_measurement.js\n\n  // skylark-utils-text/changes\n\n  // display/scrolling.js\n\n\n  // API UTILITIES\n\n  // input/indent.js\n\n  // edit/deleteNearSelection.js\n\n\n\n  // Used for horizontal relative motion. Dir is -1 or 1 (left or\n  // right), unit can be \"char\", \"column\" (like char, but doesn't\n  // cross line boundaries), \"word\" (across next word), or \"group\" (to\n  // the start of next group of word or non-word-non-whitespace\n  // chars). The visually param controls whether, in right-to-left\n  // text, direction 1 means to move towards the next index in the\n  // string, or towards the character to the right of the current\n  // position. The resulting position will have a hitSide=true\n  // property if it reached the end of the document.\n  function findPosH(doc, pos, dir, unit, visually) {\n    var line = pos.line, ch = pos.ch, origDir = dir;\n    var lineObj = getLine(doc, line);\n    function findNextLine() {\n      var l = line + dir;\n      if (l < doc.first || l >= doc.first + doc.size) return false\n      line = l;\n      return lineObj = getLine(doc, l);\n    }\n    function moveOnce(boundToLine) {\n      var next = (visually ? moveVisually : moveLogically)(lineObj, ch, dir, true);\n      if (next == null) {\n        if (!boundToLine && findNextLine()) {\n          if (visually) ch = (dir < 0 ? lineRight : lineLeft)(lineObj);\n          else ch = dir < 0 ? lineObj.text.length : 0;\n        } else return false\n      } else ch = next;\n      return true;\n    }\n\n    if (unit == \"char\") {\n      moveOnce()\n    } else if (unit == \"column\") {\n      moveOnce(true)\n    } else if (unit == \"word\" || unit == \"group\") {\n      var sawType = null, group = unit == \"group\";\n      var helper = doc.cm && doc.cm.getHelper(pos, \"wordChars\");\n      for (var first = true;; first = false) {\n        if (dir < 0 && !moveOnce(!first)) break;\n        var cur = lineObj.text.charAt(ch) || \"\\n\";\n        var type = isWordChar(cur, helper) ? \"w\"\n          : group && cur == \"\\n\" ? \"n\"\n          : !group || /\\s/.test(cur) ? null\n          : \"p\";\n        if (group && !first && !type) type = \"s\";\n        if (sawType && sawType != type) {\n          if (dir < 0) {dir = 1; moveOnce();}\n          break;\n        }\n\n        if (type) sawType = type;\n        if (dir > 0 && !moveOnce(!first)) break;\n      }\n    }\n    var result = skipAtomic(doc, Pos(line, ch), pos, origDir, true);\n    if (!cmp(pos, result)) result.hitSide = true;\n    return result;\n  }\n\n  // For relative vertical movement. Dir may be -1 or 1. Unit can be\n  // \"page\" or \"line\". The resulting position will have a hitSide=true\n  // property if it reached the end of the document.\n  function findPosV(cm, pos, dir, unit) {\n    var doc = cm.doc, x = pos.left, y;\n    if (unit == \"page\") {\n      var pageSize = Math.min(cm.display.wrapper.clientHeight, window.innerHeight || document.documentElement.clientHeight);\n      y = pos.top + dir * (pageSize - (dir < 0 ? 1.5 : .5) * textHeight(cm.display));\n    } else if (unit == \"line\") {\n      y = dir > 0 ? pos.bottom + 3 : pos.top - 3;\n    }\n    for (;;) {\n      var target = coordsChar(cm, x, y);\n      if (!target.outside) break;\n      if (dir < 0 ? y <= 0 : y >= doc.height) { target.hitSide = true; break; }\n      y += dir * 5;\n    }\n    return target;\n  }\n\n  // EDITOR METHODS\n\n  // The publicly visible API. Note that methodOp(f) means\n  // 'wrap f in an operation, performed on its `this` parameter'.\n\n  // This is not the complete set of editor methods. Most of the\n  // methods defined on the Doc type are also injected into\n  // CodeMirror.prototype, for backwards compatibility and\n  // convenience.\n\n  CodeMirror.prototype = {\n    constructor: CodeMirror,\n    focus: function(){window.focus(); this.display.input.focus();},\n\n    setOption: function(option, value) {\n      var options = this.options, old = options[option];\n      if (options[option] == value && option != \"mode\") return;\n      options[option] = value;\n      if (optionHandlers.hasOwnProperty(option))\n        operation(this, optionHandlers[option])(this, value, old);\n    },\n\n    getOption: function(option) {return this.options[option];},\n    getDoc: function() {return this.doc;},\n\n    addKeyMap: function(map, bottom) {\n      this.state.keyMaps[bottom ? \"push\" : \"unshift\"](getKeyMap(map));\n    },\n    removeKeyMap: function(map) {\n      var maps = this.state.keyMaps;\n      for (var i = 0; i < maps.length; ++i)\n        if (maps[i] == map || maps[i].name == map) {\n          maps.splice(i, 1);\n          return true;\n        }\n    },\n\n    addOverlay: methodOp(function(spec, options) {\n      var mode = spec.token ? spec : CodeMirror.getMode(this.options, spec);\n      if (mode.startState) throw new Error(\"Overlays may not be stateful.\");\n      this.state.overlays.push({mode: mode, modeSpec: spec, opaque: options && options.opaque});\n      this.state.modeGen++;\n      regChange(this);\n    }),\n    removeOverlay: methodOp(function(spec) {\n      var overlays = this.state.overlays;\n      for (var i = 0; i < overlays.length; ++i) {\n        var cur = overlays[i].modeSpec;\n        if (cur == spec || typeof spec == \"string\" && cur.name == spec) {\n          overlays.splice(i, 1);\n          this.state.modeGen++;\n          regChange(this);\n          return;\n        }\n      }\n    }),\n\n    indentLine: methodOp(function(n, dir, aggressive) {\n      if (typeof dir != \"string\" && typeof dir != \"number\") {\n        if (dir == null) dir = this.options.smartIndent ? \"smart\" : \"prev\";\n        else dir = dir ? \"add\" : \"subtract\";\n      }\n      if (isLine(this.doc, n)) indentLine(this, n, dir, aggressive);\n    }),\n    indentSelection: methodOp(function(how) {\n      var ranges = this.doc.sel.ranges, end = -1;\n      for (var i = 0; i < ranges.length; i++) {\n        var range = ranges[i];\n        if (!range.empty()) {\n          var from = range.from(), to = range.to();\n          var start = Math.max(end, from.line);\n          end = Math.min(this.lastLine(), to.line - (to.ch ? 0 : 1)) + 1;\n          for (var j = start; j < end; ++j)\n            indentLine(this, j, how);\n          var newRanges = this.doc.sel.ranges;\n          if (from.ch == 0 && ranges.length == newRanges.length && newRanges[i].from().ch > 0)\n            replaceOneSelection(this.doc, i, new Range(from, newRanges[i].to()), sel_dontScroll);\n        } else if (range.head.line > end) {\n          indentLine(this, range.head.line, how, true);\n          end = range.head.line;\n          if (i == this.doc.sel.primIndex) ensureCursorVisible(this);\n        }\n      }\n    }),\n\n    // Fetch the parser token for a given character. Useful for hacks\n    // that want to inspect the mode state (say, for completion).\n    getTokenAt: function(pos, precise) {\n      return takeToken(this, pos, precise);\n    },\n\n    getLineTokens: function(line, precise) {\n      return takeToken(this, Pos(line), precise, true);\n    },\n\n    getTokenTypeAt: function(pos) {\n      pos = clipPos(this.doc, pos);\n      var styles = getLineStyles(this, getLine(this.doc, pos.line));\n      var before = 0, after = (styles.length - 1) / 2, ch = pos.ch;\n      var type;\n      if (ch == 0) type = styles[2];\n      else for (;;) {\n        var mid = (before + after) >> 1;\n        if ((mid ? styles[mid * 2 - 1] : 0) >= ch) after = mid;\n        else if (styles[mid * 2 + 1] < ch) before = mid + 1;\n        else { type = styles[mid * 2 + 2]; break; }\n      }\n      var cut = type ? type.indexOf(\"cm-overlay \") : -1;\n      return cut < 0 ? type : cut == 0 ? null : type.slice(0, cut - 1);\n    },\n\n    getModeAt: function(pos) {\n      var mode = this.doc.mode;\n      if (!mode.innerMode) return mode;\n      return CodeMirror.innerMode(mode, this.getTokenAt(pos).state).mode;\n    },\n\n    getHelper: function(pos, type) {\n      return this.getHelpers(pos, type)[0];\n    },\n\n    getHelpers: function(pos, type) {\n      var found = [];\n      if (!helpers.hasOwnProperty(type)) return found;\n      var help = helpers[type], mode = this.getModeAt(pos);\n      if (typeof mode[type] == \"string\") {\n        if (help[mode[type]]) found.push(help[mode[type]]);\n      } else if (mode[type]) {\n        for (var i = 0; i < mode[type].length; i++) {\n          var val = help[mode[type][i]];\n          if (val) found.push(val);\n        }\n      } else if (mode.helperType && help[mode.helperType]) {\n        found.push(help[mode.helperType]);\n      } else if (help[mode.name]) {\n        found.push(help[mode.name]);\n      }\n      for (var i = 0; i < help._global.length; i++) {\n        var cur = help._global[i];\n        if (cur.pred(mode, this) && indexOf(found, cur.val) == -1)\n          found.push(cur.val);\n      }\n      return found;\n    },\n\n    getStateAfter: function(line, precise) {\n      var doc = this.doc;\n      line = clipLine(doc, line == null ? doc.first + doc.size - 1: line);\n      return getStateBefore(this, line + 1, precise);\n    },\n\n    cursorCoords: function(start, mode) {\n      var pos, range = this.doc.sel.primary();\n      if (start == null) pos = range.head;\n      else if (typeof start == \"object\") pos = clipPos(this.doc, start);\n      else pos = start ? range.from() : range.to();\n      return cursorCoords(this, pos, mode || \"page\");\n    },\n\n    charCoords: function(pos, mode) {\n      return charCoords(this, clipPos(this.doc, pos), mode || \"page\");\n    },\n\n    coordsChar: function(coords, mode) {\n      coords = fromCoordSystem(this, coords, mode || \"page\");\n      return coordsChar(this, coords.left, coords.top);\n    },\n\n    lineAtHeight: function(height, mode) {\n      height = fromCoordSystem(this, {top: height, left: 0}, mode || \"page\").top;\n      return lineAtHeight(this.doc, height + this.display.viewOffset);\n    },\n    heightAtLine: function(line, mode) {\n      var end = false, lineObj;\n      if (typeof line == \"number\") {\n        var last = this.doc.first + this.doc.size - 1;\n        if (line < this.doc.first) line = this.doc.first;\n        else if (line > last) { line = last; end = true; }\n        lineObj = getLine(this.doc, line);\n      } else {\n        lineObj = line;\n      }\n      return intoCoordSystem(this, lineObj, {top: 0, left: 0}, mode || \"page\").top +\n        (end ? this.doc.height - heightAtLine(lineObj) : 0);\n    },\n\n    defaultTextHeight: function() { return textHeight(this.display); },\n    defaultCharWidth: function() { return charWidth(this.display); },\n\n    setGutterMarker: methodOp(function(line, gutterID, value) {\n      return this.doc.changeLine(line, \"gutter\", function(line) {\n        var markers = line.gutterMarkers || (line.gutterMarkers = {});\n        markers[gutterID] = value;\n        if (!value && isEmpty(markers)) line.gutterMarkers = null;\n        return true;\n      });\n    }),\n\n    clearGutter: methodOp(function(gutterID) {\n      var cm = this, doc = cm.doc, i = doc.first;\n      doc.iter(function(line) {\n        if (line.gutterMarkers && line.gutterMarkers[gutterID]) {\n          line.gutterMarkers[gutterID] = null;\n          regLineChange(cm, i, \"gutter\");\n          if (isEmpty(line.gutterMarkers)) line.gutterMarkers = null;\n        }\n        ++i;\n      });\n    }),\n\n    lineInfo: function(line) {\n      if (typeof line == \"number\") {\n        if (!isLine(this.doc, line)) return null;\n        var n = line;\n        line = getLine(this.doc, line);\n        if (!line) return null;\n      } else {\n        var n = lineNo(line);\n        if (n == null) return null;\n      }\n      return {line: n, handle: line, text: line.text, gutterMarkers: line.gutterMarkers,\n              textClass: line.textClass, bgClass: line.bgClass, wrapClass: line.wrapClass,\n              widgets: line.widgets};\n    },\n\n    getViewport: function() { return {from: this.display.viewFrom, to: this.display.viewTo};},\n\n    addWidget: function(pos, node, scroll, vert, horiz) {\n      var display = this.display;\n      pos = cursorCoords(this, clipPos(this.doc, pos));\n      var top = pos.bottom, left = pos.left;\n      node.style.position = \"absolute\";\n      node.setAttribute(\"cm-ignore-events\", \"true\");\n      this.display.input.setUneditable(node);\n      display.sizer.appendChild(node);\n      if (vert == \"over\") {\n        top = pos.top;\n      } else if (vert == \"above\" || vert == \"near\") {\n        var vspace = Math.max(display.wrapper.clientHeight, this.doc.height),\n        hspace = Math.max(display.sizer.clientWidth, display.lineSpace.clientWidth);\n        // Default to positioning above (if specified and possible); otherwise default to positioning below\n        if ((vert == 'above' || pos.bottom + node.offsetHeight > vspace) && pos.top > node.offsetHeight)\n          top = pos.top - node.offsetHeight;\n        else if (pos.bottom + node.offsetHeight <= vspace)\n          top = pos.bottom;\n        if (left + node.offsetWidth > hspace)\n          left = hspace - node.offsetWidth;\n      }\n      node.style.top = top + \"px\";\n      node.style.left = node.style.right = \"\";\n      if (horiz == \"right\") {\n        left = display.sizer.clientWidth - node.offsetWidth;\n        node.style.right = \"0px\";\n      } else {\n        if (horiz == \"left\") left = 0;\n        else if (horiz == \"middle\") left = (display.sizer.clientWidth - node.offsetWidth) / 2;\n        node.style.left = left + \"px\";\n      }\n      if (scroll)\n        scrollIntoView(this, left, top, left + node.offsetWidth, top + node.offsetHeight);\n    },\n\n    triggerOnKeyDown: methodOp(onKeyDown),\n    triggerOnKeyPress: methodOp(onKeyPress),\n    triggerOnKeyUp: onKeyUp,\n\n    execCommand: function(cmd) {\n      if (commands.hasOwnProperty(cmd))\n        return commands[cmd].call(null, this);\n    },\n\n    triggerElectric: methodOp(function(text) { triggerElectric(this, text); }),\n\n    findPosH: function(from, amount, unit, visually) {\n      var dir = 1;\n      if (amount < 0) { dir = -1; amount = -amount; }\n      for (var i = 0, cur = clipPos(this.doc, from); i < amount; ++i) {\n        cur = findPosH(this.doc, cur, dir, unit, visually);\n        if (cur.hitSide) break;\n      }\n      return cur;\n    },\n\n    moveH: methodOp(function(dir, unit) {\n      var cm = this;\n      cm.extendSelectionsBy(function(range) {\n        if (cm.display.shift || cm.doc.extend || range.empty())\n          return findPosH(cm.doc, range.head, dir, unit, cm.options.rtlMoveVisually);\n        else\n          return dir < 0 ? range.from() : range.to();\n      }, sel_move);\n    }),\n\n    deleteH: methodOp(function(dir, unit) {\n      var sel = this.doc.sel, doc = this.doc;\n      if (sel.somethingSelected())\n        doc.replaceSelection(\"\", null, \"+delete\");\n      else\n        deleteNearSelection(this, function(range) {\n          var other = findPosH(doc, range.head, dir, unit, false);\n          return dir < 0 ? {from: other, to: range.head} : {from: range.head, to: other};\n        });\n    }),\n\n    findPosV: function(from, amount, unit, goalColumn) {\n      var dir = 1, x = goalColumn;\n      if (amount < 0) { dir = -1; amount = -amount; }\n      for (var i = 0, cur = clipPos(this.doc, from); i < amount; ++i) {\n        var coords = cursorCoords(this, cur, \"div\");\n        if (x == null) x = coords.left;\n        else coords.left = x;\n        cur = findPosV(this, coords, dir, unit);\n        if (cur.hitSide) break;\n      }\n      return cur;\n    },\n\n    moveV: methodOp(function(dir, unit) {\n      var cm = this, doc = this.doc, goals = [];\n      var collapse = !cm.display.shift && !doc.extend && doc.sel.somethingSelected();\n      doc.extendSelectionsBy(function(range) {\n        if (collapse)\n          return dir < 0 ? range.from() : range.to();\n        var headPos = cursorCoords(cm, range.head, \"div\");\n        if (range.goalColumn != null) headPos.left = range.goalColumn;\n        goals.push(headPos.left);\n        var pos = findPosV(cm, headPos, dir, unit);\n        if (unit == \"page\" && range == doc.sel.primary())\n          addToScrollPos(cm, null, charCoords(cm, pos, \"div\").top - headPos.top);\n        return pos;\n      }, sel_move);\n      if (goals.length) for (var i = 0; i < doc.sel.ranges.length; i++)\n        doc.sel.ranges[i].goalColumn = goals[i];\n    }),\n\n    // Find the word at the given position (as returned by coordsChar).\n    findWordAt: function(pos) {\n      var doc = this.doc, line = getLine(doc, pos.line).text;\n      var start = pos.ch, end = pos.ch;\n      if (line) {\n        var helper = this.getHelper(pos, \"wordChars\");\n        if ((pos.xRel < 0 || end == line.length) && start) --start; else ++end;\n        var startChar = line.charAt(start);\n        var check = isWordChar(startChar, helper)\n          ? function(ch) { return isWordChar(ch, helper); }\n          : /\\s/.test(startChar) ? function(ch) {return /\\s/.test(ch);}\n          : function(ch) {return !/\\s/.test(ch) && !isWordChar(ch);};\n        while (start > 0 && check(line.charAt(start - 1))) --start;\n        while (end < line.length && check(line.charAt(end))) ++end;\n      }\n      return new Range(Pos(pos.line, start), Pos(pos.line, end));\n    },\n\n    toggleOverwrite: function(value) {\n      if (value != null && value == this.state.overwrite) return;\n      if (this.state.overwrite = !this.state.overwrite)\n        addClass(this.display.cursorDiv, \"CodeMirror-overwrite\");\n      else\n        rmClass(this.display.cursorDiv, \"CodeMirror-overwrite\");\n\n      signal(this, \"overwriteToggle\", this, this.state.overwrite);\n    },\n    hasFocus: function() { return this.display.input.getField() == activeElt(); },\n    isReadOnly: function() { return !!(this.options.readOnly || this.doc.cantEdit); },\n\n    scrollTo: methodOp(function(x, y) {\n      if (x != null || y != null) resolveScrollToPos(this);\n      if (x != null) this.curOp.scrollLeft = x;\n      if (y != null) this.curOp.scrollTop = y;\n    }),\n    getScrollInfo: function() {\n      var scroller = this.display.scroller;\n      return {left: scroller.scrollLeft, top: scroller.scrollTop,\n              height: scroller.scrollHeight - scrollGap(this) - this.display.barHeight,\n              width: scroller.scrollWidth - scrollGap(this) - this.display.barWidth,\n              clientHeight: displayHeight(this), clientWidth: displayWidth(this)};\n    },\n\n    scrollIntoView: methodOp(function(range, margin) {\n      if (range == null) {\n        range = {from: this.doc.sel.primary().head, to: null};\n        if (margin == null) margin = this.options.cursorScrollMargin;\n      } else if (typeof range == \"number\") {\n        range = {from: Pos(range, 0), to: null};\n      } else if (range.from == null) {\n        range = {from: range, to: null};\n      }\n      if (!range.to) range.to = range.from;\n      range.margin = margin || 0;\n\n      if (range.from.line != null) {\n        resolveScrollToPos(this);\n        this.curOp.scrollToPos = range;\n      } else {\n        var sPos = calculateScrollPos(this, Math.min(range.from.left, range.to.left),\n                                      Math.min(range.from.top, range.to.top) - range.margin,\n                                      Math.max(range.from.right, range.to.right),\n                                      Math.max(range.from.bottom, range.to.bottom) + range.margin);\n        this.scrollTo(sPos.scrollLeft, sPos.scrollTop);\n      }\n    }),\n\n    setSize: methodOp(function(width, height) {\n      var cm = this;\n      function interpret(val) {\n        return typeof val == \"number\" || /^\\d+$/.test(String(val)) ? val + \"px\" : val;\n      }\n      if (width != null) cm.display.wrapper.style.width = interpret(width);\n      if (height != null) cm.display.wrapper.style.height = interpret(height);\n      if (cm.options.lineWrapping) clearLineMeasurementCache(this);\n      var lineNo = cm.display.viewFrom;\n      cm.doc.iter(lineNo, cm.display.viewTo, function(line) {\n        if (line.widgets) for (var i = 0; i < line.widgets.length; i++)\n          if (line.widgets[i].noHScroll) { regLineChange(cm, lineNo, \"widget\"); break; }\n        ++lineNo;\n      });\n      cm.curOp.forceUpdate = true;\n      signal(cm, \"refresh\", this);\n    }),\n\n    operation: function(f){return runInOp(this, f);},\n\n    refresh: methodOp(function() {\n      var oldHeight = this.display.cachedTextHeight;\n      regChange(this);\n      this.curOp.forceUpdate = true;\n      clearCaches(this);\n      this.scrollTo(this.doc.scrollLeft, this.doc.scrollTop);\n      updateGutterSpace(this);\n      if (oldHeight == null || Math.abs(oldHeight - textHeight(this.display)) > .5)\n        estimateLineHeights(this);\n      signal(this, \"refresh\", this);\n    }),\n\n    swapDoc: methodOp(function(doc) {\n      var old = this.doc;\n      old.cm = null;\n      attachDoc(this, doc);\n      clearCaches(this);\n      this.display.input.reset();\n      this.scrollTo(doc.scrollLeft, doc.scrollTop);\n      this.curOp.forceScroll = true;\n      signalLater(this, \"swapDoc\", this, old);\n      return old;\n    }),\n\n    getInputField: function(){return this.display.input.getField();},\n    getWrapperElement: function(){return this.display.wrapper;},\n    getScrollerElement: function(){return this.display.scroller;},\n    getGutterElement: function(){return this.display.gutters;}\n  };\n  eventMixin(CodeMirror);\n\n  // options.js\n\n  // models.js\n\n  // edit/commands.js\n  \n  // input/keymap.js\n\n\n  // edit/fromTextArea.js\n\n  // skylark-utils-text/StringSteam.js\n\n\n\n   // skylark-utils-text/mark_text.js\n\n   // line/spans.js\n\n\n   // line/ LineWidget.js\n\n  // LINE WIDGETS\n\n\n  // LINE DATA STRUCTURE\n\n  \n  // utils_line.js\n\n\n  // skylark-utils-text/history\n\n\n  // event.js\n  // misc.js\n\n  // edit/global_event.js\n\n  // util/feature_detection.js\n\n  // input/keynames.js\n\n  // util/bidi.js\n\n  CodeMirror.version = \"5.17.1\";\n\n  return CodeMirror;\n  \n});\n\n\ndefine('skylark-ui-coder/main',[\r\n    \"skylark-utils/query\",\r\n    \"./Coder\"\r\n], function($) {\r\n    return $;\r\n});\ndefine('skylark-ui-coder', ['skylark-ui-coder/main'], function (main) { return main; });\n\n"]}